// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dct,hls_ip_2017_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.727437,HLS_SYN_LAT=895,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=8,HLS_SYN_FF=736,HLS_SYN_LUT=1332}" *)

module dct (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state5 = 6'd4;
parameter    ap_ST_fsm_state6 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state10 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [5:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_134;
reg   [3:0] r_i_reg_145;
reg   [3:0] c_i_reg_156;
reg   [6:0] indvar_flatten2_reg_167;
reg   [3:0] r_i2_reg_178;
reg   [3:0] c_i6_reg_189;
wire   [0:0] exitcond_flatten_fu_222_p2;
reg   [0:0] exitcond_flatten_reg_411;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_flatten_reg_411;
wire   [6:0] indvar_flatten_next_fu_228_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] c_i_mid2_fu_246_p3;
reg   [3:0] c_i_mid2_reg_420;
reg   [3:0] ap_reg_pp0_iter1_c_i_mid2_reg_420;
wire   [3:0] tmp_i_mid2_v_v_fu_254_p3;
reg   [3:0] tmp_i_mid2_v_v_reg_427;
reg   [3:0] ap_reg_pp0_iter1_tmp_i_mid2_v_v_reg_427;
wire   [2:0] tmp_fu_262_p1;
reg   [2:0] tmp_reg_433;
wire   [3:0] c_fu_287_p2;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] exitcond_flatten2_fu_317_p2;
reg   [0:0] exitcond_flatten2_reg_448;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_flag00011001;
reg   [0:0] ap_reg_pp1_iter1_exitcond_flatten2_reg_448;
wire   [6:0] indvar_flatten_next2_fu_323_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] c_i6_mid2_fu_341_p3;
reg   [3:0] c_i6_mid2_reg_457;
wire   [3:0] tmp_i4_mid2_v_fu_349_p3;
reg   [3:0] tmp_i4_mid2_v_reg_464;
wire   [2:0] tmp_1_fu_357_p1;
reg   [2:0] tmp_1_reg_470;
wire   [5:0] tmp_4_i_fu_396_p2;
reg   [5:0] tmp_4_i_reg_480;
wire   [3:0] c_1_fu_402_p2;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state6;
wire    grp_dct_2d_fu_200_ap_done;
wire    ap_block_pp1_stage0_flag00011011;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter2;
reg   [5:0] buf_2d_in_address0;
reg    buf_2d_in_ce0;
reg    buf_2d_in_we0;
wire   [15:0] buf_2d_in_q0;
reg    buf_2d_in_ce1;
wire   [15:0] buf_2d_in_q1;
reg   [5:0] buf_2d_out_address0;
reg    buf_2d_out_ce0;
reg    buf_2d_out_we0;
wire   [15:0] buf_2d_out_q0;
wire    grp_dct_2d_fu_200_ap_start;
wire    grp_dct_2d_fu_200_ap_idle;
wire    grp_dct_2d_fu_200_ap_ready;
wire   [5:0] grp_dct_2d_fu_200_in_block_address0;
wire    grp_dct_2d_fu_200_in_block_ce0;
wire   [5:0] grp_dct_2d_fu_200_in_block_address1;
wire    grp_dct_2d_fu_200_in_block_ce1;
wire   [5:0] grp_dct_2d_fu_200_out_block_address0;
wire    grp_dct_2d_fu_200_out_block_ce0;
wire    grp_dct_2d_fu_200_out_block_we0;
wire   [15:0] grp_dct_2d_fu_200_out_block_d0;
reg   [3:0] r_i_phi_fu_149_p4;
wire    ap_block_pp0_stage0_flag00000000;
reg   [3:0] c_i_phi_fu_160_p4;
reg   [3:0] r_i2_phi_fu_182_p4;
wire    ap_block_pp1_stage0_flag00000000;
reg   [3:0] c_i6_phi_fu_193_p4;
reg    ap_reg_grp_dct_2d_fu_200_ap_start;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_i_fu_282_p1;
wire   [63:0] tmp_41_cast_fu_312_p1;
wire   [63:0] tmp_45_cast_fu_391_p1;
wire   [63:0] tmp_5_i_fu_407_p1;
wire   [0:0] exitcond_i_fu_240_p2;
wire   [3:0] r_fu_234_p2;
wire   [5:0] c_i_cast6_fu_273_p1;
wire   [5:0] tmp_i_mid2_fu_266_p3;
wire   [5:0] tmp_9_i_fu_276_p2;
wire   [6:0] tmp_s_fu_292_p3;
wire   [7:0] tmp_40_cast_fu_299_p1;
wire   [7:0] tmp_1_i_cast_fu_303_p1;
wire   [7:0] tmp_33_fu_306_p2;
wire   [0:0] exitcond_i1_fu_335_p2;
wire   [3:0] r_1_fu_329_p2;
wire   [6:0] tmp_34_fu_361_p3;
wire   [7:0] tmp_43_cast_fu_368_p1;
wire   [7:0] tmp_3_i_cast_fu_382_p1;
wire   [7:0] tmp_35_fu_385_p2;
wire   [5:0] c_i6_cast2_fu_379_p1;
wire   [5:0] tmp_1_i5_mid2_fu_372_p3;
wire    ap_CS_fsm_state10;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_reg_grp_dct_2d_fu_200_ap_start = 1'b0;
end

dct_2d_col_inbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2d_in_address0),
    .ce0(buf_2d_in_ce0),
    .we0(buf_2d_in_we0),
    .d0(input_r_q0),
    .q0(buf_2d_in_q0),
    .address1(grp_dct_2d_fu_200_in_block_address1),
    .ce1(buf_2d_in_ce1),
    .q1(buf_2d_in_q1)
);

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2d_out_address0),
    .ce0(buf_2d_out_ce0),
    .we0(buf_2d_out_we0),
    .d0(grp_dct_2d_fu_200_out_block_d0),
    .q0(buf_2d_out_q0)
);

dct_2d grp_dct_2d_fu_200(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dct_2d_fu_200_ap_start),
    .ap_done(grp_dct_2d_fu_200_ap_done),
    .ap_idle(grp_dct_2d_fu_200_ap_idle),
    .ap_ready(grp_dct_2d_fu_200_ap_ready),
    .in_block_address0(grp_dct_2d_fu_200_in_block_address0),
    .in_block_ce0(grp_dct_2d_fu_200_in_block_ce0),
    .in_block_q0(buf_2d_in_q0),
    .in_block_address1(grp_dct_2d_fu_200_in_block_address1),
    .in_block_ce1(grp_dct_2d_fu_200_in_block_ce1),
    .in_block_q1(buf_2d_in_q1),
    .out_block_address0(grp_dct_2d_fu_200_out_block_address0),
    .out_block_ce0(grp_dct_2d_fu_200_out_block_ce0),
    .out_block_we0(grp_dct_2d_fu_200_out_block_we0),
    .out_block_d0(grp_dct_2d_fu_200_out_block_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (grp_dct_2d_fu_200_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state7)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state7 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((1'b1 == ap_CS_fsm_state6) & (grp_dct_2d_fu_200_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dct_2d_fu_200_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_reg_grp_dct_2d_fu_200_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dct_2d_fu_200_ap_ready)) begin
            ap_reg_grp_dct_2d_fu_200_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_reg_448) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        c_i6_reg_189 <= c_1_fu_402_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (grp_dct_2d_fu_200_ap_done == 1'b1))) begin
        c_i6_reg_189 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_411 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        c_i_reg_156 <= c_fu_287_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_i_reg_156 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten2_fu_317_p2))) begin
        indvar_flatten2_reg_167 <= indvar_flatten_next2_fu_323_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (grp_dct_2d_fu_200_ap_done == 1'b1))) begin
        indvar_flatten2_reg_167 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_222_p2 == 1'd0))) begin
        indvar_flatten_reg_134 <= indvar_flatten_next_fu_228_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_134 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_reg_448) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        r_i2_reg_178 <= tmp_i4_mid2_v_reg_464;
    end else if (((1'b1 == ap_CS_fsm_state6) & (grp_dct_2d_fu_200_ap_done == 1'b1))) begin
        r_i2_reg_178 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_reg_411 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        r_i_reg_145 <= tmp_i_mid2_v_v_reg_427;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_i_reg_145 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_c_i_mid2_reg_420 <= c_i_mid2_reg_420;
        ap_reg_pp0_iter1_exitcond_flatten_reg_411 <= exitcond_flatten_reg_411;
        ap_reg_pp0_iter1_tmp_i_mid2_v_v_reg_427 <= tmp_i_mid2_v_v_reg_427;
        exitcond_flatten_reg_411 <= exitcond_flatten_fu_222_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_flatten2_reg_448 <= exitcond_flatten2_reg_448;
        exitcond_flatten2_reg_448 <= exitcond_flatten2_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_fu_317_p2))) begin
        c_i6_mid2_reg_457 <= c_i6_mid2_fu_341_p3;
        tmp_1_reg_470 <= tmp_1_fu_357_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond_flatten_fu_222_p2 == 1'd0))) begin
        c_i_mid2_reg_420 <= c_i_mid2_fu_246_p3;
        tmp_reg_433 <= tmp_fu_262_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'd0 == exitcond_flatten2_reg_448))) begin
        tmp_4_i_reg_480 <= tmp_4_i_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_flatten2_fu_317_p2))) begin
        tmp_i4_mid2_v_reg_464 <= tmp_i4_mid2_v_fu_349_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (exitcond_flatten_fu_222_p2 == 1'd0))) begin
        tmp_i_mid2_v_v_reg_427 <= tmp_i_mid2_v_v_fu_254_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_222_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten2_fu_317_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buf_2d_in_address0 = tmp_41_cast_fu_312_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_2d_in_address0 = grp_dct_2d_fu_200_in_block_address0;
    end else begin
        buf_2d_in_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buf_2d_in_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_2d_in_ce0 = grp_dct_2d_fu_200_in_block_ce0;
    end else begin
        buf_2d_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_2d_in_ce1 = grp_dct_2d_fu_200_in_block_ce1;
    end else begin
        buf_2d_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_reg_pp0_iter1_exitcond_flatten_reg_411 == 1'd0))) begin
        buf_2d_in_we0 = 1'b1;
    end else begin
        buf_2d_in_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        buf_2d_out_address0 = tmp_45_cast_fu_391_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_2d_out_address0 = grp_dct_2d_fu_200_out_block_address0;
    end else begin
        buf_2d_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        buf_2d_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_2d_out_ce0 = grp_dct_2d_fu_200_out_block_ce0;
    end else begin
        buf_2d_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_2d_out_we0 = grp_dct_2d_fu_200_out_block_we0;
    end else begin
        buf_2d_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten2_reg_448) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        c_i6_phi_fu_193_p4 = c_1_fu_402_p2;
    end else begin
        c_i6_phi_fu_193_p4 = c_i6_reg_189;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_411 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        c_i_phi_fu_160_p4 = c_fu_287_p2;
    end else begin
        c_i_phi_fu_160_p4 = c_i_reg_156;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_flatten2_reg_448))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd0 == exitcond_flatten2_reg_448) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_flag00000000 == 1'b0))) begin
        r_i2_phi_fu_182_p4 = tmp_i4_mid2_v_reg_464;
    end else begin
        r_i2_phi_fu_182_p4 = r_i2_reg_178;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_411 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        r_i_phi_fu_149_p4 = tmp_i_mid2_v_v_reg_427;
    end else begin
        r_i_phi_fu_149_p4 = r_i_reg_145;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_222_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_flatten_fu_222_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_dct_2d_fu_200_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten2_fu_317_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_block_pp1_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter2) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_flag00011011 == 1'b0) & (exitcond_flatten2_fu_317_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign c_1_fu_402_p2 = (4'd1 + c_i6_mid2_reg_457);

assign c_fu_287_p2 = (4'd1 + c_i_mid2_reg_420);

assign c_i6_cast2_fu_379_p1 = c_i6_mid2_reg_457;

assign c_i6_mid2_fu_341_p3 = ((exitcond_i1_fu_335_p2[0:0] === 1'b1) ? 4'd0 : c_i6_phi_fu_193_p4);

assign c_i_cast6_fu_273_p1 = c_i_mid2_reg_420;

assign c_i_mid2_fu_246_p3 = ((exitcond_i_fu_240_p2[0:0] === 1'b1) ? 4'd0 : c_i_phi_fu_160_p4);

assign exitcond_flatten2_fu_317_p2 = ((indvar_flatten2_reg_167 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_222_p2 = ((indvar_flatten_reg_134 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_335_p2 = ((c_i6_phi_fu_193_p4 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond_i_fu_240_p2 = ((c_i_phi_fu_160_p4 == 4'd8) ? 1'b1 : 1'b0);

assign grp_dct_2d_fu_200_ap_start = ap_reg_grp_dct_2d_fu_200_ap_start;

assign indvar_flatten_next2_fu_323_p2 = (indvar_flatten2_reg_167 + 7'd1);

assign indvar_flatten_next_fu_228_p2 = (indvar_flatten_reg_134 + 7'd1);

assign input_r_address0 = tmp_i_fu_282_p1;

assign output_r_address0 = tmp_5_i_fu_407_p1;

assign output_r_d0 = buf_2d_out_q0;

assign r_1_fu_329_p2 = (4'd1 + r_i2_phi_fu_182_p4);

assign r_fu_234_p2 = (4'd1 + r_i_phi_fu_149_p4);

assign tmp_1_fu_357_p1 = tmp_i4_mid2_v_fu_349_p3[2:0];

assign tmp_1_i5_mid2_fu_372_p3 = {{tmp_1_reg_470}, {3'd0}};

assign tmp_1_i_cast_fu_303_p1 = ap_reg_pp0_iter1_c_i_mid2_reg_420;

assign tmp_33_fu_306_p2 = (tmp_40_cast_fu_299_p1 + tmp_1_i_cast_fu_303_p1);

assign tmp_34_fu_361_p3 = {{tmp_i4_mid2_v_reg_464}, {3'd0}};

assign tmp_35_fu_385_p2 = (tmp_43_cast_fu_368_p1 + tmp_3_i_cast_fu_382_p1);

assign tmp_3_i_cast_fu_382_p1 = c_i6_mid2_reg_457;

assign tmp_40_cast_fu_299_p1 = tmp_s_fu_292_p3;

assign tmp_41_cast_fu_312_p1 = tmp_33_fu_306_p2;

assign tmp_43_cast_fu_368_p1 = tmp_34_fu_361_p3;

assign tmp_45_cast_fu_391_p1 = tmp_35_fu_385_p2;

assign tmp_4_i_fu_396_p2 = (c_i6_cast2_fu_379_p1 + tmp_1_i5_mid2_fu_372_p3);

assign tmp_5_i_fu_407_p1 = tmp_4_i_reg_480;

assign tmp_9_i_fu_276_p2 = (c_i_cast6_fu_273_p1 + tmp_i_mid2_fu_266_p3);

assign tmp_fu_262_p1 = tmp_i_mid2_v_v_fu_254_p3[2:0];

assign tmp_i4_mid2_v_fu_349_p3 = ((exitcond_i1_fu_335_p2[0:0] === 1'b1) ? r_1_fu_329_p2 : r_i2_phi_fu_182_p4);

assign tmp_i_fu_282_p1 = tmp_9_i_fu_276_p2;

assign tmp_i_mid2_fu_266_p3 = {{tmp_reg_433}, {3'd0}};

assign tmp_i_mid2_v_v_fu_254_p3 = ((exitcond_i_fu_240_p2[0:0] === 1'b1) ? r_fu_234_p2 : r_i_phi_fu_149_p4);

assign tmp_s_fu_292_p3 = {{ap_reg_pp0_iter1_tmp_i_mid2_v_v_reg_427}, {3'd0}};

endmodule //dct
