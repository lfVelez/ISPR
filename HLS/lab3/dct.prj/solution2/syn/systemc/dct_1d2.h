// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dct_1d2_HH_
#define _dct_1d2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dct_mac_muladd_15cud.h"
#include "dct_1d2_dct_coeffbkb.h"

namespace ap_rtl {

struct dct_1d2 : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > src_address0;
    sc_out< sc_logic > src_ce0;
    sc_in< sc_lv<16> > src_q0;
    sc_in< sc_lv<4> > tmp_6;
    sc_out< sc_lv<6> > dst_address0;
    sc_out< sc_logic > dst_ce0;
    sc_out< sc_logic > dst_we0;
    sc_out< sc_lv<16> > dst_d0;
    sc_in< sc_lv<4> > tmp_61;


    // Module declarations
    dct_1d2(sc_module_name name);
    SC_HAS_PROCESS(dct_1d2);

    ~dct_1d2();

    sc_trace_file* mVcdFile;

    dct_1d2_dct_coeffbkb* dct_coeff_table_U;
    dct_mac_muladd_15cud<1,1,15,16,32,32>* dct_mac_muladd_15cud_U1;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > dct_coeff_table_address0;
    sc_signal< sc_logic > dct_coeff_table_ce0;
    sc_signal< sc_lv<15> > dct_coeff_table_q0;
    sc_signal< sc_lv<4> > n_reg_114;
    sc_signal< sc_lv<32> > tmp1_reg_125;
    sc_signal< sc_lv<8> > tmp_21_cast_fu_145_p1;
    sc_signal< sc_lv<8> > tmp_21_cast_reg_270;
    sc_signal< sc_lv<8> > tmp_23_cast_fu_157_p1;
    sc_signal< sc_lv<8> > tmp_23_cast_reg_275;
    sc_signal< sc_lv<1> > tmp_fu_161_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > k_1_fu_167_p2;
    sc_signal< sc_lv<4> > k_1_reg_284;
    sc_signal< sc_lv<6> > dst_addr_reg_289;
    sc_signal< sc_lv<8> > tmp_26_cast_fu_195_p1;
    sc_signal< sc_lv<8> > tmp_26_cast_reg_294;
    sc_signal< sc_lv<1> > tmp_11_fu_199_p2;
    sc_signal< sc_lv<1> > tmp_11_reg_299;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_11_reg_299;
    sc_signal< sc_lv<4> > n_1_fu_205_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<15> > dct_coeff_table_load_reg_318;
    sc_signal< sc_lv<16> > src_load_reg_323;
    sc_signal< sc_lv<32> > grp_fu_262_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<4> > k_reg_103;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_24_cast_fu_182_p1;
    sc_signal< sc_lv<64> > tmp_27_cast_fu_220_p1;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<64> > tmp_28_cast_fu_230_p1;
    sc_signal< sc_lv<7> > tmp_s_fu_137_p3;
    sc_signal< sc_lv<7> > tmp_15_fu_149_p3;
    sc_signal< sc_lv<8> > tmp_cast_fu_173_p1;
    sc_signal< sc_lv<8> > tmp_16_fu_177_p2;
    sc_signal< sc_lv<7> > tmp_19_fu_187_p3;
    sc_signal< sc_lv<8> > tmp_15_cast_fu_211_p1;
    sc_signal< sc_lv<8> > tmp_20_fu_215_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_225_p2;
    sc_signal< sc_lv<29> > tmp_2_fu_241_p1;
    sc_signal< sc_lv<29> > tmp_12_fu_245_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<29> ap_const_lv29_1000;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1C;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_dct_coeff_table_address0();
    void thread_dct_coeff_table_ce0();
    void thread_dst_address0();
    void thread_dst_ce0();
    void thread_dst_d0();
    void thread_dst_we0();
    void thread_k_1_fu_167_p2();
    void thread_n_1_fu_205_p2();
    void thread_src_address0();
    void thread_src_ce0();
    void thread_tmp_11_fu_199_p2();
    void thread_tmp_12_fu_245_p2();
    void thread_tmp_15_cast_fu_211_p1();
    void thread_tmp_15_fu_149_p3();
    void thread_tmp_16_fu_177_p2();
    void thread_tmp_19_fu_187_p3();
    void thread_tmp_20_fu_215_p2();
    void thread_tmp_21_cast_fu_145_p1();
    void thread_tmp_21_fu_225_p2();
    void thread_tmp_23_cast_fu_157_p1();
    void thread_tmp_24_cast_fu_182_p1();
    void thread_tmp_26_cast_fu_195_p1();
    void thread_tmp_27_cast_fu_220_p1();
    void thread_tmp_28_cast_fu_230_p1();
    void thread_tmp_2_fu_241_p1();
    void thread_tmp_cast_fu_173_p1();
    void thread_tmp_fu_161_p2();
    void thread_tmp_s_fu_137_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
