

================================================================
== Vivado HLS Report for 'write_data'
================================================================
* Date:           Wed May 26 18:13:47 2021

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        dct.prj
* Solution:       solution7
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      6.51|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   67|   67|   67|   67|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                           |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |         Loop Name         | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- WR_Loop_Row_WR_Loop_Col  |   65|   65|         3|          1|          1|    64|    yes   |
        +---------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 1
  Pipeline-0: II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	5  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: StgValue_6 (3)  [1/1] 1.77ns  loc: dct.c:71
:0  br label %1


 <State 2>: 5.17ns
ST_2: indvar_flatten (5)  [1/1] 0.00ns
:0  %indvar_flatten = phi i7 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]

ST_2: r (6)  [1/1] 0.00ns  loc: dct.c:74
:1  %r = phi i4 [ 0, %0 ], [ %tmp_mid2_v, %.reset ]

ST_2: c (7)  [1/1] 0.00ns
:2  %c = phi i4 [ 0, %0 ], [ %c_1, %.reset ]

ST_2: exitcond_flatten (8)  [1/1] 2.91ns
:3  %exitcond_flatten = icmp eq i7 %indvar_flatten, -64

ST_2: indvar_flatten_next (9)  [1/1] 2.75ns
:4  %indvar_flatten_next = add i7 %indvar_flatten, 1

ST_2: StgValue_12 (10)  [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %2, label %.reset

ST_2: r_1 (12)  [1/1] 2.62ns  loc: dct.c:71
.reset:0  %r_1 = add i4 1, %r

ST_2: exitcond2 (15)  [1/1] 3.10ns  loc: dct.c:73
.reset:3  %exitcond2 = icmp eq i4 %c, -8

ST_2: c_mid2 (16)  [1/1] 2.07ns  loc: dct.c:73
.reset:4  %c_mid2 = select i1 %exitcond2, i4 0, i4 %c

ST_2: tmp_mid2_v (17)  [1/1] 2.07ns  loc: dct.c:74
.reset:5  %tmp_mid2_v = select i1 %exitcond2, i4 %r_1, i4 %r

ST_2: tmp_1 (20)  [1/1] 0.00ns  loc: dct.c:74
.reset:8  %tmp_1 = trunc i4 %tmp_mid2_v to i3


 <State 3>: 6.01ns
ST_3: tmp (18)  [1/1] 0.00ns  loc: dct.c:74
.reset:6  %tmp = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %tmp_mid2_v, i3 0)

ST_3: tmp_1_cast (19)  [1/1] 0.00ns  loc: dct.c:74
.reset:7  %tmp_1_cast = zext i7 %tmp to i8

ST_3: tmp_1_mid2 (21)  [1/1] 0.00ns  loc: dct.c:74
.reset:9  %tmp_1_mid2 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp_1, i3 0)

ST_3: c_cast6 (22)  [1/1] 0.00ns  loc: dct.c:73
.reset:10  %c_cast6 = zext i4 %c_mid2 to i6

ST_3: tmp_3_cast (26)  [1/1] 0.00ns  loc: dct.c:74
.reset:14  %tmp_3_cast = zext i4 %c_mid2 to i8

ST_3: tmp_7 (27)  [1/1] 2.75ns  loc: dct.c:74
.reset:15  %tmp_7 = add i8 %tmp_1_cast, %tmp_3_cast

ST_3: tmp_7_cast (28)  [1/1] 0.00ns  loc: dct.c:74
.reset:16  %tmp_7_cast = zext i8 %tmp_7 to i64

ST_3: buf_addr (29)  [1/1] 0.00ns  loc: dct.c:74
.reset:17  %buf_addr = getelementptr [64 x i16]* %buf_r, i64 0, i64 %tmp_7_cast

ST_3: buf_load (30)  [2/2] 3.25ns  loc: dct.c:74
.reset:18  %buf_load = load i16* %buf_addr, align 2

ST_3: tmp_4 (31)  [1/1] 2.71ns  loc: dct.c:74
.reset:19  %tmp_4 = add i6 %c_cast6, %tmp_1_mid2

ST_3: c_1 (36)  [1/1] 2.62ns  loc: dct.c:73
.reset:24  %c_1 = add i4 1, %c_mid2


 <State 4>: 6.51ns
ST_4: StgValue_29 (13)  [1/1] 0.00ns
.reset:1  call void (...)* @_ssdm_op_SpecLoopName([24 x i8]* @WR_Loop_Row_WR_Loop_s)

ST_4: empty (14)  [1/1] 0.00ns
.reset:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_4: StgValue_31 (23)  [1/1] 0.00ns  loc: dct.c:74
.reset:11  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str13) nounwind

ST_4: tmp_6 (24)  [1/1] 0.00ns  loc: dct.c:74
.reset:12  %tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str13)

ST_4: StgValue_33 (25)  [1/1] 0.00ns  loc: dct.c:75
.reset:13  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_4: buf_load (30)  [1/2] 3.25ns  loc: dct.c:74
.reset:18  %buf_load = load i16* %buf_addr, align 2

ST_4: tmp_5 (32)  [1/1] 0.00ns  loc: dct.c:74
.reset:20  %tmp_5 = zext i6 %tmp_4 to i64

ST_4: output_addr (33)  [1/1] 0.00ns  loc: dct.c:74
.reset:21  %output_addr = getelementptr [64 x i16]* %output_r, i64 0, i64 %tmp_5

ST_4: StgValue_37 (34)  [1/1] 3.25ns  loc: dct.c:74
.reset:22  store i16 %buf_load, i16* %output_addr, align 2

ST_4: empty_9 (35)  [1/1] 0.00ns  loc: dct.c:74
.reset:23  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str13, i32 %tmp_6)

ST_4: StgValue_39 (37)  [1/1] 0.00ns
.reset:25  br label %1


 <State 5>: 0.00ns
ST_5: StgValue_40 (39)  [1/1] 0.00ns  loc: dct.c:76
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [5]  (1.77 ns)

 <State 2>: 5.17ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', dct.c:73) [7]  (0 ns)
	'icmp' operation ('exitcond2', dct.c:73) [15]  (3.1 ns)
	'select' operation ('c_mid2', dct.c:73) [16]  (2.07 ns)

 <State 3>: 6.01ns
The critical path consists of the following:
	'add' operation ('tmp_7', dct.c:74) [27]  (2.75 ns)
	'getelementptr' operation ('buf_addr', dct.c:74) [29]  (0 ns)
	'load' operation ('buf_load', dct.c:74) on array 'buf_r' [30]  (3.25 ns)

 <State 4>: 6.51ns
The critical path consists of the following:
	'load' operation ('buf_load', dct.c:74) on array 'buf_r' [30]  (3.25 ns)
	'store' operation (dct.c:74) of variable 'buf_load', dct.c:74 on array 'output_r' [34]  (3.25 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
