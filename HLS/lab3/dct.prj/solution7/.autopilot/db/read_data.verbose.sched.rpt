

================================================================
== Vivado HLS Report for 'read_data'
================================================================
* Date:           Wed May 26 18:13:46 2021

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        dct.prj
* Solution:       solution7
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      8.58|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  133|  133|  133|  133|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                           |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |         Loop Name         | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- RD_Loop_Row_RD_Loop_Col  |  131|  131|         6|          2|          1|    64|    yes   |
        +---------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 1
  Pipeline-0: II = 2, D = 6, States = { 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	8  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	2  / true
8 --> 
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: StgValue_9 (3)  [1/1] 1.77ns  loc: dct.c:59
:0  br label %1


 <State 2>: 2.91ns
ST_2: indvar_flatten (5)  [1/1] 0.00ns
:0  %indvar_flatten = phi i7 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]

ST_2: r (6)  [1/1] 0.00ns  loc: dct.c:62
:1  %r = phi i4 [ 0, %0 ], [ %tmp_mid2_v_v, %.reset ]

ST_2: c (7)  [1/1] 0.00ns
:2  %c = phi i4 [ 0, %0 ], [ %c_2, %.reset ]

ST_2: exitcond_flatten (8)  [1/1] 2.91ns
:3  %exitcond_flatten = icmp eq i7 %indvar_flatten, -64

ST_2: indvar_flatten_next (9)  [1/1] 2.75ns
:4  %indvar_flatten_next = add i7 %indvar_flatten, 1

ST_2: StgValue_15 (10)  [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %2, label %.reset


 <State 3>: 5.17ns
ST_3: r_2 (12)  [1/1] 2.62ns  loc: dct.c:59
.reset:0  %r_2 = add i4 1, %r

ST_3: exitcond5 (15)  [1/1] 3.10ns  loc: dct.c:61
.reset:3  %exitcond5 = icmp eq i4 %c, -8

ST_3: c_mid2 (16)  [1/1] 2.07ns  loc: dct.c:61
.reset:4  %c_mid2 = select i1 %exitcond5, i4 0, i4 %c

ST_3: tmp_mid2_v_v (17)  [1/1] 2.07ns  loc: dct.c:62
.reset:5  %tmp_mid2_v_v = select i1 %exitcond5, i4 %r_2, i4 %r

ST_3: tmp (18)  [1/1] 0.00ns  loc: dct.c:62
.reset:6  %tmp = trunc i4 %tmp_mid2_v_v to i3

ST_3: tmp_7_mid2 (20)  [1/1] 0.00ns  loc: dct.c:62
.reset:8  %tmp_7_mid2 = zext i4 %tmp_mid2_v_v to i64

ST_3: buf_addr (29)  [1/1] 0.00ns  loc: dct.c:62
.reset:17  %buf_addr = getelementptr [8 x i128]* %buf_r, i64 0, i64 %tmp_7_mid2

ST_3: tmp_4 (31)  [1/1] 0.00ns  loc: dct.c:61
.reset:19  %tmp_4 = trunc i4 %c_mid2 to i3


 <State 4>: 5.96ns
ST_4: tmp_mid2 (19)  [1/1] 0.00ns  loc: dct.c:62
.reset:7  %tmp_mid2 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp, i3 0)

ST_4: c_cast2 (21)  [1/1] 0.00ns  loc: dct.c:61
.reset:9  %c_cast2 = zext i4 %c_mid2 to i6

ST_4: tmp_9 (25)  [1/1] 2.71ns  loc: dct.c:62
.reset:13  %tmp_9 = add i6 %c_cast2, %tmp_mid2

ST_4: tmp_s (26)  [1/1] 0.00ns  loc: dct.c:62
.reset:14  %tmp_s = zext i6 %tmp_9 to i64

ST_4: input_addr (27)  [1/1] 0.00ns  loc: dct.c:62
.reset:15  %input_addr = getelementptr [64 x i16]* %input_r, i64 0, i64 %tmp_s

ST_4: input_load (28)  [2/2] 3.25ns  loc: dct.c:62
.reset:16  %input_load = load i16* %input_addr, align 2

ST_4: c_2 (58)  [1/1] 2.62ns  loc: dct.c:61
.reset:46  %c_2 = add i4 1, %c_mid2


 <State 5>: 6.06ns
ST_5: input_load (28)  [1/2] 3.25ns  loc: dct.c:62
.reset:16  %input_load = load i16* %input_addr, align 2

ST_5: tmp_2 (32)  [1/1] 0.00ns  loc: dct.c:62
.reset:20  %tmp_2 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 %tmp_4, i4 0)

ST_5: tmp_3 (33)  [1/1] 0.00ns  loc: dct.c:62
.reset:21  %tmp_3 = or i7 %tmp_2, 15

ST_5: tmp_5 (34)  [1/1] 2.91ns  loc: dct.c:62
.reset:22  %tmp_5 = icmp ugt i7 %tmp_2, %tmp_3

ST_5: tmp_6 (35)  [1/1] 0.00ns  loc: dct.c:62
.reset:23  %tmp_6 = zext i7 %tmp_2 to i8

ST_5: tmp_7 (36)  [1/1] 0.00ns  loc: dct.c:62
.reset:24  %tmp_7 = zext i7 %tmp_3 to i8

ST_5: tmp_11 (39)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node p_demorgan)
.reset:27  %tmp_11 = select i1 %tmp_5, i8 %tmp_6, i8 %tmp_7

ST_5: tmp_12 (40)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node p_demorgan)
.reset:28  %tmp_12 = select i1 %tmp_5, i8 %tmp_7, i8 %tmp_6

ST_5: tmp_14 (42)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node p_demorgan)
.reset:30  %tmp_14 = xor i8 %tmp_11, 127

ST_5: tmp_16 (44)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node p_demorgan)
.reset:32  %tmp_16 = zext i8 %tmp_12 to i128

ST_5: tmp_17 (45)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node p_demorgan)
.reset:33  %tmp_17 = zext i8 %tmp_14 to i128

ST_5: tmp_21 (49)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node p_demorgan)
.reset:37  %tmp_21 = shl i128 -1, %tmp_16

ST_5: tmp_22 (50)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node p_demorgan)
.reset:38  %tmp_22 = lshr i128 -1, %tmp_17

ST_5: p_demorgan (51)  [1/1] 3.15ns  loc: dct.c:62 (out node of the LUT)
.reset:39  %p_demorgan = and i128 %tmp_21, %tmp_22


 <State 6>: 3.99ns
ST_6: buf_load (30)  [2/2] 3.25ns  loc: dct.c:62
.reset:18  %buf_load = load i128* %buf_addr, align 8

ST_6: tmp_8 (37)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_18)
.reset:25  %tmp_8 = zext i16 %input_load to i128

ST_6: tmp_10 (38)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_18)
.reset:26  %tmp_10 = xor i8 %tmp_6, 127

ST_6: tmp_13 (41)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_18)
.reset:29  %tmp_13 = select i1 %tmp_5, i8 %tmp_10, i8 %tmp_6

ST_6: tmp_15 (43)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_18)
.reset:31  %tmp_15 = zext i8 %tmp_13 to i128

ST_6: tmp_18 (46)  [1/1] 3.99ns  loc: dct.c:62 (out node of the LUT)
.reset:34  %tmp_18 = shl i128 %tmp_8, %tmp_15


 <State 7>: 8.58ns
ST_7: StgValue_51 (13)  [1/1] 0.00ns
.reset:1  call void (...)* @_ssdm_op_SpecLoopName([24 x i8]* @RD_Loop_Row_RD_Loop_s)

ST_7: empty (14)  [1/1] 0.00ns
.reset:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)

ST_7: StgValue_53 (22)  [1/1] 0.00ns  loc: dct.c:62
.reset:10  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str11) nounwind

ST_7: tmp_1 (23)  [1/1] 0.00ns  loc: dct.c:62
.reset:11  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str11)

ST_7: StgValue_55 (24)  [1/1] 0.00ns  loc: dct.c:63
.reset:12  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_7: buf_load (30)  [1/2] 3.25ns  loc: dct.c:62
.reset:18  %buf_load = load i128* %buf_addr, align 8

ST_7: tmp_19 (47)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_26)
.reset:35  %tmp_19 = call i128 @llvm.part.select.i128(i128 %tmp_18, i32 127, i32 0)

ST_7: tmp_20 (48)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_26)
.reset:36  %tmp_20 = select i1 %tmp_5, i128 %tmp_19, i128 %tmp_18

ST_7: tmp_23 (52)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_26)
.reset:40  %tmp_23 = xor i128 %p_demorgan, -1

ST_7: tmp_24 (53)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_26)
.reset:41  %tmp_24 = and i128 %buf_load, %tmp_23

ST_7: tmp_25 (54)  [1/1] 0.00ns  loc: dct.c:62 (grouped into LUT with out node tmp_26)
.reset:42  %tmp_25 = and i128 %tmp_20, %p_demorgan

ST_7: tmp_26 (55)  [1/1] 2.07ns  loc: dct.c:62 (out node of the LUT)
.reset:43  %tmp_26 = or i128 %tmp_24, %tmp_25

ST_7: StgValue_63 (56)  [1/1] 3.25ns  loc: dct.c:62
.reset:44  store i128 %tmp_26, i128* %buf_addr, align 8

ST_7: empty_10 (57)  [1/1] 0.00ns  loc: dct.c:62
.reset:45  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str11, i32 %tmp_1)

ST_7: StgValue_65 (59)  [1/1] 0.00ns
.reset:47  br label %1


 <State 8>: 0.00ns
ST_8: StgValue_66 (61)  [1/1] 0.00ns  loc: dct.c:64
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [5]  (1.77 ns)

 <State 2>: 2.91ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [5]  (0 ns)
	'icmp' operation ('exitcond_flatten') [8]  (2.91 ns)

 <State 3>: 5.17ns
The critical path consists of the following:
	'icmp' operation ('exitcond5', dct.c:61) [15]  (3.1 ns)
	'select' operation ('tmp_mid2_v_v', dct.c:62) [17]  (2.07 ns)

 <State 4>: 5.96ns
The critical path consists of the following:
	'add' operation ('tmp_9', dct.c:62) [25]  (2.71 ns)
	'getelementptr' operation ('input_addr', dct.c:62) [27]  (0 ns)
	'load' operation ('input_load', dct.c:62) on array 'input_r' [28]  (3.25 ns)

 <State 5>: 6.06ns
The critical path consists of the following:
	'icmp' operation ('tmp_5', dct.c:62) [34]  (2.91 ns)
	'select' operation ('tmp_12', dct.c:62) [40]  (0 ns)
	'shl' operation ('tmp_21', dct.c:62) [49]  (0 ns)
	'and' operation ('p_demorgan', dct.c:62) [51]  (3.15 ns)

 <State 6>: 3.99ns
The critical path consists of the following:
	'shl' operation ('tmp_18', dct.c:62) [46]  (3.99 ns)

 <State 7>: 8.58ns
The critical path consists of the following:
	'load' operation ('buf_load', dct.c:62) on array 'buf_r' [30]  (3.25 ns)
	'and' operation ('tmp_24', dct.c:62) [53]  (0 ns)
	'or' operation ('tmp_26', dct.c:62) [55]  (2.07 ns)
	'store' operation (dct.c:62) of variable 'tmp_26', dct.c:62 on array 'buf_r' [56]  (3.25 ns)

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
