// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "read_data.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic read_data::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic read_data::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> read_data::ap_ST_fsm_state1 = "1";
const sc_lv<4> read_data::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> read_data::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<4> read_data::ap_ST_fsm_state8 = "1000";
const sc_lv<32> read_data::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool read_data::ap_const_boolean_1 = true;
const sc_lv<32> read_data::ap_const_lv32_1 = "1";
const bool read_data::ap_const_boolean_0 = false;
const sc_lv<32> read_data::ap_const_lv32_2 = "10";
const sc_lv<1> read_data::ap_const_lv1_0 = "0";
const sc_lv<1> read_data::ap_const_lv1_1 = "1";
const sc_lv<7> read_data::ap_const_lv7_0 = "0000000";
const sc_lv<4> read_data::ap_const_lv4_0 = "0000";
const sc_lv<7> read_data::ap_const_lv7_40 = "1000000";
const sc_lv<7> read_data::ap_const_lv7_1 = "1";
const sc_lv<4> read_data::ap_const_lv4_1 = "1";
const sc_lv<4> read_data::ap_const_lv4_8 = "1000";
const sc_lv<3> read_data::ap_const_lv3_0 = "000";
const sc_lv<7> read_data::ap_const_lv7_F = "1111";
const sc_lv<8> read_data::ap_const_lv8_7F = "1111111";
const sc_lv<128> read_data::ap_const_lv128_lc_1 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> read_data::ap_const_lv32_7F = "1111111";
const sc_lv<32> read_data::ap_const_lv32_3 = "11";

read_data::read_data(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_116_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_buf_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_reg_pp0_iter1_buf_addr_reg_357 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_buf_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_buf_r_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_24_fu_314_p2 );
    sensitive << ( tmp_25_fu_320_p2 );

    SC_METHOD(thread_buf_r_we0);
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_332 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_c_2_fu_190_p2);
    sensitive << ( c_mid2_reg_341 );

    SC_METHOD(thread_c_cast2_fu_176_p1);
    sensitive << ( c_mid2_reg_341 );

    SC_METHOD(thread_c_mid2_fu_140_p3);
    sensitive << ( c_phi_fu_108_p4 );
    sensitive << ( exitcond5_fu_134_p2 );

    SC_METHOD(thread_c_phi_fu_108_p4);
    sensitive << ( c_reg_104 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_332 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( c_2_reg_372 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_exitcond5_fu_134_p2);
    sensitive << ( exitcond_flatten_reg_332 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( c_phi_fu_108_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_116_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_phi_fu_85_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_122_p2);
    sensitive << ( indvar_flatten_phi_fu_85_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_85_p4);
    sensitive << ( indvar_flatten_reg_81 );
    sensitive << ( exitcond_flatten_reg_332 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_336 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_s_fu_185_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_p_demorgan_fu_264_p2);
    sensitive << ( tmp_21_fu_252_p2 );
    sensitive << ( tmp_22_fu_258_p2 );

    SC_METHOD(thread_r_2_fu_128_p2);
    sensitive << ( r_phi_fu_96_p4 );

    SC_METHOD(thread_r_phi_fu_96_p4);
    sensitive << ( r_reg_92 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_332 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_mid2_v_v_reg_347 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );

    SC_METHOD(thread_tmp_10_fu_273_p2);
    sensitive << ( tmp_6_reg_388 );

    SC_METHOD(thread_tmp_11_fu_222_p3);
    sensitive << ( tmp_5_fu_208_p2 );
    sensitive << ( tmp_6_fu_214_p1 );
    sensitive << ( tmp_7_fu_218_p1 );

    SC_METHOD(thread_tmp_12_fu_230_p3);
    sensitive << ( tmp_5_fu_208_p2 );
    sensitive << ( tmp_6_fu_214_p1 );
    sensitive << ( tmp_7_fu_218_p1 );

    SC_METHOD(thread_tmp_13_fu_278_p3);
    sensitive << ( tmp_5_reg_382 );
    sensitive << ( tmp_6_reg_388 );
    sensitive << ( tmp_10_fu_273_p2 );

    SC_METHOD(thread_tmp_14_fu_238_p2);
    sensitive << ( tmp_11_fu_222_p3 );

    SC_METHOD(thread_tmp_15_fu_284_p1);
    sensitive << ( tmp_13_fu_278_p3 );

    SC_METHOD(thread_tmp_16_fu_244_p1);
    sensitive << ( tmp_12_fu_230_p3 );

    SC_METHOD(thread_tmp_17_fu_248_p1);
    sensitive << ( tmp_14_fu_238_p2 );

    SC_METHOD(thread_tmp_18_fu_288_p2);
    sensitive << ( tmp_8_fu_270_p1 );
    sensitive << ( tmp_15_fu_284_p1 );

    SC_METHOD(thread_tmp_19_fu_294_p4);
    sensitive << ( tmp_18_reg_400 );

    SC_METHOD(thread_tmp_20_fu_303_p3);
    sensitive << ( tmp_5_reg_382 );
    sensitive << ( tmp_18_reg_400 );
    sensitive << ( tmp_19_fu_294_p4 );

    SC_METHOD(thread_tmp_21_fu_252_p2);
    sensitive << ( tmp_16_fu_244_p1 );

    SC_METHOD(thread_tmp_22_fu_258_p2);
    sensitive << ( tmp_17_fu_248_p1 );

    SC_METHOD(thread_tmp_23_fu_309_p2);
    sensitive << ( p_demorgan_reg_394 );

    SC_METHOD(thread_tmp_24_fu_314_p2);
    sensitive << ( buf_r_q0 );
    sensitive << ( tmp_23_fu_309_p2 );

    SC_METHOD(thread_tmp_25_fu_320_p2);
    sensitive << ( p_demorgan_reg_394 );
    sensitive << ( tmp_20_fu_303_p3 );

    SC_METHOD(thread_tmp_2_fu_195_p3);
    sensitive << ( tmp_4_reg_362 );

    SC_METHOD(thread_tmp_3_fu_202_p2);
    sensitive << ( tmp_2_fu_195_p3 );

    SC_METHOD(thread_tmp_4_fu_165_p1);
    sensitive << ( c_mid2_fu_140_p3 );

    SC_METHOD(thread_tmp_5_fu_208_p2);
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_332 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_fu_195_p3 );
    sensitive << ( tmp_3_fu_202_p2 );

    SC_METHOD(thread_tmp_6_fu_214_p1);
    sensitive << ( tmp_2_fu_195_p3 );

    SC_METHOD(thread_tmp_7_fu_218_p1);
    sensitive << ( tmp_3_fu_202_p2 );

    SC_METHOD(thread_tmp_7_mid2_fu_160_p1);
    sensitive << ( tmp_mid2_v_v_fu_148_p3 );

    SC_METHOD(thread_tmp_8_fu_270_p1);
    sensitive << ( input_load_reg_377 );

    SC_METHOD(thread_tmp_9_fu_179_p2);
    sensitive << ( c_cast2_fu_176_p1 );
    sensitive << ( tmp_mid2_fu_169_p3 );

    SC_METHOD(thread_tmp_fu_156_p1);
    sensitive << ( tmp_mid2_v_v_fu_148_p3 );

    SC_METHOD(thread_tmp_mid2_fu_169_p3);
    sensitive << ( tmp_reg_352 );

    SC_METHOD(thread_tmp_mid2_v_v_fu_148_p3);
    sensitive << ( r_phi_fu_96_p4 );
    sensitive << ( exitcond5_fu_134_p2 );
    sensitive << ( r_2_fu_128_p2 );

    SC_METHOD(thread_tmp_s_fu_185_p1);
    sensitive << ( tmp_9_fu_179_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_116_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "read_data_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, buf_r_address0, "(port)buf_r_address0");
    sc_trace(mVcdFile, buf_r_ce0, "(port)buf_r_ce0");
    sc_trace(mVcdFile, buf_r_we0, "(port)buf_r_we0");
    sc_trace(mVcdFile, buf_r_d0, "(port)buf_r_d0");
    sc_trace(mVcdFile, buf_r_q0, "(port)buf_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_81, "indvar_flatten_reg_81");
    sc_trace(mVcdFile, r_reg_92, "r_reg_92");
    sc_trace(mVcdFile, c_reg_104, "c_reg_104");
    sc_trace(mVcdFile, exitcond_flatten_fu_116_p2, "exitcond_flatten_fu_116_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_332, "exitcond_flatten_reg_332");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_332, "ap_reg_pp0_iter1_exitcond_flatten_reg_332");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_332, "ap_reg_pp0_iter2_exitcond_flatten_reg_332");
    sc_trace(mVcdFile, indvar_flatten_next_fu_122_p2, "indvar_flatten_next_fu_122_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_336, "indvar_flatten_next_reg_336");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, c_mid2_fu_140_p3, "c_mid2_fu_140_p3");
    sc_trace(mVcdFile, c_mid2_reg_341, "c_mid2_reg_341");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter2, "ap_block_state7_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, tmp_mid2_v_v_fu_148_p3, "tmp_mid2_v_v_fu_148_p3");
    sc_trace(mVcdFile, tmp_mid2_v_v_reg_347, "tmp_mid2_v_v_reg_347");
    sc_trace(mVcdFile, tmp_fu_156_p1, "tmp_fu_156_p1");
    sc_trace(mVcdFile, tmp_reg_352, "tmp_reg_352");
    sc_trace(mVcdFile, buf_addr_reg_357, "buf_addr_reg_357");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_buf_addr_reg_357, "ap_reg_pp0_iter1_buf_addr_reg_357");
    sc_trace(mVcdFile, tmp_4_fu_165_p1, "tmp_4_fu_165_p1");
    sc_trace(mVcdFile, tmp_4_reg_362, "tmp_4_reg_362");
    sc_trace(mVcdFile, c_2_fu_190_p2, "c_2_fu_190_p2");
    sc_trace(mVcdFile, c_2_reg_372, "c_2_reg_372");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, input_load_reg_377, "input_load_reg_377");
    sc_trace(mVcdFile, tmp_5_fu_208_p2, "tmp_5_fu_208_p2");
    sc_trace(mVcdFile, tmp_5_reg_382, "tmp_5_reg_382");
    sc_trace(mVcdFile, tmp_6_fu_214_p1, "tmp_6_fu_214_p1");
    sc_trace(mVcdFile, tmp_6_reg_388, "tmp_6_reg_388");
    sc_trace(mVcdFile, p_demorgan_fu_264_p2, "p_demorgan_fu_264_p2");
    sc_trace(mVcdFile, p_demorgan_reg_394, "p_demorgan_reg_394");
    sc_trace(mVcdFile, tmp_18_fu_288_p2, "tmp_18_fu_288_p2");
    sc_trace(mVcdFile, tmp_18_reg_400, "tmp_18_reg_400");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_85_p4, "indvar_flatten_phi_fu_85_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, r_phi_fu_96_p4, "r_phi_fu_96_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00000000, "ap_block_pp0_stage1_flag00000000");
    sc_trace(mVcdFile, c_phi_fu_108_p4, "c_phi_fu_108_p4");
    sc_trace(mVcdFile, tmp_7_mid2_fu_160_p1, "tmp_7_mid2_fu_160_p1");
    sc_trace(mVcdFile, tmp_s_fu_185_p1, "tmp_s_fu_185_p1");
    sc_trace(mVcdFile, exitcond5_fu_134_p2, "exitcond5_fu_134_p2");
    sc_trace(mVcdFile, r_2_fu_128_p2, "r_2_fu_128_p2");
    sc_trace(mVcdFile, c_cast2_fu_176_p1, "c_cast2_fu_176_p1");
    sc_trace(mVcdFile, tmp_mid2_fu_169_p3, "tmp_mid2_fu_169_p3");
    sc_trace(mVcdFile, tmp_9_fu_179_p2, "tmp_9_fu_179_p2");
    sc_trace(mVcdFile, tmp_2_fu_195_p3, "tmp_2_fu_195_p3");
    sc_trace(mVcdFile, tmp_3_fu_202_p2, "tmp_3_fu_202_p2");
    sc_trace(mVcdFile, tmp_7_fu_218_p1, "tmp_7_fu_218_p1");
    sc_trace(mVcdFile, tmp_11_fu_222_p3, "tmp_11_fu_222_p3");
    sc_trace(mVcdFile, tmp_12_fu_230_p3, "tmp_12_fu_230_p3");
    sc_trace(mVcdFile, tmp_14_fu_238_p2, "tmp_14_fu_238_p2");
    sc_trace(mVcdFile, tmp_16_fu_244_p1, "tmp_16_fu_244_p1");
    sc_trace(mVcdFile, tmp_17_fu_248_p1, "tmp_17_fu_248_p1");
    sc_trace(mVcdFile, tmp_21_fu_252_p2, "tmp_21_fu_252_p2");
    sc_trace(mVcdFile, tmp_22_fu_258_p2, "tmp_22_fu_258_p2");
    sc_trace(mVcdFile, tmp_10_fu_273_p2, "tmp_10_fu_273_p2");
    sc_trace(mVcdFile, tmp_13_fu_278_p3, "tmp_13_fu_278_p3");
    sc_trace(mVcdFile, tmp_8_fu_270_p1, "tmp_8_fu_270_p1");
    sc_trace(mVcdFile, tmp_15_fu_284_p1, "tmp_15_fu_284_p1");
    sc_trace(mVcdFile, tmp_19_fu_294_p4, "tmp_19_fu_294_p4");
    sc_trace(mVcdFile, tmp_23_fu_309_p2, "tmp_23_fu_309_p2");
    sc_trace(mVcdFile, tmp_20_fu_303_p3, "tmp_20_fu_303_p3");
    sc_trace(mVcdFile, tmp_24_fu_314_p2, "tmp_24_fu_314_p2");
    sc_trace(mVcdFile, tmp_25_fu_320_p2, "tmp_25_fu_320_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

read_data::~read_data() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void read_data::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_332.read(), ap_const_lv1_0))) {
        c_reg_104 = c_2_reg_372.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        c_reg_104 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_332.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_81 = indvar_flatten_next_reg_336.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_81 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_332.read(), ap_const_lv1_0))) {
        r_reg_92 = tmp_mid2_v_v_reg_347.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        r_reg_92 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_buf_addr_reg_357 = buf_addr_reg_357.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_332 = exitcond_flatten_reg_332.read();
        ap_reg_pp0_iter2_exitcond_flatten_reg_332 = ap_reg_pp0_iter1_exitcond_flatten_reg_332.read();
        exitcond_flatten_reg_332 = exitcond_flatten_fu_116_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_332.read(), ap_const_lv1_0))) {
        buf_addr_reg_357 =  (sc_lv<3>) (tmp_7_mid2_fu_160_p1.read());
        c_mid2_reg_341 = c_mid2_fu_140_p3.read();
        tmp_4_reg_362 = tmp_4_fu_165_p1.read();
        tmp_reg_352 = tmp_fu_156_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_332.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        c_2_reg_372 = c_2_fu_190_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next_reg_336 = indvar_flatten_next_fu_122_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_332.read(), ap_const_lv1_0))) {
        input_load_reg_377 = input_r_q0.read();
        p_demorgan_reg_394 = p_demorgan_fu_264_p2.read();
        tmp_5_reg_382 = tmp_5_fu_208_p2.read();
        tmp_6_reg_388 = tmp_6_fu_214_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_332.read(), ap_const_lv1_0))) {
        tmp_18_reg_400 = tmp_18_fu_288_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_332.read(), ap_const_lv1_0))) {
        tmp_mid2_v_v_reg_347 = tmp_mid2_v_v_fu_148_p3.read();
    }
}

void read_data::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void read_data::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void read_data::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void read_data::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[3];
}

void read_data::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_pp0_stage1_flag00000000() {
    ap_block_pp0_stage1_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void read_data::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_block_state7_pp0_stage1_iter2() {
    ap_block_state7_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void read_data::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_116_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void read_data::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void read_data::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void read_data::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void read_data::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void read_data::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void read_data::thread_buf_r_address0() {
    buf_r_address0 = ap_reg_pp0_iter1_buf_addr_reg_357.read();
}

void read_data::thread_buf_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        buf_r_ce0 = ap_const_logic_1;
    } else {
        buf_r_ce0 = ap_const_logic_0;
    }
}

void read_data::thread_buf_r_d0() {
    buf_r_d0 = (tmp_24_fu_314_p2.read() | tmp_25_fu_320_p2.read());
}

void read_data::thread_buf_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_332.read(), ap_const_lv1_0))) {
        buf_r_we0 = ap_const_logic_1;
    } else {
        buf_r_we0 = ap_const_logic_0;
    }
}

void read_data::thread_c_2_fu_190_p2() {
    c_2_fu_190_p2 = (!ap_const_lv4_1.is_01() || !c_mid2_reg_341.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(c_mid2_reg_341.read()));
}

void read_data::thread_c_cast2_fu_176_p1() {
    c_cast2_fu_176_p1 = esl_zext<6,4>(c_mid2_reg_341.read());
}

void read_data::thread_c_mid2_fu_140_p3() {
    c_mid2_fu_140_p3 = (!exitcond5_fu_134_p2.read()[0].is_01())? sc_lv<4>(): ((exitcond5_fu_134_p2.read()[0].to_bool())? ap_const_lv4_0: c_phi_fu_108_p4.read());
}

void read_data::thread_c_phi_fu_108_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_332.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        c_phi_fu_108_p4 = c_2_reg_372.read();
    } else {
        c_phi_fu_108_p4 = c_reg_104.read();
    }
}

void read_data::thread_exitcond5_fu_134_p2() {
    exitcond5_fu_134_p2 = (!c_phi_fu_108_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(c_phi_fu_108_p4.read() == ap_const_lv4_8);
}

void read_data::thread_exitcond_flatten_fu_116_p2() {
    exitcond_flatten_fu_116_p2 = (!indvar_flatten_phi_fu_85_p4.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_85_p4.read() == ap_const_lv7_40);
}

void read_data::thread_indvar_flatten_next_fu_122_p2() {
    indvar_flatten_next_fu_122_p2 = (!indvar_flatten_phi_fu_85_p4.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(indvar_flatten_phi_fu_85_p4.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void read_data::thread_indvar_flatten_phi_fu_85_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_332.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        indvar_flatten_phi_fu_85_p4 = indvar_flatten_next_reg_336.read();
    } else {
        indvar_flatten_phi_fu_85_p4 = indvar_flatten_reg_81.read();
    }
}

void read_data::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<6>) (tmp_s_fu_185_p1.read());
}

void read_data::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void read_data::thread_p_demorgan_fu_264_p2() {
    p_demorgan_fu_264_p2 = (tmp_21_fu_252_p2.read() & tmp_22_fu_258_p2.read());
}

void read_data::thread_r_2_fu_128_p2() {
    r_2_fu_128_p2 = (!ap_const_lv4_1.is_01() || !r_phi_fu_96_p4.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(r_phi_fu_96_p4.read()));
}

void read_data::thread_r_phi_fu_96_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_332.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        r_phi_fu_96_p4 = tmp_mid2_v_v_reg_347.read();
    } else {
        r_phi_fu_96_p4 = r_reg_92.read();
    }
}

void read_data::thread_tmp_10_fu_273_p2() {
    tmp_10_fu_273_p2 = (tmp_6_reg_388.read() ^ ap_const_lv8_7F);
}

void read_data::thread_tmp_11_fu_222_p3() {
    tmp_11_fu_222_p3 = (!tmp_5_fu_208_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_5_fu_208_p2.read()[0].to_bool())? tmp_6_fu_214_p1.read(): tmp_7_fu_218_p1.read());
}

void read_data::thread_tmp_12_fu_230_p3() {
    tmp_12_fu_230_p3 = (!tmp_5_fu_208_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_5_fu_208_p2.read()[0].to_bool())? tmp_7_fu_218_p1.read(): tmp_6_fu_214_p1.read());
}

void read_data::thread_tmp_13_fu_278_p3() {
    tmp_13_fu_278_p3 = (!tmp_5_reg_382.read()[0].is_01())? sc_lv<8>(): ((tmp_5_reg_382.read()[0].to_bool())? tmp_10_fu_273_p2.read(): tmp_6_reg_388.read());
}

void read_data::thread_tmp_14_fu_238_p2() {
    tmp_14_fu_238_p2 = (tmp_11_fu_222_p3.read() ^ ap_const_lv8_7F);
}

void read_data::thread_tmp_15_fu_284_p1() {
    tmp_15_fu_284_p1 = esl_zext<128,8>(tmp_13_fu_278_p3.read());
}

void read_data::thread_tmp_16_fu_244_p1() {
    tmp_16_fu_244_p1 = esl_zext<128,8>(tmp_12_fu_230_p3.read());
}

void read_data::thread_tmp_17_fu_248_p1() {
    tmp_17_fu_248_p1 = esl_zext<128,8>(tmp_14_fu_238_p2.read());
}

void read_data::thread_tmp_18_fu_288_p2() {
    tmp_18_fu_288_p2 = (!tmp_15_fu_284_p1.read().is_01())? sc_lv<128>(): tmp_8_fu_270_p1.read() << (unsigned short)tmp_15_fu_284_p1.read().to_uint();
}

void read_data::thread_tmp_19_fu_294_p4() {
    tmp_19_fu_294_p4 = tmp_18_reg_400.read().range(0, 127);
}

void read_data::thread_tmp_20_fu_303_p3() {
    tmp_20_fu_303_p3 = (!tmp_5_reg_382.read()[0].is_01())? sc_lv<128>(): ((tmp_5_reg_382.read()[0].to_bool())? tmp_19_fu_294_p4.read(): tmp_18_reg_400.read());
}

void read_data::thread_tmp_21_fu_252_p2() {
    tmp_21_fu_252_p2 = (!tmp_16_fu_244_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 << (unsigned short)tmp_16_fu_244_p1.read().to_uint();
}

void read_data::thread_tmp_22_fu_258_p2() {
    tmp_22_fu_258_p2 = (!tmp_17_fu_248_p1.read().is_01())? sc_lv<128>(): ap_const_lv128_lc_1 >> (unsigned short)tmp_17_fu_248_p1.read().to_uint();
}

void read_data::thread_tmp_23_fu_309_p2() {
    tmp_23_fu_309_p2 = (p_demorgan_reg_394.read() ^ ap_const_lv128_lc_1);
}

void read_data::thread_tmp_24_fu_314_p2() {
    tmp_24_fu_314_p2 = (buf_r_q0.read() & tmp_23_fu_309_p2.read());
}

void read_data::thread_tmp_25_fu_320_p2() {
    tmp_25_fu_320_p2 = (tmp_20_fu_303_p3.read() & p_demorgan_reg_394.read());
}

void read_data::thread_tmp_2_fu_195_p3() {
    tmp_2_fu_195_p3 = esl_concat<3,4>(tmp_4_reg_362.read(), ap_const_lv4_0);
}

void read_data::thread_tmp_3_fu_202_p2() {
    tmp_3_fu_202_p2 = (tmp_2_fu_195_p3.read() | ap_const_lv7_F);
}

void read_data::thread_tmp_4_fu_165_p1() {
    tmp_4_fu_165_p1 = c_mid2_fu_140_p3.read().range(3-1, 0);
}

void read_data::thread_tmp_5_fu_208_p2() {
    tmp_5_fu_208_p2 = (!tmp_2_fu_195_p3.read().is_01() || !tmp_3_fu_202_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_2_fu_195_p3.read()) > sc_biguint<7>(tmp_3_fu_202_p2.read()));
}

void read_data::thread_tmp_6_fu_214_p1() {
    tmp_6_fu_214_p1 = esl_zext<8,7>(tmp_2_fu_195_p3.read());
}

void read_data::thread_tmp_7_fu_218_p1() {
    tmp_7_fu_218_p1 = esl_zext<8,7>(tmp_3_fu_202_p2.read());
}

void read_data::thread_tmp_7_mid2_fu_160_p1() {
    tmp_7_mid2_fu_160_p1 = esl_zext<64,4>(tmp_mid2_v_v_fu_148_p3.read());
}

void read_data::thread_tmp_8_fu_270_p1() {
    tmp_8_fu_270_p1 = esl_zext<128,16>(input_load_reg_377.read());
}

void read_data::thread_tmp_9_fu_179_p2() {
    tmp_9_fu_179_p2 = (!c_cast2_fu_176_p1.read().is_01() || !tmp_mid2_fu_169_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(c_cast2_fu_176_p1.read()) + sc_biguint<6>(tmp_mid2_fu_169_p3.read()));
}

void read_data::thread_tmp_fu_156_p1() {
    tmp_fu_156_p1 = tmp_mid2_v_v_fu_148_p3.read().range(3-1, 0);
}

void read_data::thread_tmp_mid2_fu_169_p3() {
    tmp_mid2_fu_169_p3 = esl_concat<3,3>(tmp_reg_352.read(), ap_const_lv3_0);
}

void read_data::thread_tmp_mid2_v_v_fu_148_p3() {
    tmp_mid2_v_v_fu_148_p3 = (!exitcond5_fu_134_p2.read()[0].is_01())? sc_lv<4>(): ((exitcond5_fu_134_p2.read()[0].to_bool())? r_2_fu_128_p2.read(): r_phi_fu_96_p4.read());
}

void read_data::thread_tmp_s_fu_185_p1() {
    tmp_s_fu_185_p1 = esl_zext<64,6>(tmp_9_fu_179_p2.read());
}

void read_data::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_116_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_116_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

