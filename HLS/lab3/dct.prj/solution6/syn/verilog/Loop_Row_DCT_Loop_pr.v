// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_Row_DCT_Loop_pr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        buf_2d_in_0_address0,
        buf_2d_in_0_ce0,
        buf_2d_in_0_q0,
        buf_2d_in_1_address0,
        buf_2d_in_1_ce0,
        buf_2d_in_1_q0,
        buf_2d_in_2_address0,
        buf_2d_in_2_ce0,
        buf_2d_in_2_q0,
        buf_2d_in_3_address0,
        buf_2d_in_3_ce0,
        buf_2d_in_3_q0,
        buf_2d_in_4_address0,
        buf_2d_in_4_ce0,
        buf_2d_in_4_q0,
        buf_2d_in_5_address0,
        buf_2d_in_5_ce0,
        buf_2d_in_5_q0,
        buf_2d_in_6_address0,
        buf_2d_in_6_ce0,
        buf_2d_in_6_q0,
        buf_2d_in_7_address0,
        buf_2d_in_7_ce0,
        buf_2d_in_7_q0,
        row_outbuf_i_address0,
        row_outbuf_i_ce0,
        row_outbuf_i_we0,
        row_outbuf_i_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [2:0] buf_2d_in_0_address0;
output   buf_2d_in_0_ce0;
input  [15:0] buf_2d_in_0_q0;
output  [2:0] buf_2d_in_1_address0;
output   buf_2d_in_1_ce0;
input  [15:0] buf_2d_in_1_q0;
output  [2:0] buf_2d_in_2_address0;
output   buf_2d_in_2_ce0;
input  [15:0] buf_2d_in_2_q0;
output  [2:0] buf_2d_in_3_address0;
output   buf_2d_in_3_ce0;
input  [15:0] buf_2d_in_3_q0;
output  [2:0] buf_2d_in_4_address0;
output   buf_2d_in_4_ce0;
input  [15:0] buf_2d_in_4_q0;
output  [2:0] buf_2d_in_5_address0;
output   buf_2d_in_5_ce0;
input  [15:0] buf_2d_in_5_q0;
output  [2:0] buf_2d_in_6_address0;
output   buf_2d_in_6_ce0;
input  [15:0] buf_2d_in_6_q0;
output  [2:0] buf_2d_in_7_address0;
output   buf_2d_in_7_ce0;
input  [15:0] buf_2d_in_7_q0;
output  [5:0] row_outbuf_i_address0;
output   row_outbuf_i_ce0;
output   row_outbuf_i_we0;
output  [15:0] row_outbuf_i_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg buf_2d_in_0_ce0;
reg buf_2d_in_1_ce0;
reg buf_2d_in_2_ce0;
reg buf_2d_in_3_ce0;
reg buf_2d_in_4_ce0;
reg buf_2d_in_5_ce0;
reg buf_2d_in_6_ce0;
reg buf_2d_in_7_ce0;
reg row_outbuf_i_ce0;
reg row_outbuf_i_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] dct_coeff_table_0_address0;
reg    dct_coeff_table_0_ce0;
wire   [13:0] dct_coeff_table_0_q0;
wire   [2:0] dct_coeff_table_1_address0;
reg    dct_coeff_table_1_ce0;
wire   [14:0] dct_coeff_table_1_q0;
wire   [2:0] dct_coeff_table_2_address0;
reg    dct_coeff_table_2_ce0;
wire   [14:0] dct_coeff_table_2_q0;
wire   [2:0] dct_coeff_table_3_address0;
reg    dct_coeff_table_3_ce0;
wire   [14:0] dct_coeff_table_3_q0;
wire   [2:0] dct_coeff_table_4_address0;
reg    dct_coeff_table_4_ce0;
wire   [14:0] dct_coeff_table_4_q0;
wire   [2:0] dct_coeff_table_5_address0;
reg    dct_coeff_table_5_ce0;
wire   [14:0] dct_coeff_table_5_q0;
wire   [2:0] dct_coeff_table_6_address0;
reg    dct_coeff_table_6_ce0;
wire   [14:0] dct_coeff_table_6_q0;
wire   [2:0] dct_coeff_table_7_address0;
reg    dct_coeff_table_7_ce0;
wire   [14:0] dct_coeff_table_7_q0;
reg   [3:0] k_i_reg_285;
wire   [0:0] tmp_fu_296_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] i_fu_302_p2;
reg   [3:0] i_reg_496;
wire   [7:0] tmp_16_cast_fu_328_p1;
reg   [7:0] tmp_16_cast_reg_501;
reg   [2:0] buf_2d_in_0_addr_reg_506;
reg   [2:0] buf_2d_in_1_addr_reg_511;
reg   [2:0] buf_2d_in_2_addr_reg_516;
reg   [2:0] buf_2d_in_3_addr_reg_521;
reg   [2:0] buf_2d_in_4_addr_reg_526;
reg   [2:0] buf_2d_in_5_addr_reg_531;
reg   [2:0] buf_2d_in_6_addr_reg_536;
reg   [2:0] buf_2d_in_7_addr_reg_541;
wire   [0:0] tmp_i_fu_332_p2;
reg   [0:0] tmp_i_reg_546;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_tmp_i_reg_546;
reg   [0:0] ap_reg_pp0_iter2_tmp_i_reg_546;
reg   [0:0] ap_reg_pp0_iter3_tmp_i_reg_546;
reg   [0:0] ap_reg_pp0_iter4_tmp_i_reg_546;
wire   [3:0] k_fu_338_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_i_17_fu_344_p1;
reg   [63:0] tmp_i_17_reg_555;
wire   [7:0] tmp_5_fu_355_p2;
reg   [7:0] tmp_5_reg_564;
reg   [7:0] ap_reg_pp0_iter1_tmp_5_reg_564;
reg   [7:0] ap_reg_pp0_iter2_tmp_5_reg_564;
reg   [7:0] ap_reg_pp0_iter3_tmp_5_reg_564;
reg   [7:0] ap_reg_pp0_iter4_tmp_5_reg_564;
reg  signed [14:0] dct_coeff_table_1_lo_reg_589;
reg  signed [15:0] buf_2d_in_1_load_reg_594;
reg  signed [14:0] dct_coeff_table_3_lo_reg_604;
reg  signed [15:0] buf_2d_in_3_load_reg_609;
reg  signed [14:0] dct_coeff_table_5_lo_reg_619;
reg  signed [15:0] buf_2d_in_5_load_reg_624;
reg   [13:0] dct_coeff_table_0_lo_reg_639;
reg  signed [15:0] buf_2d_in_0_load_reg_644;
wire  signed [28:0] tmp_8_1_i_fu_435_p2;
reg  signed [28:0] tmp_8_1_i_reg_649;
reg  signed [14:0] dct_coeff_table_2_lo_reg_654;
reg  signed [15:0] buf_2d_in_2_load_reg_659;
wire  signed [28:0] tmp_8_3_i_fu_441_p2;
reg  signed [28:0] tmp_8_3_i_reg_664;
reg  signed [14:0] dct_coeff_table_4_lo_reg_669;
reg  signed [15:0] buf_2d_in_4_load_reg_674;
wire  signed [28:0] tmp_8_5_i_fu_447_p2;
reg  signed [28:0] tmp_8_5_i_reg_679;
reg  signed [14:0] dct_coeff_table_6_lo_reg_684;
reg  signed [15:0] buf_2d_in_6_load_reg_689;
reg  signed [14:0] dct_coeff_table_7_lo_reg_694;
reg  signed [15:0] buf_2d_in_7_load_reg_699;
(* use_dsp48 = "no" *) wire   [28:0] tmp1_fu_408_p2;
reg   [28:0] tmp1_reg_704;
wire  signed [28:0] grp_fu_469_p3;
reg  signed [28:0] tmp5_reg_709;
reg    ap_enable_reg_pp0_iter3;
wire  signed [28:0] grp_fu_476_p3;
reg  signed [28:0] tmp6_reg_714;
reg   [15:0] tmp_5_i_reg_719;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [3:0] i_0_i_reg_274;
reg    ap_block_state1;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_141_cast_i_fu_308_p1;
wire    ap_block_pp0_stage0_flag00000000;
wire   [63:0] tmp_17_cast_fu_431_p1;
wire   [6:0] tmp_s_fu_320_p3;
wire   [7:0] tmp_i_cast_fu_351_p1;
wire  signed [28:0] grp_fu_453_p3;
wire  signed [28:0] grp_fu_461_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp4_fu_412_p2;
wire   [28:0] tmp_3_i_fu_416_p2;
wire   [13:0] grp_fu_453_p0;
wire  signed [28:0] grp_fu_483_p3;
wire   [13:0] grp_fu_483_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [28:0] grp_fu_453_p00;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

Loop_Row_DCT_Loopbkb #(
    .DataWidth( 14 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_0_address0),
    .ce0(dct_coeff_table_0_ce0),
    .q0(dct_coeff_table_0_q0)
);

Loop_Row_DCT_Loopcud #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_1_address0),
    .ce0(dct_coeff_table_1_ce0),
    .q0(dct_coeff_table_1_q0)
);

Loop_Row_DCT_LoopdEe #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_2_address0),
    .ce0(dct_coeff_table_2_ce0),
    .q0(dct_coeff_table_2_q0)
);

Loop_Row_DCT_LoopeOg #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_3_address0),
    .ce0(dct_coeff_table_3_ce0),
    .q0(dct_coeff_table_3_q0)
);

Loop_Row_DCT_LoopfYi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_4_address0),
    .ce0(dct_coeff_table_4_ce0),
    .q0(dct_coeff_table_4_q0)
);

Loop_Row_DCT_Loopg8j #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_5_address0),
    .ce0(dct_coeff_table_5_ce0),
    .q0(dct_coeff_table_5_q0)
);

Loop_Row_DCT_Loophbi #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_6_address0),
    .ce0(dct_coeff_table_6_ce0),
    .q0(dct_coeff_table_6_q0)
);

Loop_Row_DCT_Loopibs #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dct_coeff_table_7_address0),
    .ce0(dct_coeff_table_7_ce0),
    .q0(dct_coeff_table_7_q0)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U10(
    .din0(dct_coeff_table_1_lo_reg_589),
    .din1(buf_2d_in_1_load_reg_594),
    .dout(tmp_8_1_i_fu_435_p2)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U11(
    .din0(dct_coeff_table_3_lo_reg_604),
    .din1(buf_2d_in_3_load_reg_609),
    .dout(tmp_8_3_i_fu_441_p2)
);

dct_mul_mul_15s_1jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
dct_mul_mul_15s_1jbC_U12(
    .din0(dct_coeff_table_5_lo_reg_619),
    .din1(buf_2d_in_5_load_reg_624),
    .dout(tmp_8_5_i_fu_447_p2)
);

dct_mac_muladd_14kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_14kbM_U13(
    .din0(grp_fu_453_p0),
    .din1(buf_2d_in_0_load_reg_644),
    .din2(tmp_8_1_i_reg_649),
    .dout(grp_fu_453_p3)
);

dct_mac_muladd_15lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15lbW_U14(
    .din0(dct_coeff_table_2_lo_reg_654),
    .din1(buf_2d_in_2_load_reg_659),
    .din2(tmp_8_3_i_reg_664),
    .dout(grp_fu_461_p3)
);

dct_mac_muladd_15lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15lbW_U15(
    .din0(dct_coeff_table_4_lo_reg_669),
    .din1(buf_2d_in_4_load_reg_674),
    .din2(tmp_8_5_i_reg_679),
    .dout(grp_fu_469_p3)
);

dct_mac_muladd_15lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15lbW_U16(
    .din0(dct_coeff_table_6_lo_reg_684),
    .din1(buf_2d_in_6_load_reg_689),
    .din2(grp_fu_483_p3),
    .dout(grp_fu_476_p3)
);

dct_mac_muladd_15mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_15mb6_U17(
    .din0(dct_coeff_table_7_lo_reg_694),
    .din1(buf_2d_in_7_load_reg_699),
    .din2(grp_fu_483_p2),
    .dout(grp_fu_483_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_0_i_reg_274 <= i_reg_496;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        i_0_i_reg_274 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_i_fu_332_p2))) begin
        k_i_reg_285 <= k_fu_338_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd0))) begin
        k_i_reg_285 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_5_reg_564 <= tmp_5_reg_564;
        ap_reg_pp0_iter1_tmp_i_reg_546 <= tmp_i_reg_546;
        tmp_i_reg_546 <= tmp_i_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_tmp_5_reg_564 <= ap_reg_pp0_iter1_tmp_5_reg_564;
        ap_reg_pp0_iter2_tmp_i_reg_546 <= ap_reg_pp0_iter1_tmp_i_reg_546;
        ap_reg_pp0_iter3_tmp_5_reg_564 <= ap_reg_pp0_iter2_tmp_5_reg_564;
        ap_reg_pp0_iter3_tmp_i_reg_546 <= ap_reg_pp0_iter2_tmp_i_reg_546;
        ap_reg_pp0_iter4_tmp_5_reg_564 <= ap_reg_pp0_iter3_tmp_5_reg_564;
        ap_reg_pp0_iter4_tmp_i_reg_546 <= ap_reg_pp0_iter3_tmp_i_reg_546;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd0))) begin
        buf_2d_in_0_addr_reg_506 <= tmp_141_cast_i_fu_308_p1;
        buf_2d_in_1_addr_reg_511 <= tmp_141_cast_i_fu_308_p1;
        buf_2d_in_2_addr_reg_516 <= tmp_141_cast_i_fu_308_p1;
        buf_2d_in_3_addr_reg_521 <= tmp_141_cast_i_fu_308_p1;
        buf_2d_in_4_addr_reg_526 <= tmp_141_cast_i_fu_308_p1;
        buf_2d_in_5_addr_reg_531 <= tmp_141_cast_i_fu_308_p1;
        buf_2d_in_6_addr_reg_536 <= tmp_141_cast_i_fu_308_p1;
        buf_2d_in_7_addr_reg_541 <= tmp_141_cast_i_fu_308_p1;
        tmp_16_cast_reg_501[6 : 3] <= tmp_16_cast_fu_328_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter1_tmp_i_reg_546))) begin
        buf_2d_in_0_load_reg_644 <= buf_2d_in_0_q0;
        buf_2d_in_2_load_reg_659 <= buf_2d_in_2_q0;
        buf_2d_in_4_load_reg_674 <= buf_2d_in_4_q0;
        buf_2d_in_6_load_reg_689 <= buf_2d_in_6_q0;
        buf_2d_in_7_load_reg_699 <= buf_2d_in_7_q0;
        dct_coeff_table_0_lo_reg_639 <= dct_coeff_table_0_q0;
        dct_coeff_table_2_lo_reg_654 <= dct_coeff_table_2_q0;
        dct_coeff_table_4_lo_reg_669 <= dct_coeff_table_4_q0;
        dct_coeff_table_6_lo_reg_684 <= dct_coeff_table_6_q0;
        dct_coeff_table_7_lo_reg_694 <= dct_coeff_table_7_q0;
        tmp_8_1_i_reg_649 <= tmp_8_1_i_fu_435_p2;
        tmp_8_3_i_reg_664 <= tmp_8_3_i_fu_441_p2;
        tmp_8_5_i_reg_679 <= tmp_8_5_i_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_i_reg_546))) begin
        buf_2d_in_1_load_reg_594 <= buf_2d_in_1_q0;
        buf_2d_in_3_load_reg_609 <= buf_2d_in_3_q0;
        buf_2d_in_5_load_reg_624 <= buf_2d_in_5_q0;
        dct_coeff_table_1_lo_reg_589 <= dct_coeff_table_1_q0;
        dct_coeff_table_3_lo_reg_604 <= dct_coeff_table_3_q0;
        dct_coeff_table_5_lo_reg_619 <= dct_coeff_table_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_496 <= i_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_tmp_i_reg_546))) begin
        tmp1_reg_704 <= tmp1_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter2_tmp_i_reg_546) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        tmp5_reg_709 <= grp_fu_469_p3;
        tmp6_reg_714 <= grp_fu_476_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == ap_reg_pp0_iter3_tmp_i_reg_546))) begin
        tmp_5_i_reg_719 <= {{tmp_3_i_fu_416_p2[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd0 == tmp_i_fu_332_p2))) begin
        tmp_5_reg_564 <= tmp_5_fu_355_p2;
        tmp_i_17_reg_555[3 : 0] <= tmp_i_17_fu_344_p1[3 : 0];
    end
end

always @ (*) begin
    if ((tmp_i_fu_332_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buf_2d_in_0_ce0 = 1'b1;
    end else begin
        buf_2d_in_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        buf_2d_in_1_ce0 = 1'b1;
    end else begin
        buf_2d_in_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buf_2d_in_2_ce0 = 1'b1;
    end else begin
        buf_2d_in_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        buf_2d_in_3_ce0 = 1'b1;
    end else begin
        buf_2d_in_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buf_2d_in_4_ce0 = 1'b1;
    end else begin
        buf_2d_in_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        buf_2d_in_5_ce0 = 1'b1;
    end else begin
        buf_2d_in_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buf_2d_in_6_ce0 = 1'b1;
    end else begin
        buf_2d_in_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        buf_2d_in_7_ce0 = 1'b1;
    end else begin
        buf_2d_in_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dct_coeff_table_0_ce0 = 1'b1;
    end else begin
        dct_coeff_table_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        dct_coeff_table_1_ce0 = 1'b1;
    end else begin
        dct_coeff_table_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dct_coeff_table_2_ce0 = 1'b1;
    end else begin
        dct_coeff_table_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        dct_coeff_table_3_ce0 = 1'b1;
    end else begin
        dct_coeff_table_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dct_coeff_table_4_ce0 = 1'b1;
    end else begin
        dct_coeff_table_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        dct_coeff_table_5_ce0 = 1'b1;
    end else begin
        dct_coeff_table_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dct_coeff_table_6_ce0 = 1'b1;
    end else begin
        dct_coeff_table_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        dct_coeff_table_7_ce0 = 1'b1;
    end else begin
        dct_coeff_table_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        row_outbuf_i_ce0 = 1'b1;
    end else begin
        row_outbuf_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter5) & (1'd0 == ap_reg_pp0_iter4_tmp_i_reg_546))) begin
        row_outbuf_i_we0 = 1'b1;
    end else begin
        row_outbuf_i_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_296_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter5) & (ap_enable_reg_pp0_iter4 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_i_fu_332_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter5) & (ap_enable_reg_pp0_iter4 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (tmp_i_fu_332_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign buf_2d_in_0_address0 = buf_2d_in_0_addr_reg_506;

assign buf_2d_in_1_address0 = buf_2d_in_1_addr_reg_511;

assign buf_2d_in_2_address0 = buf_2d_in_2_addr_reg_516;

assign buf_2d_in_3_address0 = buf_2d_in_3_addr_reg_521;

assign buf_2d_in_4_address0 = buf_2d_in_4_addr_reg_526;

assign buf_2d_in_5_address0 = buf_2d_in_5_addr_reg_531;

assign buf_2d_in_6_address0 = buf_2d_in_6_addr_reg_536;

assign buf_2d_in_7_address0 = buf_2d_in_7_addr_reg_541;

assign dct_coeff_table_0_address0 = tmp_i_17_reg_555;

assign dct_coeff_table_1_address0 = tmp_i_17_fu_344_p1;

assign dct_coeff_table_2_address0 = tmp_i_17_reg_555;

assign dct_coeff_table_3_address0 = tmp_i_17_fu_344_p1;

assign dct_coeff_table_4_address0 = tmp_i_17_reg_555;

assign dct_coeff_table_5_address0 = tmp_i_17_fu_344_p1;

assign dct_coeff_table_6_address0 = tmp_i_17_reg_555;

assign dct_coeff_table_7_address0 = tmp_i_17_reg_555;

assign grp_fu_453_p0 = grp_fu_453_p00;

assign grp_fu_453_p00 = dct_coeff_table_0_lo_reg_639;

assign grp_fu_483_p2 = 29'd4096;

assign i_fu_302_p2 = (i_0_i_reg_274 + 4'd1);

assign k_fu_338_p2 = (k_i_reg_285 + 4'd1);

assign row_outbuf_i_address0 = tmp_17_cast_fu_431_p1;

assign row_outbuf_i_d0 = tmp_5_i_reg_719;

assign tmp1_fu_408_p2 = ($signed(grp_fu_453_p3) + $signed(grp_fu_461_p3));

assign tmp4_fu_412_p2 = ($signed(tmp5_reg_709) + $signed(tmp6_reg_714));

assign tmp_141_cast_i_fu_308_p1 = i_0_i_reg_274;

assign tmp_16_cast_fu_328_p1 = tmp_s_fu_320_p3;

assign tmp_17_cast_fu_431_p1 = ap_reg_pp0_iter4_tmp_5_reg_564;

assign tmp_3_i_fu_416_p2 = (tmp1_reg_704 + tmp4_fu_412_p2);

assign tmp_5_fu_355_p2 = (tmp_16_cast_reg_501 + tmp_i_cast_fu_351_p1);

assign tmp_fu_296_p2 = ((i_0_i_reg_274 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_i_17_fu_344_p1 = k_i_reg_285;

assign tmp_i_cast_fu_351_p1 = k_i_reg_285;

assign tmp_i_fu_332_p2 = ((k_i_reg_285 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_s_fu_320_p3 = {{i_0_i_reg_274}, {3'd0}};

always @ (posedge ap_clk) begin
    tmp_16_cast_reg_501[2:0] <= 3'b000;
    tmp_16_cast_reg_501[7] <= 1'b0;
    tmp_i_17_reg_555[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //Loop_Row_DCT_Loop_pr
