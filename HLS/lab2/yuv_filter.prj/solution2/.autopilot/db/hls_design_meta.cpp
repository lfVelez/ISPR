#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("in_channels_ch1_address0", 22, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("in_channels_ch1_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("in_channels_ch1_q0", 8, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("in_channels_ch2_address0", 22, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("in_channels_ch2_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("in_channels_ch2_q0", 8, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("in_channels_ch3_address0", 22, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("in_channels_ch3_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("in_channels_ch3_q0", 8, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("in_width", 16, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("in_height", 16, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("out_channels_ch1_address0", 22, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("out_channels_ch1_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("out_channels_ch1_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("out_channels_ch1_d0", 8, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("out_channels_ch2_address0", 22, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("out_channels_ch2_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("out_channels_ch2_we0", 1, hls_out, 6, "ap_memory", "mem_we", 1),
	Port_Property("out_channels_ch2_d0", 8, hls_out, 6, "ap_memory", "mem_din", 1),
	Port_Property("out_channels_ch3_address0", 22, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("out_channels_ch3_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("out_channels_ch3_we0", 1, hls_out, 7, "ap_memory", "mem_we", 1),
	Port_Property("out_channels_ch3_d0", 8, hls_out, 7, "ap_memory", "mem_din", 1),
	Port_Property("out_width", 16, hls_out, 8, "ap_vld", "out_data", 1),
	Port_Property("out_width_ap_vld", 1, hls_out, 8, "ap_vld", "out_vld", 1),
	Port_Property("out_height", 16, hls_out, 9, "ap_vld", "out_data", 1),
	Port_Property("out_height_ap_vld", 1, hls_out, 9, "ap_vld", "out_vld", 1),
	Port_Property("Y_scale", 8, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("U_scale", 8, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("V_scale", 8, hls_in, 12, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "yuv_filter";
