

================================================================
== Vivado HLS Report for 'yuv_scale'
================================================================
* Date:           Thu May 13 18:22:38 2021

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        yuv_filter.prj
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      6.38|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+---------+-------+---------+---------+
    |     Latency     |     Interval    | Pipeline|
    |  min  |   max   |  min  |   max   |   Type  |
    +-------+---------+-------+---------+---------+
    |  40011|  2457611|  40011|  2457611|   none  |
    +-------+---------+-------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |                                     |     Latency     | Iteration|  Initiation Interval  |       Trip      |          |
        |              Loop Name              |  min  |   max   |  Latency |  achieved |   target  |      Count      | Pipelined|
        +-------------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |- YUV_SCALE_LOOP_X_YUV_SCALE_LOOP_Y  |  40009|  2457609|        11|          1|          1| 40000 ~ 2457600 |    yes   |
        +-------------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 1
  Pipeline-0: II = 1, D = 11, States = { 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	13  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	2  / true
13 --> 
* FSM state operations: 

 <State 1>: 6.38ns
ST_1: V_scale_read (12)  [1/1] 0.00ns
:0  %V_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %V_scale)

ST_1: U_scale_read (13)  [1/1] 0.00ns
:1  %U_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %U_scale)

ST_1: Y_scale_read (14)  [1/1] 0.00ns
:2  %Y_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %Y_scale)

ST_1: in_height_read_1 (15)  [1/1] 0.00ns
:3  %in_height_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_height_read)

ST_1: in_width_read_1 (16)  [1/1] 0.00ns
:4  %in_width_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_width_read)

ST_1: tmp_cast (17)  [1/1] 0.00ns  loc: yuv_filter.c:138
:5  %tmp_cast = zext i8 %Y_scale_read to i15

ST_1: tmp_1_cast (18)  [1/1] 0.00ns  loc: yuv_filter.c:139
:6  %tmp_1_cast = zext i8 %U_scale_read to i15

ST_1: tmp_2_cast (19)  [1/1] 0.00ns  loc: yuv_filter.c:129
:7  %tmp_2_cast = zext i8 %V_scale_read to i15

ST_1: cast (20)  [1/1] 0.00ns
:8  %cast = zext i16 %in_width_read_1 to i32

ST_1: cast1 (21)  [1/1] 0.00ns
:9  %cast1 = zext i16 %in_height_read_1 to i32

ST_1: bound (22)  [1/1] 6.38ns
:10  %bound = mul i32 %cast1, %cast

ST_1: StgValue_25 (23)  [1/1] 1.77ns  loc: yuv_filter.c:129
:11  br label %1


 <State 2>: 5.10ns
ST_2: indvar_flatten (25)  [1/1] 0.00ns
:0  %indvar_flatten = phi i32 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]

ST_2: x (26)  [1/1] 0.00ns  loc: yuv_filter.c:134
:1  %x = phi i16 [ 0, %0 ], [ %tmp_3_mid2_v, %.reset ]

ST_2: y (27)  [1/1] 0.00ns
:2  %y = phi i16 [ 0, %0 ], [ %y_1, %.reset ]

ST_2: exitcond_flatten (28)  [1/1] 3.26ns
:3  %exitcond_flatten = icmp eq i32 %indvar_flatten, %bound

ST_2: indvar_flatten_next (29)  [1/1] 3.44ns
:4  %indvar_flatten_next = add i32 %indvar_flatten, 1

ST_2: StgValue_31 (30)  [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %2, label %.reset

ST_2: x_1 (32)  [1/1] 2.96ns  loc: yuv_filter.c:129
.reset:0  %x_1 = add i16 1, %x

ST_2: exitcond3 (35)  [1/1] 3.03ns  loc: yuv_filter.c:132
.reset:3  %exitcond3 = icmp eq i16 %y, %in_height_read_1

ST_2: y_mid2 (36)  [1/1] 2.07ns  loc: yuv_filter.c:132
.reset:4  %y_mid2 = select i1 %exitcond3, i16 0, i16 %y

ST_2: tmp_3_mid2_v (37)  [1/1] 2.07ns  loc: yuv_filter.c:134
.reset:5  %tmp_3_mid2_v = select i1 %exitcond3, i16 %x_1, i16 %x

ST_2: tmp (38)  [1/1] 0.00ns  loc: yuv_filter.c:134
.reset:6  %tmp = trunc i16 %tmp_3_mid2_v to i13

ST_2: tmp_1 (40)  [1/1] 0.00ns  loc: yuv_filter.c:134
.reset:8  %tmp_1 = trunc i16 %tmp_3_mid2_v to i15


 <State 3>: 4.11ns
ST_3: p_shl_cast (39)  [1/1] 0.00ns  loc: yuv_filter.c:134
.reset:7  %p_shl_cast = call i23 @_ssdm_op_BitConcatenate.i23.i13.i10(i13 %tmp, i10 0)

ST_3: p_shl1_cast (41)  [1/1] 0.00ns  loc: yuv_filter.c:134
.reset:9  %p_shl1_cast = call i23 @_ssdm_op_BitConcatenate.i23.i15.i8(i15 %tmp_1, i8 0)

ST_3: tmp_3 (42)  [1/1] 2.05ns  loc: yuv_filter.c:134
.reset:10  %tmp_3 = add i23 %p_shl_cast, %p_shl1_cast

ST_3: tmp_5_cast (46)  [1/1] 0.00ns  loc: yuv_filter.c:134
.reset:14  %tmp_5_cast = zext i16 %y_mid2 to i23

ST_3: tmp_5 (47)  [1/1] 2.05ns  loc: yuv_filter.c:134
.reset:15  %tmp_5 = add i23 %tmp_5_cast, %tmp_3

ST_3: y_1 (71)  [1/1] 2.96ns  loc: yuv_filter.c:132
.reset:39  %y_1 = add i16 1, %y_mid2


 <State 4>: 3.25ns
ST_4: tmp_10_cast (48)  [1/1] 0.00ns  loc: yuv_filter.c:134
.reset:16  %tmp_10_cast = zext i23 %tmp_5 to i64

ST_4: in_channels_ch1_addr (49)  [1/1] 0.00ns  loc: yuv_filter.c:134
.reset:17  %in_channels_ch1_addr = getelementptr [2457600 x i8]* %in_channels_ch1, i64 0, i64 %tmp_10_cast

ST_4: in_channels_ch2_addr (50)  [1/1] 0.00ns  loc: yuv_filter.c:135
.reset:18  %in_channels_ch2_addr = getelementptr [2457600 x i8]* %in_channels_ch2, i64 0, i64 %tmp_10_cast

ST_4: in_channels_ch3_addr (51)  [1/1] 0.00ns  loc: yuv_filter.c:136
.reset:19  %in_channels_ch3_addr = getelementptr [2457600 x i8]* %in_channels_ch3, i64 0, i64 %tmp_10_cast

ST_4: Y (55)  [4/4] 3.25ns  loc: yuv_filter.c:134
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_4: U (56)  [4/4] 3.25ns  loc: yuv_filter.c:135
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_4: V (57)  [4/4] 3.25ns  loc: yuv_filter.c:136
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1


 <State 5>: 3.25ns
ST_5: Y (55)  [3/4] 3.25ns  loc: yuv_filter.c:134
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_5: U (56)  [3/4] 3.25ns  loc: yuv_filter.c:135
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_5: V (57)  [3/4] 3.25ns  loc: yuv_filter.c:136
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1


 <State 6>: 3.25ns
ST_6: Y (55)  [2/4] 3.25ns  loc: yuv_filter.c:134
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_6: U (56)  [2/4] 3.25ns  loc: yuv_filter.c:135
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_6: V (57)  [2/4] 3.25ns  loc: yuv_filter.c:136
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1


 <State 7>: 3.25ns
ST_7: Y (55)  [1/4] 3.25ns  loc: yuv_filter.c:134
.reset:23  %Y = load i8* %in_channels_ch1_addr, align 1

ST_7: U (56)  [1/4] 3.25ns  loc: yuv_filter.c:135
.reset:24  %U = load i8* %in_channels_ch2_addr, align 1

ST_7: V (57)  [1/4] 3.25ns  loc: yuv_filter.c:136
.reset:25  %V = load i8* %in_channels_ch3_addr, align 1


 <State 8>: 5.51ns
ST_8: tmp_6_cast (58)  [1/1] 0.00ns  loc: yuv_filter.c:137
.reset:26  %tmp_6_cast = zext i8 %Y to i15

ST_8: tmp_7 (59)  [3/3] 5.51ns  loc: yuv_filter.c:137
.reset:27  %tmp_7 = mul i15 %tmp_6_cast, %tmp_cast

ST_8: tmp_9_cast (60)  [1/1] 0.00ns  loc: yuv_filter.c:138
.reset:28  %tmp_9_cast = zext i8 %U to i15

ST_8: tmp_s (61)  [3/3] 5.51ns  loc: yuv_filter.c:138
.reset:29  %tmp_s = mul i15 %tmp_9_cast, %tmp_1_cast

ST_8: tmp_4_cast (62)  [1/1] 0.00ns  loc: yuv_filter.c:139
.reset:30  %tmp_4_cast = zext i8 %V to i15

ST_8: tmp_8 (63)  [3/3] 5.51ns  loc: yuv_filter.c:139
.reset:31  %tmp_8 = mul i15 %tmp_4_cast, %tmp_2_cast


 <State 9>: 5.51ns
ST_9: tmp_7 (59)  [2/3] 5.51ns  loc: yuv_filter.c:137
.reset:27  %tmp_7 = mul i15 %tmp_6_cast, %tmp_cast

ST_9: tmp_s (61)  [2/3] 5.51ns  loc: yuv_filter.c:138
.reset:29  %tmp_s = mul i15 %tmp_9_cast, %tmp_1_cast

ST_9: tmp_8 (63)  [2/3] 5.51ns  loc: yuv_filter.c:139
.reset:31  %tmp_8 = mul i15 %tmp_4_cast, %tmp_2_cast


 <State 10>: 5.51ns
ST_10: tmp_7 (59)  [1/3] 5.51ns  loc: yuv_filter.c:137
.reset:27  %tmp_7 = mul i15 %tmp_6_cast, %tmp_cast

ST_10: tmp_s (61)  [1/3] 5.51ns  loc: yuv_filter.c:138
.reset:29  %tmp_s = mul i15 %tmp_9_cast, %tmp_1_cast

ST_10: tmp_8 (63)  [1/3] 5.51ns  loc: yuv_filter.c:139
.reset:31  %tmp_8 = mul i15 %tmp_4_cast, %tmp_2_cast

ST_10: tmp_4 (64)  [1/1] 0.00ns  loc: yuv_filter.c:140
.reset:32  %tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i15.i32.i32(i15 %tmp_7, i32 7, i32 14)

ST_10: tmp_6 (66)  [1/1] 0.00ns  loc: yuv_filter.c:141
.reset:34  %tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i15.i32.i32(i15 %tmp_s, i32 7, i32 14)

ST_10: tmp_9 (68)  [1/1] 0.00ns  loc: yuv_filter.c:142
.reset:36  %tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i15.i32.i32(i15 %tmp_8, i32 7, i32 14)


 <State 11>: 3.25ns
ST_11: out_channels_ch1_add (52)  [1/1] 0.00ns  loc: yuv_filter.c:140
.reset:20  %out_channels_ch1_add = getelementptr [2457600 x i8]* %out_channels_ch1, i64 0, i64 %tmp_10_cast

ST_11: out_channels_ch2_add (53)  [1/1] 0.00ns  loc: yuv_filter.c:141
.reset:21  %out_channels_ch2_add = getelementptr [2457600 x i8]* %out_channels_ch2, i64 0, i64 %tmp_10_cast

ST_11: out_channels_ch3_add (54)  [1/1] 0.00ns  loc: yuv_filter.c:142
.reset:22  %out_channels_ch3_add = getelementptr [2457600 x i8]* %out_channels_ch3, i64 0, i64 %tmp_10_cast

ST_11: StgValue_78 (65)  [2/2] 3.25ns  loc: yuv_filter.c:140
.reset:33  store i8 %tmp_4, i8* %out_channels_ch1_add, align 1

ST_11: StgValue_79 (67)  [2/2] 3.25ns  loc: yuv_filter.c:141
.reset:35  store i8 %tmp_6, i8* %out_channels_ch2_add, align 1

ST_11: StgValue_80 (69)  [2/2] 3.25ns  loc: yuv_filter.c:142
.reset:37  store i8 %tmp_9, i8* %out_channels_ch3_add, align 1


 <State 12>: 3.25ns
ST_12: StgValue_81 (33)  [1/1] 0.00ns
.reset:1  call void (...)* @_ssdm_op_SpecLoopName([34 x i8]* @YUV_SCALE_LOOP_X_YUV)

ST_12: StgValue_82 (34)  [1/1] 0.00ns
.reset:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 40000, i64 2457600, i64 784400)

ST_12: StgValue_83 (43)  [1/1] 0.00ns  loc: yuv_filter.c:132
.reset:11  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str6) nounwind

ST_12: tmp_2 (44)  [1/1] 0.00ns  loc: yuv_filter.c:132
.reset:12  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str6)

ST_12: StgValue_85 (45)  [1/1] 0.00ns  loc: yuv_filter.c:133
.reset:13  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_12: StgValue_86 (65)  [1/2] 3.25ns  loc: yuv_filter.c:140
.reset:33  store i8 %tmp_4, i8* %out_channels_ch1_add, align 1

ST_12: StgValue_87 (67)  [1/2] 3.25ns  loc: yuv_filter.c:141
.reset:35  store i8 %tmp_6, i8* %out_channels_ch2_add, align 1

ST_12: StgValue_88 (69)  [1/2] 3.25ns  loc: yuv_filter.c:142
.reset:37  store i8 %tmp_9, i8* %out_channels_ch3_add, align 1

ST_12: empty (70)  [1/1] 0.00ns  loc: yuv_filter.c:143
.reset:38  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str6, i32 %tmp_2)

ST_12: StgValue_90 (72)  [1/1] 0.00ns  loc: yuv_filter.c:132
.reset:40  br label %1


 <State 13>: 0.00ns
ST_13: mrv (74)  [1/1] 0.00ns  loc: yuv_filter.c:145
:0  %mrv = insertvalue { i16, i16 } undef, i16 %in_width_read_1, 0

ST_13: mrv_1 (75)  [1/1] 0.00ns  loc: yuv_filter.c:145
:1  %mrv_1 = insertvalue { i16, i16 } %mrv, i16 %in_height_read_1, 1

ST_13: StgValue_93 (76)  [1/1] 0.00ns  loc: yuv_filter.c:145
:2  ret { i16, i16 } %mrv_1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 6.38ns
The critical path consists of the following:
	wire read on port 'in_height_read' [15]  (0 ns)
	'mul' operation ('bound') [22]  (6.38 ns)

 <State 2>: 5.1ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', yuv_filter.c:132) [27]  (0 ns)
	'icmp' operation ('exitcond3', yuv_filter.c:132) [35]  (3.03 ns)
	'select' operation ('y_mid2', yuv_filter.c:132) [36]  (2.07 ns)

 <State 3>: 4.11ns
The critical path consists of the following:
	'add' operation ('tmp_3', yuv_filter.c:134) [42]  (2.05 ns)
	'add' operation ('tmp_5', yuv_filter.c:134) [47]  (2.05 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('in_channels_ch1_addr', yuv_filter.c:134) [49]  (0 ns)
	'load' operation ('Y', yuv_filter.c:134) on array 'in_channels_ch1' [55]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('Y', yuv_filter.c:134) on array 'in_channels_ch1' [55]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('Y', yuv_filter.c:134) on array 'in_channels_ch1' [55]  (3.25 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'load' operation ('Y', yuv_filter.c:134) on array 'in_channels_ch1' [55]  (3.25 ns)

 <State 8>: 5.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7', yuv_filter.c:137) [59]  (5.51 ns)

 <State 9>: 5.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7', yuv_filter.c:137) [59]  (5.51 ns)

 <State 10>: 5.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7', yuv_filter.c:137) [59]  (5.51 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('out_channels_ch1_add', yuv_filter.c:140) [52]  (0 ns)
	'store' operation (yuv_filter.c:140) of variable 'tmp_4', yuv_filter.c:140 on array 'out_channels_ch1' [65]  (3.25 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'store' operation (yuv_filter.c:140) of variable 'tmp_4', yuv_filter.c:140 on array 'out_channels_ch1' [65]  (3.25 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
