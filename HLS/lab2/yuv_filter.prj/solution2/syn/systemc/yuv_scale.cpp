// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "yuv_scale.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic yuv_scale::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic yuv_scale::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> yuv_scale::ap_ST_fsm_state1 = "1";
const sc_lv<3> yuv_scale::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> yuv_scale::ap_ST_fsm_state13 = "100";
const bool yuv_scale::ap_const_boolean_1 = true;
const sc_lv<32> yuv_scale::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> yuv_scale::ap_const_lv32_1 = "1";
const bool yuv_scale::ap_const_boolean_0 = false;
const sc_lv<1> yuv_scale::ap_const_lv1_0 = "0";
const sc_lv<1> yuv_scale::ap_const_lv1_1 = "1";
const sc_lv<16> yuv_scale::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> yuv_scale::ap_const_lv16_1 = "1";
const sc_lv<10> yuv_scale::ap_const_lv10_0 = "0000000000";
const sc_lv<8> yuv_scale::ap_const_lv8_0 = "00000000";
const sc_lv<32> yuv_scale::ap_const_lv32_7 = "111";
const sc_lv<32> yuv_scale::ap_const_lv32_E = "1110";
const sc_lv<32> yuv_scale::ap_const_lv32_2 = "10";

yuv_scale::yuv_scale(sc_module_name name) : sc_module(name), mVcdFile(0) {
    yuv_filter_mul_8nhbi_U15 = new yuv_filter_mul_8nhbi<1,3,8,8,15>("yuv_filter_mul_8nhbi_U15");
    yuv_filter_mul_8nhbi_U15->clk(ap_clk);
    yuv_filter_mul_8nhbi_U15->reset(ap_rst);
    yuv_filter_mul_8nhbi_U15->din0(grp_fu_320_p0);
    yuv_filter_mul_8nhbi_U15->din1(grp_fu_320_p1);
    yuv_filter_mul_8nhbi_U15->ce(ap_var_for_const0);
    yuv_filter_mul_8nhbi_U15->dout(grp_fu_320_p2);
    yuv_filter_mul_8nhbi_U16 = new yuv_filter_mul_8nhbi<1,3,8,8,15>("yuv_filter_mul_8nhbi_U16");
    yuv_filter_mul_8nhbi_U16->clk(ap_clk);
    yuv_filter_mul_8nhbi_U16->reset(ap_rst);
    yuv_filter_mul_8nhbi_U16->din0(grp_fu_328_p0);
    yuv_filter_mul_8nhbi_U16->din1(grp_fu_328_p1);
    yuv_filter_mul_8nhbi_U16->ce(ap_var_for_const0);
    yuv_filter_mul_8nhbi_U16->dout(grp_fu_328_p2);
    yuv_filter_mul_8nhbi_U17 = new yuv_filter_mul_8nhbi<1,3,8,8,15>("yuv_filter_mul_8nhbi_U17");
    yuv_filter_mul_8nhbi_U17->clk(ap_clk);
    yuv_filter_mul_8nhbi_U17->reset(ap_rst);
    yuv_filter_mul_8nhbi_U17->din0(grp_fu_336_p0);
    yuv_filter_mul_8nhbi_U17->din1(grp_fu_336_p1);
    yuv_filter_mul_8nhbi_U17->ce(ap_var_for_const0);
    yuv_filter_mul_8nhbi_U17->dout(grp_fu_336_p2);
    yuv_filter_mul_mudEe_x_U18 = new yuv_filter_mul_mudEe<1,1,16,16,32>("yuv_filter_mul_mudEe_x_U18");
    yuv_filter_mul_mudEe_x_U18->din0(bound_fu_381_p0);
    yuv_filter_mul_mudEe_x_U18->din1(bound_fu_381_p1);
    yuv_filter_mul_mudEe_x_U18->dout(bound_fu_381_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_231_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( in_width_read );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( in_height_read );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_bound_fu_381_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_381_p00 );

    SC_METHOD(thread_bound_fu_381_p00);
    sensitive << ( in_height_read );

    SC_METHOD(thread_bound_fu_381_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_381_p10 );

    SC_METHOD(thread_bound_fu_381_p10);
    sensitive << ( in_width_read );

    SC_METHOD(thread_exitcond3_fu_248_p2);
    sensitive << ( in_height_read );
    sensitive << ( exitcond_flatten_fu_231_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( y_phi_fu_204_p4 );

    SC_METHOD(thread_exitcond_flatten_fu_231_p2);
    sensitive << ( indvar_flatten_reg_178 );
    sensitive << ( bound_reg_413 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_320_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( grp_fu_320_p00 );

    SC_METHOD(thread_grp_fu_320_p00);
    sensitive << ( Y_reg_480 );

    SC_METHOD(thread_grp_fu_320_p1);
    sensitive << ( tmp_cast_reg_398 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_grp_fu_328_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( grp_fu_328_p00 );

    SC_METHOD(thread_grp_fu_328_p00);
    sensitive << ( U_reg_485 );

    SC_METHOD(thread_grp_fu_328_p1);
    sensitive << ( tmp_1_cast_reg_403 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_grp_fu_336_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( grp_fu_336_p00 );

    SC_METHOD(thread_grp_fu_336_p00);
    sensitive << ( V_reg_490 );

    SC_METHOD(thread_grp_fu_336_p1);
    sensitive << ( tmp_2_cast_reg_408 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( tmp_10_cast_fu_311_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( tmp_10_cast_fu_311_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( tmp_10_cast_fu_311_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_indvar_flatten_next_fu_236_p2);
    sensitive << ( indvar_flatten_reg_178 );

    SC_METHOD(thread_out_channels_ch1_address0);
    sensitive << ( ap_reg_pp0_iter8_tmp_10_cast_reg_458 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch1_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_out_channels_ch1_d0);
    sensitive << ( tmp_4_reg_510 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch1_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter8_exitcond_flatten_reg_418 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_out_channels_ch2_address0);
    sensitive << ( ap_reg_pp0_iter8_tmp_10_cast_reg_458 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch2_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_out_channels_ch2_d0);
    sensitive << ( tmp_6_reg_515 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch2_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter8_exitcond_flatten_reg_418 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_out_channels_ch3_address0);
    sensitive << ( ap_reg_pp0_iter8_tmp_10_cast_reg_458 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch3_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_out_channels_ch3_d0);
    sensitive << ( tmp_9_reg_520 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_out_channels_ch3_we0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter8_exitcond_flatten_reg_418 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_p_shl1_cast_fu_284_p3);
    sensitive << ( tmp_1_reg_443 );

    SC_METHOD(thread_p_shl_cast_fu_277_p3);
    sensitive << ( tmp_reg_438 );

    SC_METHOD(thread_tmp_10_cast_fu_311_p1);
    sensitive << ( tmp_5_reg_448 );

    SC_METHOD(thread_tmp_1_cast_fu_215_p1);
    sensitive << ( U_scale );

    SC_METHOD(thread_tmp_1_fu_273_p1);
    sensitive << ( tmp_3_mid2_v_fu_261_p3 );

    SC_METHOD(thread_tmp_2_cast_fu_219_p1);
    sensitive << ( V_scale );

    SC_METHOD(thread_tmp_3_fu_291_p2);
    sensitive << ( p_shl_cast_fu_277_p3 );
    sensitive << ( p_shl1_cast_fu_284_p3 );

    SC_METHOD(thread_tmp_3_mid2_v_fu_261_p3);
    sensitive << ( x_phi_fu_193_p4 );
    sensitive << ( exitcond3_fu_248_p2 );
    sensitive << ( x_1_fu_242_p2 );

    SC_METHOD(thread_tmp_5_cast_fu_297_p1);
    sensitive << ( y_mid2_reg_427 );

    SC_METHOD(thread_tmp_5_fu_300_p2);
    sensitive << ( tmp_5_cast_fu_297_p1 );
    sensitive << ( tmp_3_fu_291_p2 );

    SC_METHOD(thread_tmp_cast_fu_211_p1);
    sensitive << ( Y_scale );

    SC_METHOD(thread_tmp_fu_269_p1);
    sensitive << ( tmp_3_mid2_v_fu_261_p3 );

    SC_METHOD(thread_x_1_fu_242_p2);
    sensitive << ( x_phi_fu_193_p4 );

    SC_METHOD(thread_x_phi_fu_193_p4);
    sensitive << ( x_reg_189 );
    sensitive << ( exitcond_flatten_reg_418 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_3_mid2_v_reg_433 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_y_1_fu_306_p2);
    sensitive << ( y_mid2_reg_427 );

    SC_METHOD(thread_y_mid2_fu_253_p3);
    sensitive << ( y_phi_fu_204_p4 );
    sensitive << ( exitcond3_fu_248_p2 );

    SC_METHOD(thread_y_phi_fu_204_p4);
    sensitive << ( y_reg_200 );
    sensitive << ( exitcond_flatten_reg_418 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( y_1_fu_306_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_231_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "yuv_scale_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_width_read, "(port)in_width_read");
    sc_trace(mVcdFile, in_height_read, "(port)in_height_read");
    sc_trace(mVcdFile, out_channels_ch1_address0, "(port)out_channels_ch1_address0");
    sc_trace(mVcdFile, out_channels_ch1_ce0, "(port)out_channels_ch1_ce0");
    sc_trace(mVcdFile, out_channels_ch1_we0, "(port)out_channels_ch1_we0");
    sc_trace(mVcdFile, out_channels_ch1_d0, "(port)out_channels_ch1_d0");
    sc_trace(mVcdFile, out_channels_ch2_address0, "(port)out_channels_ch2_address0");
    sc_trace(mVcdFile, out_channels_ch2_ce0, "(port)out_channels_ch2_ce0");
    sc_trace(mVcdFile, out_channels_ch2_we0, "(port)out_channels_ch2_we0");
    sc_trace(mVcdFile, out_channels_ch2_d0, "(port)out_channels_ch2_d0");
    sc_trace(mVcdFile, out_channels_ch3_address0, "(port)out_channels_ch3_address0");
    sc_trace(mVcdFile, out_channels_ch3_ce0, "(port)out_channels_ch3_ce0");
    sc_trace(mVcdFile, out_channels_ch3_we0, "(port)out_channels_ch3_we0");
    sc_trace(mVcdFile, out_channels_ch3_d0, "(port)out_channels_ch3_d0");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_178, "indvar_flatten_reg_178");
    sc_trace(mVcdFile, x_reg_189, "x_reg_189");
    sc_trace(mVcdFile, y_reg_200, "y_reg_200");
    sc_trace(mVcdFile, tmp_cast_fu_211_p1, "tmp_cast_fu_211_p1");
    sc_trace(mVcdFile, tmp_cast_reg_398, "tmp_cast_reg_398");
    sc_trace(mVcdFile, tmp_1_cast_fu_215_p1, "tmp_1_cast_fu_215_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_403, "tmp_1_cast_reg_403");
    sc_trace(mVcdFile, tmp_2_cast_fu_219_p1, "tmp_2_cast_fu_219_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_408, "tmp_2_cast_reg_408");
    sc_trace(mVcdFile, bound_fu_381_p2, "bound_fu_381_p2");
    sc_trace(mVcdFile, bound_reg_413, "bound_reg_413");
    sc_trace(mVcdFile, exitcond_flatten_fu_231_p2, "exitcond_flatten_fu_231_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_418, "exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_418, "ap_reg_pp0_iter1_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_418, "ap_reg_pp0_iter2_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_418, "ap_reg_pp0_iter3_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_flatten_reg_418, "ap_reg_pp0_iter4_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_flatten_reg_418, "ap_reg_pp0_iter5_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_flatten_reg_418, "ap_reg_pp0_iter6_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_flatten_reg_418, "ap_reg_pp0_iter7_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_flatten_reg_418, "ap_reg_pp0_iter8_exitcond_flatten_reg_418");
    sc_trace(mVcdFile, indvar_flatten_next_fu_236_p2, "indvar_flatten_next_fu_236_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, y_mid2_fu_253_p3, "y_mid2_fu_253_p3");
    sc_trace(mVcdFile, y_mid2_reg_427, "y_mid2_reg_427");
    sc_trace(mVcdFile, tmp_3_mid2_v_fu_261_p3, "tmp_3_mid2_v_fu_261_p3");
    sc_trace(mVcdFile, tmp_3_mid2_v_reg_433, "tmp_3_mid2_v_reg_433");
    sc_trace(mVcdFile, tmp_fu_269_p1, "tmp_fu_269_p1");
    sc_trace(mVcdFile, tmp_reg_438, "tmp_reg_438");
    sc_trace(mVcdFile, tmp_1_fu_273_p1, "tmp_1_fu_273_p1");
    sc_trace(mVcdFile, tmp_1_reg_443, "tmp_1_reg_443");
    sc_trace(mVcdFile, tmp_5_fu_300_p2, "tmp_5_fu_300_p2");
    sc_trace(mVcdFile, tmp_5_reg_448, "tmp_5_reg_448");
    sc_trace(mVcdFile, y_1_fu_306_p2, "y_1_fu_306_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_10_cast_fu_311_p1, "tmp_10_cast_fu_311_p1");
    sc_trace(mVcdFile, tmp_10_cast_reg_458, "tmp_10_cast_reg_458");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp_10_cast_reg_458, "ap_reg_pp0_iter3_tmp_10_cast_reg_458");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_tmp_10_cast_reg_458, "ap_reg_pp0_iter4_tmp_10_cast_reg_458");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_tmp_10_cast_reg_458, "ap_reg_pp0_iter5_tmp_10_cast_reg_458");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_tmp_10_cast_reg_458, "ap_reg_pp0_iter6_tmp_10_cast_reg_458");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_tmp_10_cast_reg_458, "ap_reg_pp0_iter7_tmp_10_cast_reg_458");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_tmp_10_cast_reg_458, "ap_reg_pp0_iter8_tmp_10_cast_reg_458");
    sc_trace(mVcdFile, Y_reg_480, "Y_reg_480");
    sc_trace(mVcdFile, U_reg_485, "U_reg_485");
    sc_trace(mVcdFile, V_reg_490, "V_reg_490");
    sc_trace(mVcdFile, tmp_4_reg_510, "tmp_4_reg_510");
    sc_trace(mVcdFile, tmp_6_reg_515, "tmp_6_reg_515");
    sc_trace(mVcdFile, tmp_9_reg_520, "tmp_9_reg_520");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, x_phi_fu_193_p4, "x_phi_fu_193_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, y_phi_fu_204_p4, "y_phi_fu_204_p4");
    sc_trace(mVcdFile, exitcond3_fu_248_p2, "exitcond3_fu_248_p2");
    sc_trace(mVcdFile, x_1_fu_242_p2, "x_1_fu_242_p2");
    sc_trace(mVcdFile, p_shl_cast_fu_277_p3, "p_shl_cast_fu_277_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_284_p3, "p_shl1_cast_fu_284_p3");
    sc_trace(mVcdFile, tmp_5_cast_fu_297_p1, "tmp_5_cast_fu_297_p1");
    sc_trace(mVcdFile, tmp_3_fu_291_p2, "tmp_3_fu_291_p2");
    sc_trace(mVcdFile, grp_fu_320_p0, "grp_fu_320_p0");
    sc_trace(mVcdFile, grp_fu_320_p1, "grp_fu_320_p1");
    sc_trace(mVcdFile, grp_fu_328_p0, "grp_fu_328_p0");
    sc_trace(mVcdFile, grp_fu_328_p1, "grp_fu_328_p1");
    sc_trace(mVcdFile, grp_fu_336_p0, "grp_fu_336_p0");
    sc_trace(mVcdFile, grp_fu_336_p1, "grp_fu_336_p1");
    sc_trace(mVcdFile, grp_fu_320_p2, "grp_fu_320_p2");
    sc_trace(mVcdFile, grp_fu_328_p2, "grp_fu_328_p2");
    sc_trace(mVcdFile, grp_fu_336_p2, "grp_fu_336_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, bound_fu_381_p0, "bound_fu_381_p0");
    sc_trace(mVcdFile, bound_fu_381_p1, "bound_fu_381_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_381_p00, "bound_fu_381_p00");
    sc_trace(mVcdFile, bound_fu_381_p10, "bound_fu_381_p10");
    sc_trace(mVcdFile, grp_fu_320_p00, "grp_fu_320_p00");
    sc_trace(mVcdFile, grp_fu_328_p00, "grp_fu_328_p00");
    sc_trace(mVcdFile, grp_fu_336_p00, "grp_fu_336_p00");
#endif

    }
}

yuv_scale::~yuv_scale() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete yuv_filter_mul_8nhbi_U15;
    delete yuv_filter_mul_8nhbi_U16;
    delete yuv_filter_mul_8nhbi_U17;
    delete yuv_filter_mul_mudEe_x_U18;
}

void yuv_scale::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void yuv_scale::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter10 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_231_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_178 = indvar_flatten_next_fu_236_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_178 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_418.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_reg_189 = tmp_3_mid2_v_reg_433.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_reg_189 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_418.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_reg_200 = y_1_fu_306_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_reg_200 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter4_exitcond_flatten_reg_418.read(), ap_const_lv1_0))) {
        U_reg_485 = in_channels_ch2_q0.read();
        V_reg_490 = in_channels_ch3_q0.read();
        Y_reg_480 = in_channels_ch1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_418 = exitcond_flatten_reg_418.read();
        exitcond_flatten_reg_418 = exitcond_flatten_fu_231_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_418 = ap_reg_pp0_iter1_exitcond_flatten_reg_418.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_418 = ap_reg_pp0_iter2_exitcond_flatten_reg_418.read();
        ap_reg_pp0_iter3_tmp_10_cast_reg_458 = tmp_10_cast_reg_458.read();
        ap_reg_pp0_iter4_exitcond_flatten_reg_418 = ap_reg_pp0_iter3_exitcond_flatten_reg_418.read();
        ap_reg_pp0_iter4_tmp_10_cast_reg_458 = ap_reg_pp0_iter3_tmp_10_cast_reg_458.read();
        ap_reg_pp0_iter5_exitcond_flatten_reg_418 = ap_reg_pp0_iter4_exitcond_flatten_reg_418.read();
        ap_reg_pp0_iter5_tmp_10_cast_reg_458 = ap_reg_pp0_iter4_tmp_10_cast_reg_458.read();
        ap_reg_pp0_iter6_exitcond_flatten_reg_418 = ap_reg_pp0_iter5_exitcond_flatten_reg_418.read();
        ap_reg_pp0_iter6_tmp_10_cast_reg_458 = ap_reg_pp0_iter5_tmp_10_cast_reg_458.read();
        ap_reg_pp0_iter7_exitcond_flatten_reg_418 = ap_reg_pp0_iter6_exitcond_flatten_reg_418.read();
        ap_reg_pp0_iter7_tmp_10_cast_reg_458 = ap_reg_pp0_iter6_tmp_10_cast_reg_458.read();
        ap_reg_pp0_iter8_exitcond_flatten_reg_418 = ap_reg_pp0_iter7_exitcond_flatten_reg_418.read();
        ap_reg_pp0_iter8_tmp_10_cast_reg_458 = ap_reg_pp0_iter7_tmp_10_cast_reg_458.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound_reg_413 = bound_fu_381_p2.read();
        tmp_1_cast_reg_403 = tmp_1_cast_fu_215_p1.read();
        tmp_2_cast_reg_408 = tmp_2_cast_fu_219_p1.read();
        tmp_cast_reg_398 = tmp_cast_fu_211_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_418.read(), ap_const_lv1_0))) {
        tmp_10_cast_reg_458 = tmp_10_cast_fu_311_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_231_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_443 = tmp_1_fu_273_p1.read();
        tmp_reg_438 = tmp_fu_269_p1.read();
        y_mid2_reg_427 = y_mid2_fu_253_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_231_p2.read(), ap_const_lv1_0))) {
        tmp_3_mid2_v_reg_433 = tmp_3_mid2_v_fu_261_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_418.read(), ap_const_lv1_0))) {
        tmp_4_reg_510 = grp_fu_320_p2.read().range(14, 7);
        tmp_6_reg_515 = grp_fu_328_p2.read().range(14, 7);
        tmp_9_reg_520 = grp_fu_336_p2.read().range(14, 7);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_418.read(), ap_const_lv1_0))) {
        tmp_5_reg_448 = tmp_5_fu_300_p2.read();
    }
}

void yuv_scale::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void yuv_scale::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void yuv_scale::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[2];
}

void yuv_scale::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void yuv_scale::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_231_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void yuv_scale::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void yuv_scale::thread_ap_return_0() {
    ap_return_0 = in_width_read.read();
}

void yuv_scale::thread_ap_return_1() {
    ap_return_1 = in_height_read.read();
}

void yuv_scale::thread_bound_fu_381_p0() {
    bound_fu_381_p0 =  (sc_lv<16>) (bound_fu_381_p00.read());
}

void yuv_scale::thread_bound_fu_381_p00() {
    bound_fu_381_p00 = esl_zext<32,16>(in_height_read.read());
}

void yuv_scale::thread_bound_fu_381_p1() {
    bound_fu_381_p1 =  (sc_lv<16>) (bound_fu_381_p10.read());
}

void yuv_scale::thread_bound_fu_381_p10() {
    bound_fu_381_p10 = esl_zext<32,16>(in_width_read.read());
}

void yuv_scale::thread_exitcond3_fu_248_p2() {
    exitcond3_fu_248_p2 = (!y_phi_fu_204_p4.read().is_01() || !in_height_read.read().is_01())? sc_lv<1>(): sc_lv<1>(y_phi_fu_204_p4.read() == in_height_read.read());
}

void yuv_scale::thread_exitcond_flatten_fu_231_p2() {
    exitcond_flatten_fu_231_p2 = (!indvar_flatten_reg_178.read().is_01() || !bound_reg_413.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_178.read() == bound_reg_413.read());
}

void yuv_scale::thread_grp_fu_320_p0() {
    grp_fu_320_p0 =  (sc_lv<8>) (grp_fu_320_p00.read());
}

void yuv_scale::thread_grp_fu_320_p00() {
    grp_fu_320_p00 = esl_zext<15,8>(Y_reg_480.read());
}

void yuv_scale::thread_grp_fu_320_p1() {
    grp_fu_320_p1 =  (sc_lv<8>) (tmp_cast_reg_398.read());
}

void yuv_scale::thread_grp_fu_328_p0() {
    grp_fu_328_p0 =  (sc_lv<8>) (grp_fu_328_p00.read());
}

void yuv_scale::thread_grp_fu_328_p00() {
    grp_fu_328_p00 = esl_zext<15,8>(U_reg_485.read());
}

void yuv_scale::thread_grp_fu_328_p1() {
    grp_fu_328_p1 =  (sc_lv<8>) (tmp_1_cast_reg_403.read());
}

void yuv_scale::thread_grp_fu_336_p0() {
    grp_fu_336_p0 =  (sc_lv<8>) (grp_fu_336_p00.read());
}

void yuv_scale::thread_grp_fu_336_p00() {
    grp_fu_336_p00 = esl_zext<15,8>(V_reg_490.read());
}

void yuv_scale::thread_grp_fu_336_p1() {
    grp_fu_336_p1 =  (sc_lv<8>) (tmp_2_cast_reg_408.read());
}

void yuv_scale::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 =  (sc_lv<22>) (tmp_10_cast_fu_311_p1.read());
}

void yuv_scale::thread_in_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 =  (sc_lv<22>) (tmp_10_cast_fu_311_p1.read());
}

void yuv_scale::thread_in_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 =  (sc_lv<22>) (tmp_10_cast_fu_311_p1.read());
}

void yuv_scale::thread_in_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_indvar_flatten_next_fu_236_p2() {
    indvar_flatten_next_fu_236_p2 = (!indvar_flatten_reg_178.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(indvar_flatten_reg_178.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void yuv_scale::thread_out_channels_ch1_address0() {
    out_channels_ch1_address0 =  (sc_lv<22>) (ap_reg_pp0_iter8_tmp_10_cast_reg_458.read());
}

void yuv_scale::thread_out_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        out_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch1_d0() {
    out_channels_ch1_d0 = tmp_4_reg_510.read();
}

void yuv_scale::thread_out_channels_ch1_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter8_exitcond_flatten_reg_418.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        out_channels_ch1_we0 = ap_const_logic_1;
    } else {
        out_channels_ch1_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch2_address0() {
    out_channels_ch2_address0 =  (sc_lv<22>) (ap_reg_pp0_iter8_tmp_10_cast_reg_458.read());
}

void yuv_scale::thread_out_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        out_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch2_d0() {
    out_channels_ch2_d0 = tmp_6_reg_515.read();
}

void yuv_scale::thread_out_channels_ch2_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter8_exitcond_flatten_reg_418.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        out_channels_ch2_we0 = ap_const_logic_1;
    } else {
        out_channels_ch2_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch3_address0() {
    out_channels_ch3_address0 =  (sc_lv<22>) (ap_reg_pp0_iter8_tmp_10_cast_reg_458.read());
}

void yuv_scale::thread_out_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read())))) {
        out_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_out_channels_ch3_d0() {
    out_channels_ch3_d0 = tmp_9_reg_520.read();
}

void yuv_scale::thread_out_channels_ch3_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter8_exitcond_flatten_reg_418.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        out_channels_ch3_we0 = ap_const_logic_1;
    } else {
        out_channels_ch3_we0 = ap_const_logic_0;
    }
}

void yuv_scale::thread_p_shl1_cast_fu_284_p3() {
    p_shl1_cast_fu_284_p3 = esl_concat<15,8>(tmp_1_reg_443.read(), ap_const_lv8_0);
}

void yuv_scale::thread_p_shl_cast_fu_277_p3() {
    p_shl_cast_fu_277_p3 = esl_concat<13,10>(tmp_reg_438.read(), ap_const_lv10_0);
}

void yuv_scale::thread_tmp_10_cast_fu_311_p1() {
    tmp_10_cast_fu_311_p1 = esl_zext<64,23>(tmp_5_reg_448.read());
}

void yuv_scale::thread_tmp_1_cast_fu_215_p1() {
    tmp_1_cast_fu_215_p1 = esl_zext<15,8>(U_scale.read());
}

void yuv_scale::thread_tmp_1_fu_273_p1() {
    tmp_1_fu_273_p1 = tmp_3_mid2_v_fu_261_p3.read().range(15-1, 0);
}

void yuv_scale::thread_tmp_2_cast_fu_219_p1() {
    tmp_2_cast_fu_219_p1 = esl_zext<15,8>(V_scale.read());
}

void yuv_scale::thread_tmp_3_fu_291_p2() {
    tmp_3_fu_291_p2 = (!p_shl_cast_fu_277_p3.read().is_01() || !p_shl1_cast_fu_284_p3.read().is_01())? sc_lv<23>(): (sc_biguint<23>(p_shl_cast_fu_277_p3.read()) + sc_biguint<23>(p_shl1_cast_fu_284_p3.read()));
}

void yuv_scale::thread_tmp_3_mid2_v_fu_261_p3() {
    tmp_3_mid2_v_fu_261_p3 = (!exitcond3_fu_248_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond3_fu_248_p2.read()[0].to_bool())? x_1_fu_242_p2.read(): x_phi_fu_193_p4.read());
}

void yuv_scale::thread_tmp_5_cast_fu_297_p1() {
    tmp_5_cast_fu_297_p1 = esl_zext<23,16>(y_mid2_reg_427.read());
}

void yuv_scale::thread_tmp_5_fu_300_p2() {
    tmp_5_fu_300_p2 = (!tmp_5_cast_fu_297_p1.read().is_01() || !tmp_3_fu_291_p2.read().is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_5_cast_fu_297_p1.read()) + sc_biguint<23>(tmp_3_fu_291_p2.read()));
}

void yuv_scale::thread_tmp_cast_fu_211_p1() {
    tmp_cast_fu_211_p1 = esl_zext<15,8>(Y_scale.read());
}

void yuv_scale::thread_tmp_fu_269_p1() {
    tmp_fu_269_p1 = tmp_3_mid2_v_fu_261_p3.read().range(13-1, 0);
}

void yuv_scale::thread_x_1_fu_242_p2() {
    x_1_fu_242_p2 = (!ap_const_lv16_1.is_01() || !x_phi_fu_193_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(x_phi_fu_193_p4.read()));
}

void yuv_scale::thread_x_phi_fu_193_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_418.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        x_phi_fu_193_p4 = tmp_3_mid2_v_reg_433.read();
    } else {
        x_phi_fu_193_p4 = x_reg_189.read();
    }
}

void yuv_scale::thread_y_1_fu_306_p2() {
    y_1_fu_306_p2 = (!ap_const_lv16_1.is_01() || !y_mid2_reg_427.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(y_mid2_reg_427.read()));
}

void yuv_scale::thread_y_mid2_fu_253_p3() {
    y_mid2_fu_253_p3 = (!exitcond3_fu_248_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond3_fu_248_p2.read()[0].to_bool())? ap_const_lv16_0: y_phi_fu_204_p4.read());
}

void yuv_scale::thread_y_phi_fu_204_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_418.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        y_phi_fu_204_p4 = y_1_fu_306_p2.read();
    } else {
        y_phi_fu_204_p4 = y_reg_200.read();
    }
}

void yuv_scale::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter9.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_231_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter9.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_231_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

