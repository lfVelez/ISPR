// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "rgb2yuv11.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rgb2yuv11::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rgb2yuv11::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> rgb2yuv11::ap_ST_fsm_state1 = "1";
const sc_lv<3> rgb2yuv11::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> rgb2yuv11::ap_ST_fsm_state11 = "100";
const bool rgb2yuv11::ap_const_boolean_1 = true;
const sc_lv<32> rgb2yuv11::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool rgb2yuv11::ap_const_boolean_0 = false;
const sc_lv<1> rgb2yuv11::ap_const_lv1_0 = "0";
const sc_lv<32> rgb2yuv11::ap_const_lv32_1 = "1";
const sc_lv<1> rgb2yuv11::ap_const_lv1_1 = "1";
const sc_lv<16> rgb2yuv11::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> rgb2yuv11::ap_const_lv16_1 = "1";
const sc_lv<10> rgb2yuv11::ap_const_lv10_0 = "0000000000";
const sc_lv<8> rgb2yuv11::ap_const_lv8_0 = "00000000";
const sc_lv<10> rgb2yuv11::ap_const_lv10_80 = "10000000";
const sc_lv<6> rgb2yuv11::ap_const_lv6_0 = "000000";
const sc_lv<7> rgb2yuv11::ap_const_lv7_0 = "0000000";
const sc_lv<32> rgb2yuv11::ap_const_lv32_8 = "1000";
const sc_lv<32> rgb2yuv11::ap_const_lv32_F = "1111";
const sc_lv<4> rgb2yuv11::ap_const_lv4_0 = "0000";
const sc_lv<13> rgb2yuv11::ap_const_lv13_0 = "0000000000000";
const sc_lv<8> rgb2yuv11::ap_const_lv8_10 = "10000";
const sc_lv<8> rgb2yuv11::ap_const_lv8_80 = "10000000";
const sc_lv<13> rgb2yuv11::ap_const_lv13_19 = "11001";
const sc_lv<15> rgb2yuv11::ap_const_lv15_7FDA = "111111111011010";
const sc_lv<15> rgb2yuv11::ap_const_lv15_80 = "10000000";
const sc_lv<15> rgb2yuv11::ap_const_lv15_7A = "1111010";
const sc_lv<16> rgb2yuv11::ap_const_lv16_FFB6 = "1111111110110110";
const sc_lv<16> rgb2yuv11::ap_const_lv16_FFA2 = "1111111110100010";
const sc_lv<32> rgb2yuv11::ap_const_lv32_2 = "10";

rgb2yuv11::rgb2yuv11(sc_module_name name) : sc_module(name), mVcdFile(0) {
    yuv_filter_mul_mubkb_U1 = new yuv_filter_mul_mubkb<1,1,16,16,32>("yuv_filter_mul_mubkb_U1");
    yuv_filter_mul_mubkb_U1->din0(bound_fu_594_p0);
    yuv_filter_mul_mubkb_U1->din1(bound_fu_594_p1);
    yuv_filter_mul_mubkb_U1->dout(bound_fu_594_p2);
    yuv_filter_mac_mucud_U2 = new yuv_filter_mac_mucud<1,1,6,8,8,13>("yuv_filter_mac_mucud_U2");
    yuv_filter_mac_mucud_U2->din0(grp_fu_600_p0);
    yuv_filter_mac_mucud_U2->din1(grp_fu_600_p1);
    yuv_filter_mac_mucud_U2->din2(grp_fu_600_p2);
    yuv_filter_mac_mucud_U2->dout(grp_fu_600_p3);
    yuv_filter_mac_mudEe_U3 = new yuv_filter_mac_mudEe<1,1,7,8,9,15>("yuv_filter_mac_mudEe_U3");
    yuv_filter_mac_mudEe_U3->din0(grp_fu_609_p0);
    yuv_filter_mac_mudEe_U3->din1(grp_fu_609_p1);
    yuv_filter_mac_mudEe_U3->din2(grp_fu_609_p2);
    yuv_filter_mac_mudEe_U3->dout(grp_fu_609_p3);
    yuv_filter_mac_mueOg_U4 = new yuv_filter_mac_mueOg<1,1,8,8,9,15>("yuv_filter_mac_mueOg_U4");
    yuv_filter_mac_mueOg_U4->din0(grp_fu_618_p0);
    yuv_filter_mac_mueOg_U4->din1(grp_fu_618_p1);
    yuv_filter_mac_mueOg_U4->din2(grp_fu_618_p2);
    yuv_filter_mac_mueOg_U4->dout(grp_fu_618_p3);
    yuv_filter_mac_mufYi_U5 = new yuv_filter_mac_mufYi<1,1,8,8,16,16>("yuv_filter_mac_mufYi_U5");
    yuv_filter_mac_mufYi_U5->din0(grp_fu_626_p0);
    yuv_filter_mac_mufYi_U5->din1(grp_fu_626_p1);
    yuv_filter_mac_mufYi_U5->din2(tmp3_reg_739);
    yuv_filter_mac_mufYi_U5->dout(grp_fu_626_p3);
    yuv_filter_mac_mufYi_U6 = new yuv_filter_mac_mufYi<1,1,8,8,16,16>("yuv_filter_mac_mufYi_U6");
    yuv_filter_mac_mufYi_U6->din0(grp_fu_634_p0);
    yuv_filter_mac_mufYi_U6->din1(grp_fu_634_p1);
    yuv_filter_mac_mufYi_U6->din2(grp_fu_634_p2);
    yuv_filter_mac_mufYi_U6->dout(grp_fu_634_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_U_scale_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( U_scale_out_full_n );

    SC_METHOD(thread_U_scale_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( U_scale );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_U_scale_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_V_scale_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_V_scale_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( V_scale );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_V_scale_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_Y_scale_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( Y_scale_out_full_n );

    SC_METHOD(thread_Y_scale_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_Y_scale_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_302_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_594_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_594_p00 );

    SC_METHOD(thread_bound_fu_594_p00);
    sensitive << ( in_height );

    SC_METHOD(thread_bound_fu_594_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_594_p10 );

    SC_METHOD(thread_bound_fu_594_p10);
    sensitive << ( in_width );

    SC_METHOD(thread_exitcond_flatten_fu_302_p2);
    sensitive << ( indvar_flatten_reg_261 );
    sensitive << ( bound_reg_648 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i_i_fu_319_p2);
    sensitive << ( in_height );
    sensitive << ( exitcond_flatten_fu_302_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( y_i_i_phi_fu_287_p4 );

    SC_METHOD(thread_grp_fu_600_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_grp_fu_600_p1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( grp_fu_600_p10 );

    SC_METHOD(thread_grp_fu_600_p10);
    sensitive << ( B_reg_721 );

    SC_METHOD(thread_grp_fu_600_p2);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( grp_fu_600_p20 );

    SC_METHOD(thread_grp_fu_600_p20);
    sensitive << ( G_reg_714 );

    SC_METHOD(thread_grp_fu_609_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_grp_fu_609_p1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_40_cast14_i_i_fu_406_p1 );

    SC_METHOD(thread_grp_fu_609_p2);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_grp_fu_618_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_grp_fu_618_p1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( tmp_40_cast14_i_i_fu_406_p1 );

    SC_METHOD(thread_grp_fu_618_p2);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter5_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_grp_fu_626_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_grp_fu_626_p1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( tmp_42_cast11_i_i_fu_543_p1 );

    SC_METHOD(thread_grp_fu_634_p0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_grp_fu_634_p1);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( tmp_42_cast11_i_i_fu_543_p1 );

    SC_METHOD(thread_grp_fu_634_p2);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter6_exitcond_flatten_reg_653 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( tmp_62_cast_i_i_fu_558_p1 );
    sensitive << ( tmp_61_cast_i_i_fu_555_p1 );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_26_cast_fu_382_p1 );

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_26_cast_fu_382_p1 );

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_26_cast_fu_382_p1 );

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_indvar_flatten_next_fu_307_p2);
    sensitive << ( indvar_flatten_reg_261 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_out_channels_ch1_blk_n);
    sensitive << ( out_channels_ch1_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );

    SC_METHOD(thread_out_channels_ch1_din);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );
    sensitive << ( ap_reg_pp0_iter7_tmp_50_i_i_reg_734 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_out_channels_ch1_write);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_out_channels_ch2_blk_n);
    sensitive << ( out_channels_ch2_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );

    SC_METHOD(thread_out_channels_ch2_din);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );
    sensitive << ( tmp_58_i_i_reg_754 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_out_channels_ch2_write);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_out_channels_ch3_blk_n);
    sensitive << ( out_channels_ch3_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );

    SC_METHOD(thread_out_channels_ch3_din);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );
    sensitive << ( tmp_66_i_i_reg_759 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_out_channels_ch3_write);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_reg_pp0_iter7_exitcond_flatten_reg_653 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_out_height_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_height_full_n );

    SC_METHOD(thread_out_height_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_height );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_out_height_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_out_width_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );

    SC_METHOD(thread_out_width_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_width );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_out_width_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );

    SC_METHOD(thread_p_neg_cast_i_i_fu_522_p1);
    sensitive << ( p_neg_i_i_fu_516_p2 );

    SC_METHOD(thread_p_neg_i_i_fu_516_p2);
    sensitive << ( p_shl3_cast7_i_i_fu_493_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_355_p3);
    sensitive << ( tmp_23_reg_678 );

    SC_METHOD(thread_p_shl1_cast_i_i_fu_533_p1);
    sensitive << ( p_shl1_i_i_fu_526_p3 );

    SC_METHOD(thread_p_shl1_i_i_fu_526_p3);
    sensitive << ( B_reg_721 );

    SC_METHOD(thread_p_shl2_cast_i_i_fu_482_p1);
    sensitive << ( p_shl2_i_i_fu_475_p3 );

    SC_METHOD(thread_p_shl2_i_i_fu_475_p3);
    sensitive << ( B_reg_721 );

    SC_METHOD(thread_p_shl3_cast7_i_i_fu_493_p1);
    sensitive << ( p_shl3_i_i_fu_486_p3 );

    SC_METHOD(thread_p_shl3_cast_i_i_fu_497_p1);
    sensitive << ( p_shl3_i_i_fu_486_p3 );

    SC_METHOD(thread_p_shl3_i_i_fu_486_p3);
    sensitive << ( B_reg_721 );

    SC_METHOD(thread_p_shl4_cast_i_i_fu_430_p1);
    sensitive << ( p_shl4_i_i_fu_423_p3 );

    SC_METHOD(thread_p_shl4_i_i_fu_423_p3);
    sensitive << ( G_reg_714 );

    SC_METHOD(thread_p_shl5_cast_i_i_fu_416_p1);
    sensitive << ( p_shl5_i_i_fu_409_p3 );

    SC_METHOD(thread_p_shl5_i_i_fu_409_p3);
    sensitive << ( R_reg_708 );

    SC_METHOD(thread_p_shl6_cast_i_i_cast_fu_396_p1);
    sensitive << ( p_shl6_i_i_fu_388_p3 );

    SC_METHOD(thread_p_shl6_i_i_fu_388_p3);
    sensitive << ( in_channels_ch1_q0 );

    SC_METHOD(thread_p_shl_cast_fu_348_p3);
    sensitive << ( tmp_22_reg_673 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( real_start_status_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( ap_start );
    sensitive << ( start_control_reg );

    SC_METHOD(thread_tmp1_fu_450_p2);
    sensitive << ( p_shl4_cast_i_i_fu_430_p1 );
    sensitive << ( tmp_46_cast_i_i_fu_446_p1 );

    SC_METHOD(thread_tmp2_cast_fu_456_p1);
    sensitive << ( grp_fu_600_p3 );

    SC_METHOD(thread_tmp3_fu_510_p2);
    sensitive << ( tmp_53_i_i_fu_501_p2 );
    sensitive << ( tmp_54_cast_i_i_fu_507_p1 );

    SC_METHOD(thread_tmp_22_fu_340_p1);
    sensitive << ( tmp_i_i_mid2_v_fu_332_p3 );

    SC_METHOD(thread_tmp_23_fu_344_p1);
    sensitive << ( tmp_i_i_mid2_v_fu_332_p3 );

    SC_METHOD(thread_tmp_24_fu_371_p2);
    sensitive << ( tmp_i_i_cast_fu_368_p1 );
    sensitive << ( tmp_s_fu_362_p2 );

    SC_METHOD(thread_tmp_26_cast_fu_382_p1);
    sensitive << ( tmp_24_reg_683 );

    SC_METHOD(thread_tmp_40_cast14_i_i_fu_406_p1);
    sensitive << ( R_reg_708 );

    SC_METHOD(thread_tmp_42_cast11_i_i_fu_543_p1);
    sensitive << ( ap_reg_pp0_iter6_G_reg_714 );

    SC_METHOD(thread_tmp_46_cast_i_i_fu_446_p1);
    sensitive << ( tmp_46_i_i_fu_440_p2 );

    SC_METHOD(thread_tmp_46_i_i_fu_440_p2);
    sensitive << ( tmp_cast_fu_437_p1 );
    sensitive << ( p_shl5_cast_i_i_fu_416_p1 );

    SC_METHOD(thread_tmp_48_i_i_fu_459_p2);
    sensitive << ( tmp2_cast_fu_456_p1 );
    sensitive << ( tmp1_fu_450_p2 );

    SC_METHOD(thread_tmp_53_i_i_fu_501_p2);
    sensitive << ( p_shl2_cast_i_i_fu_482_p1 );
    sensitive << ( p_shl3_cast_i_i_fu_497_p1 );

    SC_METHOD(thread_tmp_54_cast_i_i_fu_507_p1);
    sensitive << ( grp_fu_609_p3 );

    SC_METHOD(thread_tmp_61_cast_i_i_fu_555_p1);
    sensitive << ( tmp_61_i_i_reg_744 );

    SC_METHOD(thread_tmp_61_i_i_fu_537_p2);
    sensitive << ( p_neg_cast_i_i_fu_522_p1 );
    sensitive << ( p_shl1_cast_i_i_fu_533_p1 );

    SC_METHOD(thread_tmp_62_cast_i_i_fu_558_p1);
    sensitive << ( tmp_62_i_i_reg_749 );

    SC_METHOD(thread_tmp_cast_fu_437_p1);
    sensitive << ( tmp_reg_729 );

    SC_METHOD(thread_tmp_fu_400_p2);
    sensitive << ( p_shl6_cast_i_i_cast_fu_396_p1 );

    SC_METHOD(thread_tmp_i_i_cast_fu_368_p1);
    sensitive << ( y_i_i_mid2_reg_662 );

    SC_METHOD(thread_tmp_i_i_mid2_v_fu_332_p3);
    sensitive << ( x_i_i_phi_fu_276_p4 );
    sensitive << ( exitcond_i_i_fu_319_p2 );
    sensitive << ( x_fu_313_p2 );

    SC_METHOD(thread_tmp_s_fu_362_p2);
    sensitive << ( p_shl_cast_fu_348_p3 );
    sensitive << ( p_shl1_cast_fu_355_p3 );

    SC_METHOD(thread_x_fu_313_p2);
    sensitive << ( x_i_i_phi_fu_276_p4 );

    SC_METHOD(thread_x_i_i_phi_fu_276_p4);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( x_i_i_reg_272 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_i_i_mid2_v_reg_668 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_y_fu_377_p2);
    sensitive << ( y_i_i_mid2_reg_662 );

    SC_METHOD(thread_y_i_i_mid2_fu_324_p3);
    sensitive << ( y_i_i_phi_fu_287_p4 );
    sensitive << ( exitcond_i_i_fu_319_p2 );

    SC_METHOD(thread_y_i_i_phi_fu_287_p4);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_653 );
    sensitive << ( y_i_i_reg_283 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( y_fu_377_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_width_full_n );
    sensitive << ( out_height_full_n );
    sensitive << ( Y_scale_out_full_n );
    sensitive << ( U_scale_out_full_n );
    sensitive << ( V_scale_out_full_n );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( exitcond_flatten_fu_302_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    real_start_status_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    start_once_reg = SC_LOGIC_0;
    start_control_reg = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rgb2yuv11_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_width, "(port)in_width");
    sc_trace(mVcdFile, in_height, "(port)in_height");
    sc_trace(mVcdFile, out_channels_ch1_din, "(port)out_channels_ch1_din");
    sc_trace(mVcdFile, out_channels_ch1_full_n, "(port)out_channels_ch1_full_n");
    sc_trace(mVcdFile, out_channels_ch1_write, "(port)out_channels_ch1_write");
    sc_trace(mVcdFile, out_channels_ch2_din, "(port)out_channels_ch2_din");
    sc_trace(mVcdFile, out_channels_ch2_full_n, "(port)out_channels_ch2_full_n");
    sc_trace(mVcdFile, out_channels_ch2_write, "(port)out_channels_ch2_write");
    sc_trace(mVcdFile, out_channels_ch3_din, "(port)out_channels_ch3_din");
    sc_trace(mVcdFile, out_channels_ch3_full_n, "(port)out_channels_ch3_full_n");
    sc_trace(mVcdFile, out_channels_ch3_write, "(port)out_channels_ch3_write");
    sc_trace(mVcdFile, out_width_din, "(port)out_width_din");
    sc_trace(mVcdFile, out_width_full_n, "(port)out_width_full_n");
    sc_trace(mVcdFile, out_width_write, "(port)out_width_write");
    sc_trace(mVcdFile, out_height_din, "(port)out_height_din");
    sc_trace(mVcdFile, out_height_full_n, "(port)out_height_full_n");
    sc_trace(mVcdFile, out_height_write, "(port)out_height_write");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
    sc_trace(mVcdFile, Y_scale_out_din, "(port)Y_scale_out_din");
    sc_trace(mVcdFile, Y_scale_out_full_n, "(port)Y_scale_out_full_n");
    sc_trace(mVcdFile, Y_scale_out_write, "(port)Y_scale_out_write");
    sc_trace(mVcdFile, U_scale_out_din, "(port)U_scale_out_din");
    sc_trace(mVcdFile, U_scale_out_full_n, "(port)U_scale_out_full_n");
    sc_trace(mVcdFile, U_scale_out_write, "(port)U_scale_out_write");
    sc_trace(mVcdFile, V_scale_out_din, "(port)V_scale_out_din");
    sc_trace(mVcdFile, V_scale_out_full_n, "(port)V_scale_out_full_n");
    sc_trace(mVcdFile, V_scale_out_write, "(port)V_scale_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, real_start_status_reg, "real_start_status_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, start_control_reg, "start_control_reg");
    sc_trace(mVcdFile, out_channels_ch1_blk_n, "out_channels_ch1_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_653, "exitcond_flatten_reg_653");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_flatten_reg_653, "ap_reg_pp0_iter7_exitcond_flatten_reg_653");
    sc_trace(mVcdFile, out_channels_ch2_blk_n, "out_channels_ch2_blk_n");
    sc_trace(mVcdFile, out_channels_ch3_blk_n, "out_channels_ch3_blk_n");
    sc_trace(mVcdFile, out_width_blk_n, "out_width_blk_n");
    sc_trace(mVcdFile, out_height_blk_n, "out_height_blk_n");
    sc_trace(mVcdFile, Y_scale_out_blk_n, "Y_scale_out_blk_n");
    sc_trace(mVcdFile, U_scale_out_blk_n, "U_scale_out_blk_n");
    sc_trace(mVcdFile, V_scale_out_blk_n, "V_scale_out_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_261, "indvar_flatten_reg_261");
    sc_trace(mVcdFile, x_i_i_reg_272, "x_i_i_reg_272");
    sc_trace(mVcdFile, y_i_i_reg_283, "y_i_i_reg_283");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, bound_fu_594_p2, "bound_fu_594_p2");
    sc_trace(mVcdFile, bound_reg_648, "bound_reg_648");
    sc_trace(mVcdFile, exitcond_flatten_fu_302_p2, "exitcond_flatten_fu_302_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_653, "ap_reg_pp0_iter1_exitcond_flatten_reg_653");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_653, "ap_reg_pp0_iter2_exitcond_flatten_reg_653");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_653, "ap_reg_pp0_iter3_exitcond_flatten_reg_653");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_flatten_reg_653, "ap_reg_pp0_iter4_exitcond_flatten_reg_653");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_flatten_reg_653, "ap_reg_pp0_iter5_exitcond_flatten_reg_653");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_flatten_reg_653, "ap_reg_pp0_iter6_exitcond_flatten_reg_653");
    sc_trace(mVcdFile, indvar_flatten_next_fu_307_p2, "indvar_flatten_next_fu_307_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, y_i_i_mid2_fu_324_p3, "y_i_i_mid2_fu_324_p3");
    sc_trace(mVcdFile, y_i_i_mid2_reg_662, "y_i_i_mid2_reg_662");
    sc_trace(mVcdFile, tmp_i_i_mid2_v_fu_332_p3, "tmp_i_i_mid2_v_fu_332_p3");
    sc_trace(mVcdFile, tmp_i_i_mid2_v_reg_668, "tmp_i_i_mid2_v_reg_668");
    sc_trace(mVcdFile, tmp_22_fu_340_p1, "tmp_22_fu_340_p1");
    sc_trace(mVcdFile, tmp_22_reg_673, "tmp_22_reg_673");
    sc_trace(mVcdFile, tmp_23_fu_344_p1, "tmp_23_fu_344_p1");
    sc_trace(mVcdFile, tmp_23_reg_678, "tmp_23_reg_678");
    sc_trace(mVcdFile, tmp_24_fu_371_p2, "tmp_24_fu_371_p2");
    sc_trace(mVcdFile, tmp_24_reg_683, "tmp_24_reg_683");
    sc_trace(mVcdFile, y_fu_377_p2, "y_fu_377_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, R_reg_708, "R_reg_708");
    sc_trace(mVcdFile, G_reg_714, "G_reg_714");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_G_reg_714, "ap_reg_pp0_iter6_G_reg_714");
    sc_trace(mVcdFile, B_reg_721, "B_reg_721");
    sc_trace(mVcdFile, tmp_fu_400_p2, "tmp_fu_400_p2");
    sc_trace(mVcdFile, tmp_reg_729, "tmp_reg_729");
    sc_trace(mVcdFile, tmp_50_i_i_reg_734, "tmp_50_i_i_reg_734");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_tmp_50_i_i_reg_734, "ap_reg_pp0_iter7_tmp_50_i_i_reg_734");
    sc_trace(mVcdFile, tmp3_fu_510_p2, "tmp3_fu_510_p2");
    sc_trace(mVcdFile, tmp3_reg_739, "tmp3_reg_739");
    sc_trace(mVcdFile, tmp_61_i_i_fu_537_p2, "tmp_61_i_i_fu_537_p2");
    sc_trace(mVcdFile, tmp_61_i_i_reg_744, "tmp_61_i_i_reg_744");
    sc_trace(mVcdFile, grp_fu_618_p3, "grp_fu_618_p3");
    sc_trace(mVcdFile, tmp_62_i_i_reg_749, "tmp_62_i_i_reg_749");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, tmp_58_i_i_reg_754, "tmp_58_i_i_reg_754");
    sc_trace(mVcdFile, tmp_66_i_i_reg_759, "tmp_66_i_i_reg_759");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, x_i_i_phi_fu_276_p4, "x_i_i_phi_fu_276_p4");
    sc_trace(mVcdFile, y_i_i_phi_fu_287_p4, "y_i_i_phi_fu_287_p4");
    sc_trace(mVcdFile, tmp_26_cast_fu_382_p1, "tmp_26_cast_fu_382_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, exitcond_i_i_fu_319_p2, "exitcond_i_i_fu_319_p2");
    sc_trace(mVcdFile, x_fu_313_p2, "x_fu_313_p2");
    sc_trace(mVcdFile, p_shl_cast_fu_348_p3, "p_shl_cast_fu_348_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_355_p3, "p_shl1_cast_fu_355_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_368_p1, "tmp_i_i_cast_fu_368_p1");
    sc_trace(mVcdFile, tmp_s_fu_362_p2, "tmp_s_fu_362_p2");
    sc_trace(mVcdFile, p_shl6_i_i_fu_388_p3, "p_shl6_i_i_fu_388_p3");
    sc_trace(mVcdFile, p_shl6_cast_i_i_cast_fu_396_p1, "p_shl6_cast_i_i_cast_fu_396_p1");
    sc_trace(mVcdFile, p_shl5_i_i_fu_409_p3, "p_shl5_i_i_fu_409_p3");
    sc_trace(mVcdFile, p_shl4_i_i_fu_423_p3, "p_shl4_i_i_fu_423_p3");
    sc_trace(mVcdFile, tmp_cast_fu_437_p1, "tmp_cast_fu_437_p1");
    sc_trace(mVcdFile, p_shl5_cast_i_i_fu_416_p1, "p_shl5_cast_i_i_fu_416_p1");
    sc_trace(mVcdFile, tmp_46_i_i_fu_440_p2, "tmp_46_i_i_fu_440_p2");
    sc_trace(mVcdFile, p_shl4_cast_i_i_fu_430_p1, "p_shl4_cast_i_i_fu_430_p1");
    sc_trace(mVcdFile, tmp_46_cast_i_i_fu_446_p1, "tmp_46_cast_i_i_fu_446_p1");
    sc_trace(mVcdFile, grp_fu_600_p3, "grp_fu_600_p3");
    sc_trace(mVcdFile, tmp2_cast_fu_456_p1, "tmp2_cast_fu_456_p1");
    sc_trace(mVcdFile, tmp1_fu_450_p2, "tmp1_fu_450_p2");
    sc_trace(mVcdFile, tmp_48_i_i_fu_459_p2, "tmp_48_i_i_fu_459_p2");
    sc_trace(mVcdFile, p_shl2_i_i_fu_475_p3, "p_shl2_i_i_fu_475_p3");
    sc_trace(mVcdFile, p_shl3_i_i_fu_486_p3, "p_shl3_i_i_fu_486_p3");
    sc_trace(mVcdFile, p_shl2_cast_i_i_fu_482_p1, "p_shl2_cast_i_i_fu_482_p1");
    sc_trace(mVcdFile, p_shl3_cast_i_i_fu_497_p1, "p_shl3_cast_i_i_fu_497_p1");
    sc_trace(mVcdFile, grp_fu_609_p3, "grp_fu_609_p3");
    sc_trace(mVcdFile, tmp_53_i_i_fu_501_p2, "tmp_53_i_i_fu_501_p2");
    sc_trace(mVcdFile, tmp_54_cast_i_i_fu_507_p1, "tmp_54_cast_i_i_fu_507_p1");
    sc_trace(mVcdFile, p_shl3_cast7_i_i_fu_493_p1, "p_shl3_cast7_i_i_fu_493_p1");
    sc_trace(mVcdFile, p_neg_i_i_fu_516_p2, "p_neg_i_i_fu_516_p2");
    sc_trace(mVcdFile, p_shl1_i_i_fu_526_p3, "p_shl1_i_i_fu_526_p3");
    sc_trace(mVcdFile, p_neg_cast_i_i_fu_522_p1, "p_neg_cast_i_i_fu_522_p1");
    sc_trace(mVcdFile, p_shl1_cast_i_i_fu_533_p1, "p_shl1_cast_i_i_fu_533_p1");
    sc_trace(mVcdFile, grp_fu_626_p3, "grp_fu_626_p3");
    sc_trace(mVcdFile, tmp_62_cast_i_i_fu_558_p1, "tmp_62_cast_i_i_fu_558_p1");
    sc_trace(mVcdFile, tmp_61_cast_i_i_fu_555_p1, "tmp_61_cast_i_i_fu_555_p1");
    sc_trace(mVcdFile, grp_fu_634_p3, "grp_fu_634_p3");
    sc_trace(mVcdFile, bound_fu_594_p0, "bound_fu_594_p0");
    sc_trace(mVcdFile, bound_fu_594_p1, "bound_fu_594_p1");
    sc_trace(mVcdFile, grp_fu_600_p0, "grp_fu_600_p0");
    sc_trace(mVcdFile, grp_fu_600_p1, "grp_fu_600_p1");
    sc_trace(mVcdFile, grp_fu_600_p2, "grp_fu_600_p2");
    sc_trace(mVcdFile, grp_fu_609_p0, "grp_fu_609_p0");
    sc_trace(mVcdFile, grp_fu_609_p1, "grp_fu_609_p1");
    sc_trace(mVcdFile, tmp_40_cast14_i_i_fu_406_p1, "tmp_40_cast14_i_i_fu_406_p1");
    sc_trace(mVcdFile, grp_fu_609_p2, "grp_fu_609_p2");
    sc_trace(mVcdFile, grp_fu_618_p0, "grp_fu_618_p0");
    sc_trace(mVcdFile, grp_fu_618_p1, "grp_fu_618_p1");
    sc_trace(mVcdFile, grp_fu_618_p2, "grp_fu_618_p2");
    sc_trace(mVcdFile, grp_fu_626_p0, "grp_fu_626_p0");
    sc_trace(mVcdFile, grp_fu_626_p1, "grp_fu_626_p1");
    sc_trace(mVcdFile, tmp_42_cast11_i_i_fu_543_p1, "tmp_42_cast11_i_i_fu_543_p1");
    sc_trace(mVcdFile, grp_fu_634_p0, "grp_fu_634_p0");
    sc_trace(mVcdFile, grp_fu_634_p1, "grp_fu_634_p1");
    sc_trace(mVcdFile, grp_fu_634_p2, "grp_fu_634_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_594_p00, "bound_fu_594_p00");
    sc_trace(mVcdFile, bound_fu_594_p10, "bound_fu_594_p10");
    sc_trace(mVcdFile, grp_fu_600_p10, "grp_fu_600_p10");
    sc_trace(mVcdFile, grp_fu_600_p20, "grp_fu_600_p20");
#endif

    }
}

rgb2yuv11::~rgb2yuv11() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete yuv_filter_mul_mubkb_U1;
    delete yuv_filter_mac_mucud_U2;
    delete yuv_filter_mac_mudEe_U3;
    delete yuv_filter_mac_mueOg_U4;
    delete yuv_filter_mac_mufYi_U5;
    delete yuv_filter_mac_mufYi_U6;
}

void rgb2yuv11::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_302_p2.read()))) {
        indvar_flatten_reg_261 = indvar_flatten_next_fu_307_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        indvar_flatten_reg_261 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        real_start_status_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_1)) {
            real_start_status_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()))) {
            real_start_status_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_control_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()) || 
              esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read())))) {
            start_control_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, start_control_reg.read())) {
            start_control_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, real_start.read())) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_i_i_reg_272 = tmp_i_i_mid2_v_reg_668.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        x_i_i_reg_272 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_i_i_reg_283 = y_fu_377_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        y_i_i_reg_283 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter4_exitcond_flatten_reg_653.read()))) {
        B_reg_721 = in_channels_ch3_q0.read();
        G_reg_714 = in_channels_ch2_q0.read();
        R_reg_708 = in_channels_ch1_q0.read();
        tmp_reg_729 = tmp_fu_400_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_653 = exitcond_flatten_reg_653.read();
        exitcond_flatten_reg_653 = exitcond_flatten_fu_302_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_653 = ap_reg_pp0_iter1_exitcond_flatten_reg_653.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_653 = ap_reg_pp0_iter2_exitcond_flatten_reg_653.read();
        ap_reg_pp0_iter4_exitcond_flatten_reg_653 = ap_reg_pp0_iter3_exitcond_flatten_reg_653.read();
        ap_reg_pp0_iter5_exitcond_flatten_reg_653 = ap_reg_pp0_iter4_exitcond_flatten_reg_653.read();
        ap_reg_pp0_iter6_G_reg_714 = G_reg_714.read();
        ap_reg_pp0_iter6_exitcond_flatten_reg_653 = ap_reg_pp0_iter5_exitcond_flatten_reg_653.read();
        ap_reg_pp0_iter7_exitcond_flatten_reg_653 = ap_reg_pp0_iter6_exitcond_flatten_reg_653.read();
        ap_reg_pp0_iter7_tmp_50_i_i_reg_734 = tmp_50_i_i_reg_734.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        bound_reg_648 = bound_fu_594_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter5_exitcond_flatten_reg_653.read()))) {
        tmp3_reg_739 = tmp3_fu_510_p2.read();
        tmp_50_i_i_reg_734 = tmp_48_i_i_fu_459_p2.read().range(15, 8);
        tmp_61_i_i_reg_744 = tmp_61_i_i_fu_537_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_302_p2.read()))) {
        tmp_22_reg_673 = tmp_22_fu_340_p1.read();
        tmp_23_reg_678 = tmp_23_fu_344_p1.read();
        y_i_i_mid2_reg_662 = y_i_i_mid2_fu_324_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0))) {
        tmp_24_reg_683 = tmp_24_fu_371_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter6_exitcond_flatten_reg_653.read()))) {
        tmp_58_i_i_reg_754 = grp_fu_626_p3.read().range(15, 8);
        tmp_66_i_i_reg_759 = grp_fu_634_p3.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter5_exitcond_flatten_reg_653.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter6.read()))) {
        tmp_62_i_i_reg_749 = grp_fu_618_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_302_p2.read()))) {
        tmp_i_i_mid2_v_reg_668 = tmp_i_i_mid2_v_fu_332_p3.read();
    }
}

void rgb2yuv11::thread_U_scale_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        U_scale_out_blk_n = U_scale_out_full_n.read();
    } else {
        U_scale_out_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_U_scale_out_din() {
    U_scale_out_din = U_scale.read();
}

void rgb2yuv11::thread_U_scale_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        U_scale_out_write = ap_const_logic_1;
    } else {
        U_scale_out_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_V_scale_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        V_scale_out_blk_n = V_scale_out_full_n.read();
    } else {
        V_scale_out_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_V_scale_out_din() {
    V_scale_out_din = V_scale.read();
}

void rgb2yuv11::thread_V_scale_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        V_scale_out_write = ap_const_logic_1;
    } else {
        V_scale_out_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_Y_scale_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        Y_scale_out_blk_n = Y_scale_out_full_n.read();
    } else {
        Y_scale_out_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_Y_scale_out_din() {
    Y_scale_out_din = Y_scale.read();
}

void rgb2yuv11::thread_Y_scale_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        Y_scale_out_write = ap_const_logic_1;
    } else {
        Y_scale_out_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void rgb2yuv11::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void rgb2yuv11::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[2];
}

void rgb2yuv11::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && ((esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read()))));
}

void rgb2yuv11::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && ((esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read()))));
}

void rgb2yuv11::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && ((esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || 
  (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read()))));
}

void rgb2yuv11::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read()));
}

void rgb2yuv11::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = ((esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch1_full_n.read())) || (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch2_full_n.read())) || (esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_channels_ch3_full_n.read())));
}

void rgb2yuv11::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void rgb2yuv11::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_302_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void rgb2yuv11::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void rgb2yuv11::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void rgb2yuv11::thread_bound_fu_594_p0() {
    bound_fu_594_p0 =  (sc_lv<16>) (bound_fu_594_p00.read());
}

void rgb2yuv11::thread_bound_fu_594_p00() {
    bound_fu_594_p00 = esl_zext<32,16>(in_height.read());
}

void rgb2yuv11::thread_bound_fu_594_p1() {
    bound_fu_594_p1 =  (sc_lv<16>) (bound_fu_594_p10.read());
}

void rgb2yuv11::thread_bound_fu_594_p10() {
    bound_fu_594_p10 = esl_zext<32,16>(in_width.read());
}

void rgb2yuv11::thread_exitcond_flatten_fu_302_p2() {
    exitcond_flatten_fu_302_p2 = (!indvar_flatten_reg_261.read().is_01() || !bound_reg_648.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_261.read() == bound_reg_648.read());
}

void rgb2yuv11::thread_exitcond_i_i_fu_319_p2() {
    exitcond_i_i_fu_319_p2 = (!y_i_i_phi_fu_287_p4.read().is_01() || !in_height.read().is_01())? sc_lv<1>(): sc_lv<1>(y_i_i_phi_fu_287_p4.read() == in_height.read());
}

void rgb2yuv11::thread_grp_fu_600_p0() {
    grp_fu_600_p0 =  (sc_lv<6>) (ap_const_lv13_19);
}

void rgb2yuv11::thread_grp_fu_600_p1() {
    grp_fu_600_p1 =  (sc_lv<8>) (grp_fu_600_p10.read());
}

void rgb2yuv11::thread_grp_fu_600_p10() {
    grp_fu_600_p10 = esl_zext<13,8>(B_reg_721.read());
}

void rgb2yuv11::thread_grp_fu_600_p2() {
    grp_fu_600_p2 =  (sc_lv<8>) (grp_fu_600_p20.read());
}

void rgb2yuv11::thread_grp_fu_600_p20() {
    grp_fu_600_p20 = esl_zext<13,8>(G_reg_714.read());
}

void rgb2yuv11::thread_grp_fu_609_p0() {
    grp_fu_609_p0 =  (sc_lv<7>) (ap_const_lv15_7FDA);
}

void rgb2yuv11::thread_grp_fu_609_p1() {
    grp_fu_609_p1 =  (sc_lv<8>) (tmp_40_cast14_i_i_fu_406_p1.read());
}

void rgb2yuv11::thread_grp_fu_609_p2() {
    grp_fu_609_p2 =  (sc_lv<9>) (ap_const_lv15_80);
}

void rgb2yuv11::thread_grp_fu_618_p0() {
    grp_fu_618_p0 =  (sc_lv<8>) (ap_const_lv15_7A);
}

void rgb2yuv11::thread_grp_fu_618_p1() {
    grp_fu_618_p1 =  (sc_lv<8>) (tmp_40_cast14_i_i_fu_406_p1.read());
}

void rgb2yuv11::thread_grp_fu_618_p2() {
    grp_fu_618_p2 =  (sc_lv<9>) (ap_const_lv15_80);
}

void rgb2yuv11::thread_grp_fu_626_p0() {
    grp_fu_626_p0 =  (sc_lv<8>) (ap_const_lv16_FFB6);
}

void rgb2yuv11::thread_grp_fu_626_p1() {
    grp_fu_626_p1 =  (sc_lv<8>) (tmp_42_cast11_i_i_fu_543_p1.read());
}

void rgb2yuv11::thread_grp_fu_634_p0() {
    grp_fu_634_p0 =  (sc_lv<8>) (ap_const_lv16_FFA2);
}

void rgb2yuv11::thread_grp_fu_634_p1() {
    grp_fu_634_p1 =  (sc_lv<8>) (tmp_42_cast11_i_i_fu_543_p1.read());
}

void rgb2yuv11::thread_grp_fu_634_p2() {
    grp_fu_634_p2 = (!tmp_62_cast_i_i_fu_558_p1.read().is_01() || !tmp_61_cast_i_i_fu_555_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_62_cast_i_i_fu_558_p1.read()) + sc_bigint<16>(tmp_61_cast_i_i_fu_555_p1.read()));
}

void rgb2yuv11::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 =  (sc_lv<22>) (tmp_26_cast_fu_382_p1.read());
}

void rgb2yuv11::thread_in_channels_ch1_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 =  (sc_lv<22>) (tmp_26_cast_fu_382_p1.read());
}

void rgb2yuv11::thread_in_channels_ch2_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 =  (sc_lv<22>) (tmp_26_cast_fu_382_p1.read());
}

void rgb2yuv11::thread_in_channels_ch3_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        in_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_indvar_flatten_next_fu_307_p2() {
    indvar_flatten_next_fu_307_p2 = (!indvar_flatten_reg_261.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(indvar_flatten_reg_261.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void rgb2yuv11::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_channels_ch1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0))) {
        out_channels_ch1_blk_n = out_channels_ch1_full_n.read();
    } else {
        out_channels_ch1_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_channels_ch1_din() {
    out_channels_ch1_din = (!ap_const_lv8_10.is_01() || !ap_reg_pp0_iter7_tmp_50_i_i_reg_734.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_10) + sc_biguint<8>(ap_reg_pp0_iter7_tmp_50_i_i_reg_734.read()));
}

void rgb2yuv11::thread_out_channels_ch1_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        out_channels_ch1_write = ap_const_logic_1;
    } else {
        out_channels_ch1_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_channels_ch2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0))) {
        out_channels_ch2_blk_n = out_channels_ch2_full_n.read();
    } else {
        out_channels_ch2_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_channels_ch2_din() {
    out_channels_ch2_din = (tmp_58_i_i_reg_754.read() ^ ap_const_lv8_80);
}

void rgb2yuv11::thread_out_channels_ch2_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        out_channels_ch2_write = ap_const_logic_1;
    } else {
        out_channels_ch2_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_channels_ch3_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0))) {
        out_channels_ch3_blk_n = out_channels_ch3_full_n.read();
    } else {
        out_channels_ch3_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_channels_ch3_din() {
    out_channels_ch3_din = (tmp_66_i_i_reg_759.read() ^ ap_const_lv8_80);
}

void rgb2yuv11::thread_out_channels_ch3_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter7_exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        out_channels_ch3_write = ap_const_logic_1;
    } else {
        out_channels_ch3_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_height_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        out_height_blk_n = out_height_full_n.read();
    } else {
        out_height_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_height_din() {
    out_height_din = in_height.read();
}

void rgb2yuv11::thread_out_height_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        out_height_write = ap_const_logic_1;
    } else {
        out_height_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_out_width_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        out_width_blk_n = out_width_full_n.read();
    } else {
        out_width_blk_n = ap_const_logic_1;
    }
}

void rgb2yuv11::thread_out_width_din() {
    out_width_din = in_width.read();
}

void rgb2yuv11::thread_out_width_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
        out_width_write = ap_const_logic_1;
    } else {
        out_width_write = ap_const_logic_0;
    }
}

void rgb2yuv11::thread_p_neg_cast_i_i_fu_522_p1() {
    p_neg_cast_i_i_fu_522_p1 = esl_sext<14,13>(p_neg_i_i_fu_516_p2.read());
}

void rgb2yuv11::thread_p_neg_i_i_fu_516_p2() {
    p_neg_i_i_fu_516_p2 = (!ap_const_lv13_0.is_01() || !p_shl3_cast7_i_i_fu_493_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_0) - sc_biguint<13>(p_shl3_cast7_i_i_fu_493_p1.read()));
}

void rgb2yuv11::thread_p_shl1_cast_fu_355_p3() {
    p_shl1_cast_fu_355_p3 = esl_concat<15,8>(tmp_23_reg_678.read(), ap_const_lv8_0);
}

void rgb2yuv11::thread_p_shl1_cast_i_i_fu_533_p1() {
    p_shl1_cast_i_i_fu_533_p1 = esl_zext<14,9>(p_shl1_i_i_fu_526_p3.read());
}

void rgb2yuv11::thread_p_shl1_i_i_fu_526_p3() {
    p_shl1_i_i_fu_526_p3 = esl_concat<8,1>(B_reg_721.read(), ap_const_lv1_0);
}

void rgb2yuv11::thread_p_shl2_cast_i_i_fu_482_p1() {
    p_shl2_cast_i_i_fu_482_p1 = esl_zext<16,15>(p_shl2_i_i_fu_475_p3.read());
}

void rgb2yuv11::thread_p_shl2_i_i_fu_475_p3() {
    p_shl2_i_i_fu_475_p3 = esl_concat<8,7>(B_reg_721.read(), ap_const_lv7_0);
}

void rgb2yuv11::thread_p_shl3_cast7_i_i_fu_493_p1() {
    p_shl3_cast7_i_i_fu_493_p1 = esl_zext<13,12>(p_shl3_i_i_fu_486_p3.read());
}

void rgb2yuv11::thread_p_shl3_cast_i_i_fu_497_p1() {
    p_shl3_cast_i_i_fu_497_p1 = esl_zext<16,12>(p_shl3_i_i_fu_486_p3.read());
}

void rgb2yuv11::thread_p_shl3_i_i_fu_486_p3() {
    p_shl3_i_i_fu_486_p3 = esl_concat<8,4>(B_reg_721.read(), ap_const_lv4_0);
}

void rgb2yuv11::thread_p_shl4_cast_i_i_fu_430_p1() {
    p_shl4_cast_i_i_fu_430_p1 = esl_zext<16,15>(p_shl4_i_i_fu_423_p3.read());
}

void rgb2yuv11::thread_p_shl4_i_i_fu_423_p3() {
    p_shl4_i_i_fu_423_p3 = esl_concat<8,7>(G_reg_714.read(), ap_const_lv7_0);
}

void rgb2yuv11::thread_p_shl5_cast_i_i_fu_416_p1() {
    p_shl5_cast_i_i_fu_416_p1 = esl_zext<15,14>(p_shl5_i_i_fu_409_p3.read());
}

void rgb2yuv11::thread_p_shl5_i_i_fu_409_p3() {
    p_shl5_i_i_fu_409_p3 = esl_concat<8,6>(R_reg_708.read(), ap_const_lv6_0);
}

void rgb2yuv11::thread_p_shl6_cast_i_i_cast_fu_396_p1() {
    p_shl6_cast_i_i_cast_fu_396_p1 = esl_zext<10,9>(p_shl6_i_i_fu_388_p3.read());
}

void rgb2yuv11::thread_p_shl6_i_i_fu_388_p3() {
    p_shl6_i_i_fu_388_p3 = esl_concat<8,1>(in_channels_ch1_q0.read(), ap_const_lv1_0);
}

void rgb2yuv11::thread_p_shl_cast_fu_348_p3() {
    p_shl_cast_fu_348_p3 = esl_concat<13,10>(tmp_22_reg_673.read(), ap_const_lv10_0);
}

void rgb2yuv11::thread_real_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, real_start_status_reg.read())) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void rgb2yuv11::thread_start_out() {
    start_out = real_start.read();
}

void rgb2yuv11::thread_start_write() {
    start_write = (ap_start.read() & start_control_reg.read());
}

void rgb2yuv11::thread_tmp1_fu_450_p2() {
    tmp1_fu_450_p2 = (!p_shl4_cast_i_i_fu_430_p1.read().is_01() || !tmp_46_cast_i_i_fu_446_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_shl4_cast_i_i_fu_430_p1.read()) + sc_biguint<16>(tmp_46_cast_i_i_fu_446_p1.read()));
}

void rgb2yuv11::thread_tmp2_cast_fu_456_p1() {
    tmp2_cast_fu_456_p1 = esl_zext<16,13>(grp_fu_600_p3.read());
}

void rgb2yuv11::thread_tmp3_fu_510_p2() {
    tmp3_fu_510_p2 = (!tmp_53_i_i_fu_501_p2.read().is_01() || !tmp_54_cast_i_i_fu_507_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_53_i_i_fu_501_p2.read()) + sc_bigint<16>(tmp_54_cast_i_i_fu_507_p1.read()));
}

void rgb2yuv11::thread_tmp_22_fu_340_p1() {
    tmp_22_fu_340_p1 = tmp_i_i_mid2_v_fu_332_p3.read().range(13-1, 0);
}

void rgb2yuv11::thread_tmp_23_fu_344_p1() {
    tmp_23_fu_344_p1 = tmp_i_i_mid2_v_fu_332_p3.read().range(15-1, 0);
}

void rgb2yuv11::thread_tmp_24_fu_371_p2() {
    tmp_24_fu_371_p2 = (!tmp_i_i_cast_fu_368_p1.read().is_01() || !tmp_s_fu_362_p2.read().is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_i_i_cast_fu_368_p1.read()) + sc_biguint<23>(tmp_s_fu_362_p2.read()));
}

void rgb2yuv11::thread_tmp_26_cast_fu_382_p1() {
    tmp_26_cast_fu_382_p1 = esl_zext<64,23>(tmp_24_reg_683.read());
}

void rgb2yuv11::thread_tmp_40_cast14_i_i_fu_406_p1() {
    tmp_40_cast14_i_i_fu_406_p1 = esl_zext<15,8>(R_reg_708.read());
}

void rgb2yuv11::thread_tmp_42_cast11_i_i_fu_543_p1() {
    tmp_42_cast11_i_i_fu_543_p1 = esl_zext<16,8>(ap_reg_pp0_iter6_G_reg_714.read());
}

void rgb2yuv11::thread_tmp_46_cast_i_i_fu_446_p1() {
    tmp_46_cast_i_i_fu_446_p1 = esl_zext<16,15>(tmp_46_i_i_fu_440_p2.read());
}

void rgb2yuv11::thread_tmp_46_i_i_fu_440_p2() {
    tmp_46_i_i_fu_440_p2 = (!tmp_cast_fu_437_p1.read().is_01() || !p_shl5_cast_i_i_fu_416_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_cast_fu_437_p1.read()) + sc_biguint<15>(p_shl5_cast_i_i_fu_416_p1.read()));
}

void rgb2yuv11::thread_tmp_48_i_i_fu_459_p2() {
    tmp_48_i_i_fu_459_p2 = (!tmp2_cast_fu_456_p1.read().is_01() || !tmp1_fu_450_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp2_cast_fu_456_p1.read()) + sc_biguint<16>(tmp1_fu_450_p2.read()));
}

void rgb2yuv11::thread_tmp_53_i_i_fu_501_p2() {
    tmp_53_i_i_fu_501_p2 = (!p_shl2_cast_i_i_fu_482_p1.read().is_01() || !p_shl3_cast_i_i_fu_497_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_shl2_cast_i_i_fu_482_p1.read()) - sc_biguint<16>(p_shl3_cast_i_i_fu_497_p1.read()));
}

void rgb2yuv11::thread_tmp_54_cast_i_i_fu_507_p1() {
    tmp_54_cast_i_i_fu_507_p1 = esl_sext<16,15>(grp_fu_609_p3.read());
}

void rgb2yuv11::thread_tmp_61_cast_i_i_fu_555_p1() {
    tmp_61_cast_i_i_fu_555_p1 = esl_sext<16,14>(tmp_61_i_i_reg_744.read());
}

void rgb2yuv11::thread_tmp_61_i_i_fu_537_p2() {
    tmp_61_i_i_fu_537_p2 = (!p_neg_cast_i_i_fu_522_p1.read().is_01() || !p_shl1_cast_i_i_fu_533_p1.read().is_01())? sc_lv<14>(): (sc_bigint<14>(p_neg_cast_i_i_fu_522_p1.read()) - sc_biguint<14>(p_shl1_cast_i_i_fu_533_p1.read()));
}

void rgb2yuv11::thread_tmp_62_cast_i_i_fu_558_p1() {
    tmp_62_cast_i_i_fu_558_p1 = esl_zext<16,15>(tmp_62_i_i_reg_749.read());
}

void rgb2yuv11::thread_tmp_cast_fu_437_p1() {
    tmp_cast_fu_437_p1 = esl_zext<15,10>(tmp_reg_729.read());
}

void rgb2yuv11::thread_tmp_fu_400_p2() {
    tmp_fu_400_p2 = (!ap_const_lv10_80.is_01() || !p_shl6_cast_i_i_cast_fu_396_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_80) + sc_biguint<10>(p_shl6_cast_i_i_cast_fu_396_p1.read()));
}

void rgb2yuv11::thread_tmp_i_i_cast_fu_368_p1() {
    tmp_i_i_cast_fu_368_p1 = esl_zext<23,16>(y_i_i_mid2_reg_662.read());
}

void rgb2yuv11::thread_tmp_i_i_mid2_v_fu_332_p3() {
    tmp_i_i_mid2_v_fu_332_p3 = (!exitcond_i_i_fu_319_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond_i_i_fu_319_p2.read()[0].to_bool())? x_fu_313_p2.read(): x_i_i_phi_fu_276_p4.read());
}

void rgb2yuv11::thread_tmp_s_fu_362_p2() {
    tmp_s_fu_362_p2 = (!p_shl_cast_fu_348_p3.read().is_01() || !p_shl1_cast_fu_355_p3.read().is_01())? sc_lv<23>(): (sc_biguint<23>(p_shl_cast_fu_348_p3.read()) + sc_biguint<23>(p_shl1_cast_fu_355_p3.read()));
}

void rgb2yuv11::thread_x_fu_313_p2() {
    x_fu_313_p2 = (!ap_const_lv16_1.is_01() || !x_i_i_phi_fu_276_p4.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(x_i_i_phi_fu_276_p4.read()));
}

void rgb2yuv11::thread_x_i_i_phi_fu_276_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        x_i_i_phi_fu_276_p4 = tmp_i_i_mid2_v_reg_668.read();
    } else {
        x_i_i_phi_fu_276_p4 = x_i_i_reg_272.read();
    }
}

void rgb2yuv11::thread_y_fu_377_p2() {
    y_fu_377_p2 = (!ap_const_lv16_1.is_01() || !y_i_i_mid2_reg_662.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_1) + sc_biguint<16>(y_i_i_mid2_reg_662.read()));
}

void rgb2yuv11::thread_y_i_i_mid2_fu_324_p3() {
    y_i_i_mid2_fu_324_p3 = (!exitcond_i_i_fu_319_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond_i_i_fu_319_p2.read()[0].to_bool())? ap_const_lv16_0: y_i_i_phi_fu_287_p4.read());
}

void rgb2yuv11::thread_y_i_i_phi_fu_287_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_653.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        y_i_i_phi_fu_287_p4 = y_fu_377_p2.read();
    } else {
        y_i_i_phi_fu_287_p4 = y_i_i_reg_283.read();
    }
}

void rgb2yuv11::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, Y_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, V_scale_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_width_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_height_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_302_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_302_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

