// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "yuv_filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<22> yuv_filter::ap_const_lv22_0 = "0000000000000000000000";
const sc_logic yuv_filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> yuv_filter::ap_const_lv8_0 = "00000000";
const sc_lv<16> yuv_filter::ap_const_lv16_0 = "0000000000000000";
const sc_logic yuv_filter::ap_const_logic_1 = sc_dt::Log_1;

yuv_filter::yuv_filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    rgb2yuv11_U0 = new rgb2yuv11("rgb2yuv11_U0");
    rgb2yuv11_U0->ap_clk(ap_clk);
    rgb2yuv11_U0->ap_rst(ap_rst);
    rgb2yuv11_U0->ap_start(rgb2yuv11_U0_ap_start);
    rgb2yuv11_U0->start_full_n(rgb2yuv11_U0_start_full_n);
    rgb2yuv11_U0->ap_ready(rgb2yuv11_U0_ap_ready);
    rgb2yuv11_U0->ap_done(rgb2yuv11_U0_ap_done);
    rgb2yuv11_U0->ap_continue(rgb2yuv11_U0_ap_continue);
    rgb2yuv11_U0->ap_idle(rgb2yuv11_U0_ap_idle);
    rgb2yuv11_U0->start_out(rgb2yuv11_U0_start_out);
    rgb2yuv11_U0->start_write(rgb2yuv11_U0_start_write);
    rgb2yuv11_U0->in_channels_ch1_address0(rgb2yuv11_U0_in_channels_ch1_address0);
    rgb2yuv11_U0->in_channels_ch1_ce0(rgb2yuv11_U0_in_channels_ch1_ce0);
    rgb2yuv11_U0->in_channels_ch1_q0(in_channels_ch1_q0);
    rgb2yuv11_U0->in_channels_ch2_address0(rgb2yuv11_U0_in_channels_ch2_address0);
    rgb2yuv11_U0->in_channels_ch2_ce0(rgb2yuv11_U0_in_channels_ch2_ce0);
    rgb2yuv11_U0->in_channels_ch2_q0(in_channels_ch2_q0);
    rgb2yuv11_U0->in_channels_ch3_address0(rgb2yuv11_U0_in_channels_ch3_address0);
    rgb2yuv11_U0->in_channels_ch3_ce0(rgb2yuv11_U0_in_channels_ch3_ce0);
    rgb2yuv11_U0->in_channels_ch3_q0(in_channels_ch3_q0);
    rgb2yuv11_U0->in_width(in_width);
    rgb2yuv11_U0->in_height(in_height);
    rgb2yuv11_U0->out_channels_ch1_din(rgb2yuv11_U0_out_channels_ch1_din);
    rgb2yuv11_U0->out_channels_ch1_full_n(p_yuv_channels_ch1_full_n);
    rgb2yuv11_U0->out_channels_ch1_write(rgb2yuv11_U0_out_channels_ch1_write);
    rgb2yuv11_U0->out_channels_ch2_din(rgb2yuv11_U0_out_channels_ch2_din);
    rgb2yuv11_U0->out_channels_ch2_full_n(p_yuv_channels_ch2_full_n);
    rgb2yuv11_U0->out_channels_ch2_write(rgb2yuv11_U0_out_channels_ch2_write);
    rgb2yuv11_U0->out_channels_ch3_din(rgb2yuv11_U0_out_channels_ch3_din);
    rgb2yuv11_U0->out_channels_ch3_full_n(p_yuv_channels_ch3_full_n);
    rgb2yuv11_U0->out_channels_ch3_write(rgb2yuv11_U0_out_channels_ch3_write);
    rgb2yuv11_U0->out_width_din(rgb2yuv11_U0_out_width_din);
    rgb2yuv11_U0->out_width_full_n(p_yuv_width_full_n);
    rgb2yuv11_U0->out_width_write(rgb2yuv11_U0_out_width_write);
    rgb2yuv11_U0->out_height_din(rgb2yuv11_U0_out_height_din);
    rgb2yuv11_U0->out_height_full_n(p_yuv_height_full_n);
    rgb2yuv11_U0->out_height_write(rgb2yuv11_U0_out_height_write);
    rgb2yuv11_U0->Y_scale(Y_scale);
    rgb2yuv11_U0->U_scale(U_scale);
    rgb2yuv11_U0->V_scale(V_scale);
    rgb2yuv11_U0->Y_scale_out_din(rgb2yuv11_U0_Y_scale_out_din);
    rgb2yuv11_U0->Y_scale_out_full_n(Y_scale_channel_full_n);
    rgb2yuv11_U0->Y_scale_out_write(rgb2yuv11_U0_Y_scale_out_write);
    rgb2yuv11_U0->U_scale_out_din(rgb2yuv11_U0_U_scale_out_din);
    rgb2yuv11_U0->U_scale_out_full_n(U_scale_channel_full_n);
    rgb2yuv11_U0->U_scale_out_write(rgb2yuv11_U0_U_scale_out_write);
    rgb2yuv11_U0->V_scale_out_din(rgb2yuv11_U0_V_scale_out_din);
    rgb2yuv11_U0->V_scale_out_full_n(V_scale_channel_full_n);
    rgb2yuv11_U0->V_scale_out_write(rgb2yuv11_U0_V_scale_out_write);
    yuv_scale_U0 = new yuv_scale("yuv_scale_U0");
    yuv_scale_U0->ap_clk(ap_clk);
    yuv_scale_U0->ap_rst(ap_rst);
    yuv_scale_U0->ap_start(yuv_scale_U0_ap_start);
    yuv_scale_U0->start_full_n(yuv_scale_U0_start_full_n);
    yuv_scale_U0->ap_ready(yuv_scale_U0_ap_ready);
    yuv_scale_U0->ap_done(yuv_scale_U0_ap_done);
    yuv_scale_U0->ap_continue(yuv_scale_U0_ap_continue);
    yuv_scale_U0->ap_idle(yuv_scale_U0_ap_idle);
    yuv_scale_U0->start_out(yuv_scale_U0_start_out);
    yuv_scale_U0->start_write(yuv_scale_U0_start_write);
    yuv_scale_U0->in_channels_ch1_dout(p_yuv_channels_ch1_dout);
    yuv_scale_U0->in_channels_ch1_empty_n(p_yuv_channels_ch1_empty_n);
    yuv_scale_U0->in_channels_ch1_read(yuv_scale_U0_in_channels_ch1_read);
    yuv_scale_U0->in_channels_ch2_dout(p_yuv_channels_ch2_dout);
    yuv_scale_U0->in_channels_ch2_empty_n(p_yuv_channels_ch2_empty_n);
    yuv_scale_U0->in_channels_ch2_read(yuv_scale_U0_in_channels_ch2_read);
    yuv_scale_U0->in_channels_ch3_dout(p_yuv_channels_ch3_dout);
    yuv_scale_U0->in_channels_ch3_empty_n(p_yuv_channels_ch3_empty_n);
    yuv_scale_U0->in_channels_ch3_read(yuv_scale_U0_in_channels_ch3_read);
    yuv_scale_U0->in_width_dout(p_yuv_width_dout);
    yuv_scale_U0->in_width_empty_n(p_yuv_width_empty_n);
    yuv_scale_U0->in_width_read(yuv_scale_U0_in_width_read);
    yuv_scale_U0->in_height_dout(p_yuv_height_dout);
    yuv_scale_U0->in_height_empty_n(p_yuv_height_empty_n);
    yuv_scale_U0->in_height_read(yuv_scale_U0_in_height_read);
    yuv_scale_U0->out_channels_ch1_din(yuv_scale_U0_out_channels_ch1_din);
    yuv_scale_U0->out_channels_ch1_full_n(p_scale_channels_ch1_full_n);
    yuv_scale_U0->out_channels_ch1_write(yuv_scale_U0_out_channels_ch1_write);
    yuv_scale_U0->out_channels_ch2_din(yuv_scale_U0_out_channels_ch2_din);
    yuv_scale_U0->out_channels_ch2_full_n(p_scale_channels_ch2_full_n);
    yuv_scale_U0->out_channels_ch2_write(yuv_scale_U0_out_channels_ch2_write);
    yuv_scale_U0->out_channels_ch3_din(yuv_scale_U0_out_channels_ch3_din);
    yuv_scale_U0->out_channels_ch3_full_n(p_scale_channels_ch3_full_n);
    yuv_scale_U0->out_channels_ch3_write(yuv_scale_U0_out_channels_ch3_write);
    yuv_scale_U0->out_width_din(yuv_scale_U0_out_width_din);
    yuv_scale_U0->out_width_full_n(p_scale_width_full_n);
    yuv_scale_U0->out_width_write(yuv_scale_U0_out_width_write);
    yuv_scale_U0->out_height_din(yuv_scale_U0_out_height_din);
    yuv_scale_U0->out_height_full_n(p_scale_height_full_n);
    yuv_scale_U0->out_height_write(yuv_scale_U0_out_height_write);
    yuv_scale_U0->Y_scale_dout(Y_scale_channel_dout);
    yuv_scale_U0->Y_scale_empty_n(Y_scale_channel_empty_n);
    yuv_scale_U0->Y_scale_read(yuv_scale_U0_Y_scale_read);
    yuv_scale_U0->U_scale_dout(U_scale_channel_dout);
    yuv_scale_U0->U_scale_empty_n(U_scale_channel_empty_n);
    yuv_scale_U0->U_scale_read(yuv_scale_U0_U_scale_read);
    yuv_scale_U0->V_scale_dout(V_scale_channel_dout);
    yuv_scale_U0->V_scale_empty_n(V_scale_channel_empty_n);
    yuv_scale_U0->V_scale_read(yuv_scale_U0_V_scale_read);
    yuv2rgb_U0 = new yuv2rgb("yuv2rgb_U0");
    yuv2rgb_U0->ap_clk(ap_clk);
    yuv2rgb_U0->ap_rst(ap_rst);
    yuv2rgb_U0->ap_start(yuv2rgb_U0_ap_start);
    yuv2rgb_U0->ap_done(yuv2rgb_U0_ap_done);
    yuv2rgb_U0->ap_continue(yuv2rgb_U0_ap_continue);
    yuv2rgb_U0->ap_idle(yuv2rgb_U0_ap_idle);
    yuv2rgb_U0->ap_ready(yuv2rgb_U0_ap_ready);
    yuv2rgb_U0->in_channels_ch1_dout(p_scale_channels_ch1_dout);
    yuv2rgb_U0->in_channels_ch1_empty_n(p_scale_channels_ch1_empty_n);
    yuv2rgb_U0->in_channels_ch1_read(yuv2rgb_U0_in_channels_ch1_read);
    yuv2rgb_U0->in_channels_ch2_dout(p_scale_channels_ch2_dout);
    yuv2rgb_U0->in_channels_ch2_empty_n(p_scale_channels_ch2_empty_n);
    yuv2rgb_U0->in_channels_ch2_read(yuv2rgb_U0_in_channels_ch2_read);
    yuv2rgb_U0->in_channels_ch3_dout(p_scale_channels_ch3_dout);
    yuv2rgb_U0->in_channels_ch3_empty_n(p_scale_channels_ch3_empty_n);
    yuv2rgb_U0->in_channels_ch3_read(yuv2rgb_U0_in_channels_ch3_read);
    yuv2rgb_U0->in_width_dout(p_scale_width_dout);
    yuv2rgb_U0->in_width_empty_n(p_scale_width_empty_n);
    yuv2rgb_U0->in_width_read(yuv2rgb_U0_in_width_read);
    yuv2rgb_U0->in_height_dout(p_scale_height_dout);
    yuv2rgb_U0->in_height_empty_n(p_scale_height_empty_n);
    yuv2rgb_U0->in_height_read(yuv2rgb_U0_in_height_read);
    yuv2rgb_U0->out_channels_ch1_address0(yuv2rgb_U0_out_channels_ch1_address0);
    yuv2rgb_U0->out_channels_ch1_ce0(yuv2rgb_U0_out_channels_ch1_ce0);
    yuv2rgb_U0->out_channels_ch1_we0(yuv2rgb_U0_out_channels_ch1_we0);
    yuv2rgb_U0->out_channels_ch1_d0(yuv2rgb_U0_out_channels_ch1_d0);
    yuv2rgb_U0->out_channels_ch2_address0(yuv2rgb_U0_out_channels_ch2_address0);
    yuv2rgb_U0->out_channels_ch2_ce0(yuv2rgb_U0_out_channels_ch2_ce0);
    yuv2rgb_U0->out_channels_ch2_we0(yuv2rgb_U0_out_channels_ch2_we0);
    yuv2rgb_U0->out_channels_ch2_d0(yuv2rgb_U0_out_channels_ch2_d0);
    yuv2rgb_U0->out_channels_ch3_address0(yuv2rgb_U0_out_channels_ch3_address0);
    yuv2rgb_U0->out_channels_ch3_ce0(yuv2rgb_U0_out_channels_ch3_ce0);
    yuv2rgb_U0->out_channels_ch3_we0(yuv2rgb_U0_out_channels_ch3_we0);
    yuv2rgb_U0->out_channels_ch3_d0(yuv2rgb_U0_out_channels_ch3_d0);
    yuv2rgb_U0->out_width(yuv2rgb_U0_out_width);
    yuv2rgb_U0->out_width_ap_vld(yuv2rgb_U0_out_width_ap_vld);
    yuv2rgb_U0->out_height(yuv2rgb_U0_out_height);
    yuv2rgb_U0->out_height_ap_vld(yuv2rgb_U0_out_height_ap_vld);
    p_yuv_channels_ch1_U = new fifo_w8_d2_A("p_yuv_channels_ch1_U");
    p_yuv_channels_ch1_U->clk(ap_clk);
    p_yuv_channels_ch1_U->reset(ap_rst);
    p_yuv_channels_ch1_U->if_read_ce(ap_var_for_const0);
    p_yuv_channels_ch1_U->if_write_ce(ap_var_for_const0);
    p_yuv_channels_ch1_U->if_din(rgb2yuv11_U0_out_channels_ch1_din);
    p_yuv_channels_ch1_U->if_full_n(p_yuv_channels_ch1_full_n);
    p_yuv_channels_ch1_U->if_write(rgb2yuv11_U0_out_channels_ch1_write);
    p_yuv_channels_ch1_U->if_dout(p_yuv_channels_ch1_dout);
    p_yuv_channels_ch1_U->if_empty_n(p_yuv_channels_ch1_empty_n);
    p_yuv_channels_ch1_U->if_read(yuv_scale_U0_in_channels_ch1_read);
    p_yuv_channels_ch2_U = new fifo_w8_d2_A("p_yuv_channels_ch2_U");
    p_yuv_channels_ch2_U->clk(ap_clk);
    p_yuv_channels_ch2_U->reset(ap_rst);
    p_yuv_channels_ch2_U->if_read_ce(ap_var_for_const0);
    p_yuv_channels_ch2_U->if_write_ce(ap_var_for_const0);
    p_yuv_channels_ch2_U->if_din(rgb2yuv11_U0_out_channels_ch2_din);
    p_yuv_channels_ch2_U->if_full_n(p_yuv_channels_ch2_full_n);
    p_yuv_channels_ch2_U->if_write(rgb2yuv11_U0_out_channels_ch2_write);
    p_yuv_channels_ch2_U->if_dout(p_yuv_channels_ch2_dout);
    p_yuv_channels_ch2_U->if_empty_n(p_yuv_channels_ch2_empty_n);
    p_yuv_channels_ch2_U->if_read(yuv_scale_U0_in_channels_ch2_read);
    p_yuv_channels_ch3_U = new fifo_w8_d2_A("p_yuv_channels_ch3_U");
    p_yuv_channels_ch3_U->clk(ap_clk);
    p_yuv_channels_ch3_U->reset(ap_rst);
    p_yuv_channels_ch3_U->if_read_ce(ap_var_for_const0);
    p_yuv_channels_ch3_U->if_write_ce(ap_var_for_const0);
    p_yuv_channels_ch3_U->if_din(rgb2yuv11_U0_out_channels_ch3_din);
    p_yuv_channels_ch3_U->if_full_n(p_yuv_channels_ch3_full_n);
    p_yuv_channels_ch3_U->if_write(rgb2yuv11_U0_out_channels_ch3_write);
    p_yuv_channels_ch3_U->if_dout(p_yuv_channels_ch3_dout);
    p_yuv_channels_ch3_U->if_empty_n(p_yuv_channels_ch3_empty_n);
    p_yuv_channels_ch3_U->if_read(yuv_scale_U0_in_channels_ch3_read);
    p_yuv_width_U = new fifo_w16_d2_A("p_yuv_width_U");
    p_yuv_width_U->clk(ap_clk);
    p_yuv_width_U->reset(ap_rst);
    p_yuv_width_U->if_read_ce(ap_var_for_const0);
    p_yuv_width_U->if_write_ce(ap_var_for_const0);
    p_yuv_width_U->if_din(rgb2yuv11_U0_out_width_din);
    p_yuv_width_U->if_full_n(p_yuv_width_full_n);
    p_yuv_width_U->if_write(rgb2yuv11_U0_out_width_write);
    p_yuv_width_U->if_dout(p_yuv_width_dout);
    p_yuv_width_U->if_empty_n(p_yuv_width_empty_n);
    p_yuv_width_U->if_read(yuv_scale_U0_in_width_read);
    p_yuv_height_U = new fifo_w16_d2_A("p_yuv_height_U");
    p_yuv_height_U->clk(ap_clk);
    p_yuv_height_U->reset(ap_rst);
    p_yuv_height_U->if_read_ce(ap_var_for_const0);
    p_yuv_height_U->if_write_ce(ap_var_for_const0);
    p_yuv_height_U->if_din(rgb2yuv11_U0_out_height_din);
    p_yuv_height_U->if_full_n(p_yuv_height_full_n);
    p_yuv_height_U->if_write(rgb2yuv11_U0_out_height_write);
    p_yuv_height_U->if_dout(p_yuv_height_dout);
    p_yuv_height_U->if_empty_n(p_yuv_height_empty_n);
    p_yuv_height_U->if_read(yuv_scale_U0_in_height_read);
    Y_scale_channel_U = new fifo_w8_d2_A("Y_scale_channel_U");
    Y_scale_channel_U->clk(ap_clk);
    Y_scale_channel_U->reset(ap_rst);
    Y_scale_channel_U->if_read_ce(ap_var_for_const0);
    Y_scale_channel_U->if_write_ce(ap_var_for_const0);
    Y_scale_channel_U->if_din(rgb2yuv11_U0_Y_scale_out_din);
    Y_scale_channel_U->if_full_n(Y_scale_channel_full_n);
    Y_scale_channel_U->if_write(rgb2yuv11_U0_Y_scale_out_write);
    Y_scale_channel_U->if_dout(Y_scale_channel_dout);
    Y_scale_channel_U->if_empty_n(Y_scale_channel_empty_n);
    Y_scale_channel_U->if_read(yuv_scale_U0_Y_scale_read);
    U_scale_channel_U = new fifo_w8_d2_A("U_scale_channel_U");
    U_scale_channel_U->clk(ap_clk);
    U_scale_channel_U->reset(ap_rst);
    U_scale_channel_U->if_read_ce(ap_var_for_const0);
    U_scale_channel_U->if_write_ce(ap_var_for_const0);
    U_scale_channel_U->if_din(rgb2yuv11_U0_U_scale_out_din);
    U_scale_channel_U->if_full_n(U_scale_channel_full_n);
    U_scale_channel_U->if_write(rgb2yuv11_U0_U_scale_out_write);
    U_scale_channel_U->if_dout(U_scale_channel_dout);
    U_scale_channel_U->if_empty_n(U_scale_channel_empty_n);
    U_scale_channel_U->if_read(yuv_scale_U0_U_scale_read);
    V_scale_channel_U = new fifo_w8_d2_A("V_scale_channel_U");
    V_scale_channel_U->clk(ap_clk);
    V_scale_channel_U->reset(ap_rst);
    V_scale_channel_U->if_read_ce(ap_var_for_const0);
    V_scale_channel_U->if_write_ce(ap_var_for_const0);
    V_scale_channel_U->if_din(rgb2yuv11_U0_V_scale_out_din);
    V_scale_channel_U->if_full_n(V_scale_channel_full_n);
    V_scale_channel_U->if_write(rgb2yuv11_U0_V_scale_out_write);
    V_scale_channel_U->if_dout(V_scale_channel_dout);
    V_scale_channel_U->if_empty_n(V_scale_channel_empty_n);
    V_scale_channel_U->if_read(yuv_scale_U0_V_scale_read);
    p_scale_channels_ch1_U = new fifo_w8_d2_A("p_scale_channels_ch1_U");
    p_scale_channels_ch1_U->clk(ap_clk);
    p_scale_channels_ch1_U->reset(ap_rst);
    p_scale_channels_ch1_U->if_read_ce(ap_var_for_const0);
    p_scale_channels_ch1_U->if_write_ce(ap_var_for_const0);
    p_scale_channels_ch1_U->if_din(yuv_scale_U0_out_channels_ch1_din);
    p_scale_channels_ch1_U->if_full_n(p_scale_channels_ch1_full_n);
    p_scale_channels_ch1_U->if_write(yuv_scale_U0_out_channels_ch1_write);
    p_scale_channels_ch1_U->if_dout(p_scale_channels_ch1_dout);
    p_scale_channels_ch1_U->if_empty_n(p_scale_channels_ch1_empty_n);
    p_scale_channels_ch1_U->if_read(yuv2rgb_U0_in_channels_ch1_read);
    p_scale_channels_ch2_U = new fifo_w8_d2_A("p_scale_channels_ch2_U");
    p_scale_channels_ch2_U->clk(ap_clk);
    p_scale_channels_ch2_U->reset(ap_rst);
    p_scale_channels_ch2_U->if_read_ce(ap_var_for_const0);
    p_scale_channels_ch2_U->if_write_ce(ap_var_for_const0);
    p_scale_channels_ch2_U->if_din(yuv_scale_U0_out_channels_ch2_din);
    p_scale_channels_ch2_U->if_full_n(p_scale_channels_ch2_full_n);
    p_scale_channels_ch2_U->if_write(yuv_scale_U0_out_channels_ch2_write);
    p_scale_channels_ch2_U->if_dout(p_scale_channels_ch2_dout);
    p_scale_channels_ch2_U->if_empty_n(p_scale_channels_ch2_empty_n);
    p_scale_channels_ch2_U->if_read(yuv2rgb_U0_in_channels_ch2_read);
    p_scale_channels_ch3_U = new fifo_w8_d2_A("p_scale_channels_ch3_U");
    p_scale_channels_ch3_U->clk(ap_clk);
    p_scale_channels_ch3_U->reset(ap_rst);
    p_scale_channels_ch3_U->if_read_ce(ap_var_for_const0);
    p_scale_channels_ch3_U->if_write_ce(ap_var_for_const0);
    p_scale_channels_ch3_U->if_din(yuv_scale_U0_out_channels_ch3_din);
    p_scale_channels_ch3_U->if_full_n(p_scale_channels_ch3_full_n);
    p_scale_channels_ch3_U->if_write(yuv_scale_U0_out_channels_ch3_write);
    p_scale_channels_ch3_U->if_dout(p_scale_channels_ch3_dout);
    p_scale_channels_ch3_U->if_empty_n(p_scale_channels_ch3_empty_n);
    p_scale_channels_ch3_U->if_read(yuv2rgb_U0_in_channels_ch3_read);
    p_scale_width_U = new fifo_w16_d2_A("p_scale_width_U");
    p_scale_width_U->clk(ap_clk);
    p_scale_width_U->reset(ap_rst);
    p_scale_width_U->if_read_ce(ap_var_for_const0);
    p_scale_width_U->if_write_ce(ap_var_for_const0);
    p_scale_width_U->if_din(yuv_scale_U0_out_width_din);
    p_scale_width_U->if_full_n(p_scale_width_full_n);
    p_scale_width_U->if_write(yuv_scale_U0_out_width_write);
    p_scale_width_U->if_dout(p_scale_width_dout);
    p_scale_width_U->if_empty_n(p_scale_width_empty_n);
    p_scale_width_U->if_read(yuv2rgb_U0_in_width_read);
    p_scale_height_U = new fifo_w16_d2_A("p_scale_height_U");
    p_scale_height_U->clk(ap_clk);
    p_scale_height_U->reset(ap_rst);
    p_scale_height_U->if_read_ce(ap_var_for_const0);
    p_scale_height_U->if_write_ce(ap_var_for_const0);
    p_scale_height_U->if_din(yuv_scale_U0_out_height_din);
    p_scale_height_U->if_full_n(p_scale_height_full_n);
    p_scale_height_U->if_write(yuv_scale_U0_out_height_write);
    p_scale_height_U->if_dout(p_scale_height_dout);
    p_scale_height_U->if_empty_n(p_scale_height_empty_n);
    p_scale_height_U->if_read(yuv2rgb_U0_in_height_read);
    start_for_yuv_scalbW_U = new start_for_yuv_scalbW("start_for_yuv_scalbW_U");
    start_for_yuv_scalbW_U->clk(ap_clk);
    start_for_yuv_scalbW_U->reset(ap_rst);
    start_for_yuv_scalbW_U->if_read_ce(ap_var_for_const0);
    start_for_yuv_scalbW_U->if_write_ce(ap_var_for_const0);
    start_for_yuv_scalbW_U->if_din(start_for_yuv_scale_U0_din);
    start_for_yuv_scalbW_U->if_full_n(start_for_yuv_scale_U0_full_n);
    start_for_yuv_scalbW_U->if_write(rgb2yuv11_U0_start_write);
    start_for_yuv_scalbW_U->if_dout(start_for_yuv_scale_U0_dout);
    start_for_yuv_scalbW_U->if_empty_n(start_for_yuv_scale_U0_empty_n);
    start_for_yuv_scalbW_U->if_read(yuv_scale_U0_ap_ready);
    start_for_yuv2rgbmb6_U = new start_for_yuv2rgbmb6("start_for_yuv2rgbmb6_U");
    start_for_yuv2rgbmb6_U->clk(ap_clk);
    start_for_yuv2rgbmb6_U->reset(ap_rst);
    start_for_yuv2rgbmb6_U->if_read_ce(ap_var_for_const0);
    start_for_yuv2rgbmb6_U->if_write_ce(ap_var_for_const0);
    start_for_yuv2rgbmb6_U->if_din(start_for_yuv2rgb_U0_din);
    start_for_yuv2rgbmb6_U->if_full_n(start_for_yuv2rgb_U0_full_n);
    start_for_yuv2rgbmb6_U->if_write(yuv_scale_U0_start_write);
    start_for_yuv2rgbmb6_U->if_dout(start_for_yuv2rgb_U0_dout);
    start_for_yuv2rgbmb6_U->if_empty_n(start_for_yuv2rgb_U0_empty_n);
    start_for_yuv2rgbmb6_U->if_read(yuv2rgb_U0_ap_ready);

    SC_METHOD(thread_ap_done);
    sensitive << ( yuv2rgb_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( rgb2yuv11_U0_ap_idle );
    sensitive << ( yuv_scale_U0_ap_idle );
    sensitive << ( yuv2rgb_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( rgb2yuv11_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( yuv2rgb_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( rgb2yuv11_U0_ap_ready );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( rgb2yuv11_U0_in_channels_ch1_address0 );

    SC_METHOD(thread_in_channels_ch1_address1);

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( rgb2yuv11_U0_in_channels_ch1_ce0 );

    SC_METHOD(thread_in_channels_ch1_ce1);

    SC_METHOD(thread_in_channels_ch1_d0);

    SC_METHOD(thread_in_channels_ch1_d1);

    SC_METHOD(thread_in_channels_ch1_we0);

    SC_METHOD(thread_in_channels_ch1_we1);

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( rgb2yuv11_U0_in_channels_ch2_address0 );

    SC_METHOD(thread_in_channels_ch2_address1);

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( rgb2yuv11_U0_in_channels_ch2_ce0 );

    SC_METHOD(thread_in_channels_ch2_ce1);

    SC_METHOD(thread_in_channels_ch2_d0);

    SC_METHOD(thread_in_channels_ch2_d1);

    SC_METHOD(thread_in_channels_ch2_we0);

    SC_METHOD(thread_in_channels_ch2_we1);

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( rgb2yuv11_U0_in_channels_ch3_address0 );

    SC_METHOD(thread_in_channels_ch3_address1);

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( rgb2yuv11_U0_in_channels_ch3_ce0 );

    SC_METHOD(thread_in_channels_ch3_ce1);

    SC_METHOD(thread_in_channels_ch3_d0);

    SC_METHOD(thread_in_channels_ch3_d1);

    SC_METHOD(thread_in_channels_ch3_we0);

    SC_METHOD(thread_in_channels_ch3_we1);

    SC_METHOD(thread_out_channels_ch1_address0);
    sensitive << ( yuv2rgb_U0_out_channels_ch1_address0 );

    SC_METHOD(thread_out_channels_ch1_address1);

    SC_METHOD(thread_out_channels_ch1_ce0);
    sensitive << ( yuv2rgb_U0_out_channels_ch1_ce0 );

    SC_METHOD(thread_out_channels_ch1_ce1);

    SC_METHOD(thread_out_channels_ch1_d0);
    sensitive << ( yuv2rgb_U0_out_channels_ch1_d0 );

    SC_METHOD(thread_out_channels_ch1_d1);

    SC_METHOD(thread_out_channels_ch1_we0);
    sensitive << ( yuv2rgb_U0_out_channels_ch1_we0 );

    SC_METHOD(thread_out_channels_ch1_we1);

    SC_METHOD(thread_out_channels_ch2_address0);
    sensitive << ( yuv2rgb_U0_out_channels_ch2_address0 );

    SC_METHOD(thread_out_channels_ch2_address1);

    SC_METHOD(thread_out_channels_ch2_ce0);
    sensitive << ( yuv2rgb_U0_out_channels_ch2_ce0 );

    SC_METHOD(thread_out_channels_ch2_ce1);

    SC_METHOD(thread_out_channels_ch2_d0);
    sensitive << ( yuv2rgb_U0_out_channels_ch2_d0 );

    SC_METHOD(thread_out_channels_ch2_d1);

    SC_METHOD(thread_out_channels_ch2_we0);
    sensitive << ( yuv2rgb_U0_out_channels_ch2_we0 );

    SC_METHOD(thread_out_channels_ch2_we1);

    SC_METHOD(thread_out_channels_ch3_address0);
    sensitive << ( yuv2rgb_U0_out_channels_ch3_address0 );

    SC_METHOD(thread_out_channels_ch3_address1);

    SC_METHOD(thread_out_channels_ch3_ce0);
    sensitive << ( yuv2rgb_U0_out_channels_ch3_ce0 );

    SC_METHOD(thread_out_channels_ch3_ce1);

    SC_METHOD(thread_out_channels_ch3_d0);
    sensitive << ( yuv2rgb_U0_out_channels_ch3_d0 );

    SC_METHOD(thread_out_channels_ch3_d1);

    SC_METHOD(thread_out_channels_ch3_we0);
    sensitive << ( yuv2rgb_U0_out_channels_ch3_we0 );

    SC_METHOD(thread_out_channels_ch3_we1);

    SC_METHOD(thread_out_height);
    sensitive << ( yuv2rgb_U0_out_height );

    SC_METHOD(thread_out_height_ap_vld);
    sensitive << ( yuv2rgb_U0_out_height_ap_vld );

    SC_METHOD(thread_out_width);
    sensitive << ( yuv2rgb_U0_out_width );

    SC_METHOD(thread_out_width_ap_vld);
    sensitive << ( yuv2rgb_U0_out_width_ap_vld );

    SC_METHOD(thread_rgb2yuv11_U0_ap_continue);

    SC_METHOD(thread_rgb2yuv11_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_rgb2yuv11_U0_start_full_n);
    sensitive << ( start_for_yuv_scale_U0_full_n );

    SC_METHOD(thread_start_for_yuv2rgb_U0_din);

    SC_METHOD(thread_start_for_yuv_scale_U0_din);

    SC_METHOD(thread_yuv2rgb_U0_ap_continue);

    SC_METHOD(thread_yuv2rgb_U0_ap_start);
    sensitive << ( start_for_yuv2rgb_U0_empty_n );

    SC_METHOD(thread_yuv2rgb_U0_start_full_n);

    SC_METHOD(thread_yuv2rgb_U0_start_write);

    SC_METHOD(thread_yuv_scale_U0_ap_continue);

    SC_METHOD(thread_yuv_scale_U0_ap_start);
    sensitive << ( start_for_yuv_scale_U0_empty_n );

    SC_METHOD(thread_yuv_scale_U0_start_full_n);
    sensitive << ( start_for_yuv2rgb_U0_full_n );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "yuv_filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_d0, "(port)in_channels_ch1_d0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch1_we0, "(port)in_channels_ch1_we0");
    sc_trace(mVcdFile, in_channels_ch1_address1, "(port)in_channels_ch1_address1");
    sc_trace(mVcdFile, in_channels_ch1_ce1, "(port)in_channels_ch1_ce1");
    sc_trace(mVcdFile, in_channels_ch1_d1, "(port)in_channels_ch1_d1");
    sc_trace(mVcdFile, in_channels_ch1_q1, "(port)in_channels_ch1_q1");
    sc_trace(mVcdFile, in_channels_ch1_we1, "(port)in_channels_ch1_we1");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_d0, "(port)in_channels_ch2_d0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch2_we0, "(port)in_channels_ch2_we0");
    sc_trace(mVcdFile, in_channels_ch2_address1, "(port)in_channels_ch2_address1");
    sc_trace(mVcdFile, in_channels_ch2_ce1, "(port)in_channels_ch2_ce1");
    sc_trace(mVcdFile, in_channels_ch2_d1, "(port)in_channels_ch2_d1");
    sc_trace(mVcdFile, in_channels_ch2_q1, "(port)in_channels_ch2_q1");
    sc_trace(mVcdFile, in_channels_ch2_we1, "(port)in_channels_ch2_we1");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_d0, "(port)in_channels_ch3_d0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_channels_ch3_we0, "(port)in_channels_ch3_we0");
    sc_trace(mVcdFile, in_channels_ch3_address1, "(port)in_channels_ch3_address1");
    sc_trace(mVcdFile, in_channels_ch3_ce1, "(port)in_channels_ch3_ce1");
    sc_trace(mVcdFile, in_channels_ch3_d1, "(port)in_channels_ch3_d1");
    sc_trace(mVcdFile, in_channels_ch3_q1, "(port)in_channels_ch3_q1");
    sc_trace(mVcdFile, in_channels_ch3_we1, "(port)in_channels_ch3_we1");
    sc_trace(mVcdFile, in_width, "(port)in_width");
    sc_trace(mVcdFile, in_height, "(port)in_height");
    sc_trace(mVcdFile, out_channels_ch1_address0, "(port)out_channels_ch1_address0");
    sc_trace(mVcdFile, out_channels_ch1_ce0, "(port)out_channels_ch1_ce0");
    sc_trace(mVcdFile, out_channels_ch1_d0, "(port)out_channels_ch1_d0");
    sc_trace(mVcdFile, out_channels_ch1_q0, "(port)out_channels_ch1_q0");
    sc_trace(mVcdFile, out_channels_ch1_we0, "(port)out_channels_ch1_we0");
    sc_trace(mVcdFile, out_channels_ch1_address1, "(port)out_channels_ch1_address1");
    sc_trace(mVcdFile, out_channels_ch1_ce1, "(port)out_channels_ch1_ce1");
    sc_trace(mVcdFile, out_channels_ch1_d1, "(port)out_channels_ch1_d1");
    sc_trace(mVcdFile, out_channels_ch1_q1, "(port)out_channels_ch1_q1");
    sc_trace(mVcdFile, out_channels_ch1_we1, "(port)out_channels_ch1_we1");
    sc_trace(mVcdFile, out_channels_ch2_address0, "(port)out_channels_ch2_address0");
    sc_trace(mVcdFile, out_channels_ch2_ce0, "(port)out_channels_ch2_ce0");
    sc_trace(mVcdFile, out_channels_ch2_d0, "(port)out_channels_ch2_d0");
    sc_trace(mVcdFile, out_channels_ch2_q0, "(port)out_channels_ch2_q0");
    sc_trace(mVcdFile, out_channels_ch2_we0, "(port)out_channels_ch2_we0");
    sc_trace(mVcdFile, out_channels_ch2_address1, "(port)out_channels_ch2_address1");
    sc_trace(mVcdFile, out_channels_ch2_ce1, "(port)out_channels_ch2_ce1");
    sc_trace(mVcdFile, out_channels_ch2_d1, "(port)out_channels_ch2_d1");
    sc_trace(mVcdFile, out_channels_ch2_q1, "(port)out_channels_ch2_q1");
    sc_trace(mVcdFile, out_channels_ch2_we1, "(port)out_channels_ch2_we1");
    sc_trace(mVcdFile, out_channels_ch3_address0, "(port)out_channels_ch3_address0");
    sc_trace(mVcdFile, out_channels_ch3_ce0, "(port)out_channels_ch3_ce0");
    sc_trace(mVcdFile, out_channels_ch3_d0, "(port)out_channels_ch3_d0");
    sc_trace(mVcdFile, out_channels_ch3_q0, "(port)out_channels_ch3_q0");
    sc_trace(mVcdFile, out_channels_ch3_we0, "(port)out_channels_ch3_we0");
    sc_trace(mVcdFile, out_channels_ch3_address1, "(port)out_channels_ch3_address1");
    sc_trace(mVcdFile, out_channels_ch3_ce1, "(port)out_channels_ch3_ce1");
    sc_trace(mVcdFile, out_channels_ch3_d1, "(port)out_channels_ch3_d1");
    sc_trace(mVcdFile, out_channels_ch3_q1, "(port)out_channels_ch3_q1");
    sc_trace(mVcdFile, out_channels_ch3_we1, "(port)out_channels_ch3_we1");
    sc_trace(mVcdFile, out_width, "(port)out_width");
    sc_trace(mVcdFile, out_height, "(port)out_height");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, out_width_ap_vld, "(port)out_width_ap_vld");
    sc_trace(mVcdFile, out_height_ap_vld, "(port)out_height_ap_vld");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, rgb2yuv11_U0_ap_start, "rgb2yuv11_U0_ap_start");
    sc_trace(mVcdFile, rgb2yuv11_U0_start_full_n, "rgb2yuv11_U0_start_full_n");
    sc_trace(mVcdFile, rgb2yuv11_U0_ap_ready, "rgb2yuv11_U0_ap_ready");
    sc_trace(mVcdFile, rgb2yuv11_U0_ap_done, "rgb2yuv11_U0_ap_done");
    sc_trace(mVcdFile, rgb2yuv11_U0_ap_continue, "rgb2yuv11_U0_ap_continue");
    sc_trace(mVcdFile, rgb2yuv11_U0_ap_idle, "rgb2yuv11_U0_ap_idle");
    sc_trace(mVcdFile, rgb2yuv11_U0_start_out, "rgb2yuv11_U0_start_out");
    sc_trace(mVcdFile, rgb2yuv11_U0_start_write, "rgb2yuv11_U0_start_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_in_channels_ch1_address0, "rgb2yuv11_U0_in_channels_ch1_address0");
    sc_trace(mVcdFile, rgb2yuv11_U0_in_channels_ch1_ce0, "rgb2yuv11_U0_in_channels_ch1_ce0");
    sc_trace(mVcdFile, rgb2yuv11_U0_in_channels_ch2_address0, "rgb2yuv11_U0_in_channels_ch2_address0");
    sc_trace(mVcdFile, rgb2yuv11_U0_in_channels_ch2_ce0, "rgb2yuv11_U0_in_channels_ch2_ce0");
    sc_trace(mVcdFile, rgb2yuv11_U0_in_channels_ch3_address0, "rgb2yuv11_U0_in_channels_ch3_address0");
    sc_trace(mVcdFile, rgb2yuv11_U0_in_channels_ch3_ce0, "rgb2yuv11_U0_in_channels_ch3_ce0");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_channels_ch1_din, "rgb2yuv11_U0_out_channels_ch1_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_channels_ch1_write, "rgb2yuv11_U0_out_channels_ch1_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_channels_ch2_din, "rgb2yuv11_U0_out_channels_ch2_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_channels_ch2_write, "rgb2yuv11_U0_out_channels_ch2_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_channels_ch3_din, "rgb2yuv11_U0_out_channels_ch3_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_channels_ch3_write, "rgb2yuv11_U0_out_channels_ch3_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_width_din, "rgb2yuv11_U0_out_width_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_width_write, "rgb2yuv11_U0_out_width_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_height_din, "rgb2yuv11_U0_out_height_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_out_height_write, "rgb2yuv11_U0_out_height_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_Y_scale_out_din, "rgb2yuv11_U0_Y_scale_out_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_Y_scale_out_write, "rgb2yuv11_U0_Y_scale_out_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_U_scale_out_din, "rgb2yuv11_U0_U_scale_out_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_U_scale_out_write, "rgb2yuv11_U0_U_scale_out_write");
    sc_trace(mVcdFile, rgb2yuv11_U0_V_scale_out_din, "rgb2yuv11_U0_V_scale_out_din");
    sc_trace(mVcdFile, rgb2yuv11_U0_V_scale_out_write, "rgb2yuv11_U0_V_scale_out_write");
    sc_trace(mVcdFile, yuv_scale_U0_ap_start, "yuv_scale_U0_ap_start");
    sc_trace(mVcdFile, yuv_scale_U0_start_full_n, "yuv_scale_U0_start_full_n");
    sc_trace(mVcdFile, yuv_scale_U0_ap_ready, "yuv_scale_U0_ap_ready");
    sc_trace(mVcdFile, yuv_scale_U0_ap_done, "yuv_scale_U0_ap_done");
    sc_trace(mVcdFile, yuv_scale_U0_ap_continue, "yuv_scale_U0_ap_continue");
    sc_trace(mVcdFile, yuv_scale_U0_ap_idle, "yuv_scale_U0_ap_idle");
    sc_trace(mVcdFile, yuv_scale_U0_start_out, "yuv_scale_U0_start_out");
    sc_trace(mVcdFile, yuv_scale_U0_start_write, "yuv_scale_U0_start_write");
    sc_trace(mVcdFile, yuv_scale_U0_in_channels_ch1_read, "yuv_scale_U0_in_channels_ch1_read");
    sc_trace(mVcdFile, yuv_scale_U0_in_channels_ch2_read, "yuv_scale_U0_in_channels_ch2_read");
    sc_trace(mVcdFile, yuv_scale_U0_in_channels_ch3_read, "yuv_scale_U0_in_channels_ch3_read");
    sc_trace(mVcdFile, yuv_scale_U0_in_width_read, "yuv_scale_U0_in_width_read");
    sc_trace(mVcdFile, yuv_scale_U0_in_height_read, "yuv_scale_U0_in_height_read");
    sc_trace(mVcdFile, yuv_scale_U0_out_channels_ch1_din, "yuv_scale_U0_out_channels_ch1_din");
    sc_trace(mVcdFile, yuv_scale_U0_out_channels_ch1_write, "yuv_scale_U0_out_channels_ch1_write");
    sc_trace(mVcdFile, yuv_scale_U0_out_channels_ch2_din, "yuv_scale_U0_out_channels_ch2_din");
    sc_trace(mVcdFile, yuv_scale_U0_out_channels_ch2_write, "yuv_scale_U0_out_channels_ch2_write");
    sc_trace(mVcdFile, yuv_scale_U0_out_channels_ch3_din, "yuv_scale_U0_out_channels_ch3_din");
    sc_trace(mVcdFile, yuv_scale_U0_out_channels_ch3_write, "yuv_scale_U0_out_channels_ch3_write");
    sc_trace(mVcdFile, yuv_scale_U0_out_width_din, "yuv_scale_U0_out_width_din");
    sc_trace(mVcdFile, yuv_scale_U0_out_width_write, "yuv_scale_U0_out_width_write");
    sc_trace(mVcdFile, yuv_scale_U0_out_height_din, "yuv_scale_U0_out_height_din");
    sc_trace(mVcdFile, yuv_scale_U0_out_height_write, "yuv_scale_U0_out_height_write");
    sc_trace(mVcdFile, yuv_scale_U0_Y_scale_read, "yuv_scale_U0_Y_scale_read");
    sc_trace(mVcdFile, yuv_scale_U0_U_scale_read, "yuv_scale_U0_U_scale_read");
    sc_trace(mVcdFile, yuv_scale_U0_V_scale_read, "yuv_scale_U0_V_scale_read");
    sc_trace(mVcdFile, yuv2rgb_U0_ap_start, "yuv2rgb_U0_ap_start");
    sc_trace(mVcdFile, yuv2rgb_U0_ap_done, "yuv2rgb_U0_ap_done");
    sc_trace(mVcdFile, yuv2rgb_U0_ap_continue, "yuv2rgb_U0_ap_continue");
    sc_trace(mVcdFile, yuv2rgb_U0_ap_idle, "yuv2rgb_U0_ap_idle");
    sc_trace(mVcdFile, yuv2rgb_U0_ap_ready, "yuv2rgb_U0_ap_ready");
    sc_trace(mVcdFile, yuv2rgb_U0_in_channels_ch1_read, "yuv2rgb_U0_in_channels_ch1_read");
    sc_trace(mVcdFile, yuv2rgb_U0_in_channels_ch2_read, "yuv2rgb_U0_in_channels_ch2_read");
    sc_trace(mVcdFile, yuv2rgb_U0_in_channels_ch3_read, "yuv2rgb_U0_in_channels_ch3_read");
    sc_trace(mVcdFile, yuv2rgb_U0_in_width_read, "yuv2rgb_U0_in_width_read");
    sc_trace(mVcdFile, yuv2rgb_U0_in_height_read, "yuv2rgb_U0_in_height_read");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch1_address0, "yuv2rgb_U0_out_channels_ch1_address0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch1_ce0, "yuv2rgb_U0_out_channels_ch1_ce0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch1_we0, "yuv2rgb_U0_out_channels_ch1_we0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch1_d0, "yuv2rgb_U0_out_channels_ch1_d0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch2_address0, "yuv2rgb_U0_out_channels_ch2_address0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch2_ce0, "yuv2rgb_U0_out_channels_ch2_ce0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch2_we0, "yuv2rgb_U0_out_channels_ch2_we0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch2_d0, "yuv2rgb_U0_out_channels_ch2_d0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch3_address0, "yuv2rgb_U0_out_channels_ch3_address0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch3_ce0, "yuv2rgb_U0_out_channels_ch3_ce0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch3_we0, "yuv2rgb_U0_out_channels_ch3_we0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_channels_ch3_d0, "yuv2rgb_U0_out_channels_ch3_d0");
    sc_trace(mVcdFile, yuv2rgb_U0_out_width, "yuv2rgb_U0_out_width");
    sc_trace(mVcdFile, yuv2rgb_U0_out_width_ap_vld, "yuv2rgb_U0_out_width_ap_vld");
    sc_trace(mVcdFile, yuv2rgb_U0_out_height, "yuv2rgb_U0_out_height");
    sc_trace(mVcdFile, yuv2rgb_U0_out_height_ap_vld, "yuv2rgb_U0_out_height_ap_vld");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, p_yuv_channels_ch1_full_n, "p_yuv_channels_ch1_full_n");
    sc_trace(mVcdFile, p_yuv_channels_ch1_dout, "p_yuv_channels_ch1_dout");
    sc_trace(mVcdFile, p_yuv_channels_ch1_empty_n, "p_yuv_channels_ch1_empty_n");
    sc_trace(mVcdFile, p_yuv_channels_ch2_full_n, "p_yuv_channels_ch2_full_n");
    sc_trace(mVcdFile, p_yuv_channels_ch2_dout, "p_yuv_channels_ch2_dout");
    sc_trace(mVcdFile, p_yuv_channels_ch2_empty_n, "p_yuv_channels_ch2_empty_n");
    sc_trace(mVcdFile, p_yuv_channels_ch3_full_n, "p_yuv_channels_ch3_full_n");
    sc_trace(mVcdFile, p_yuv_channels_ch3_dout, "p_yuv_channels_ch3_dout");
    sc_trace(mVcdFile, p_yuv_channels_ch3_empty_n, "p_yuv_channels_ch3_empty_n");
    sc_trace(mVcdFile, p_yuv_width_full_n, "p_yuv_width_full_n");
    sc_trace(mVcdFile, p_yuv_width_dout, "p_yuv_width_dout");
    sc_trace(mVcdFile, p_yuv_width_empty_n, "p_yuv_width_empty_n");
    sc_trace(mVcdFile, p_yuv_height_full_n, "p_yuv_height_full_n");
    sc_trace(mVcdFile, p_yuv_height_dout, "p_yuv_height_dout");
    sc_trace(mVcdFile, p_yuv_height_empty_n, "p_yuv_height_empty_n");
    sc_trace(mVcdFile, Y_scale_channel_full_n, "Y_scale_channel_full_n");
    sc_trace(mVcdFile, Y_scale_channel_dout, "Y_scale_channel_dout");
    sc_trace(mVcdFile, Y_scale_channel_empty_n, "Y_scale_channel_empty_n");
    sc_trace(mVcdFile, U_scale_channel_full_n, "U_scale_channel_full_n");
    sc_trace(mVcdFile, U_scale_channel_dout, "U_scale_channel_dout");
    sc_trace(mVcdFile, U_scale_channel_empty_n, "U_scale_channel_empty_n");
    sc_trace(mVcdFile, V_scale_channel_full_n, "V_scale_channel_full_n");
    sc_trace(mVcdFile, V_scale_channel_dout, "V_scale_channel_dout");
    sc_trace(mVcdFile, V_scale_channel_empty_n, "V_scale_channel_empty_n");
    sc_trace(mVcdFile, p_scale_channels_ch1_full_n, "p_scale_channels_ch1_full_n");
    sc_trace(mVcdFile, p_scale_channels_ch1_dout, "p_scale_channels_ch1_dout");
    sc_trace(mVcdFile, p_scale_channels_ch1_empty_n, "p_scale_channels_ch1_empty_n");
    sc_trace(mVcdFile, p_scale_channels_ch2_full_n, "p_scale_channels_ch2_full_n");
    sc_trace(mVcdFile, p_scale_channels_ch2_dout, "p_scale_channels_ch2_dout");
    sc_trace(mVcdFile, p_scale_channels_ch2_empty_n, "p_scale_channels_ch2_empty_n");
    sc_trace(mVcdFile, p_scale_channels_ch3_full_n, "p_scale_channels_ch3_full_n");
    sc_trace(mVcdFile, p_scale_channels_ch3_dout, "p_scale_channels_ch3_dout");
    sc_trace(mVcdFile, p_scale_channels_ch3_empty_n, "p_scale_channels_ch3_empty_n");
    sc_trace(mVcdFile, p_scale_width_full_n, "p_scale_width_full_n");
    sc_trace(mVcdFile, p_scale_width_dout, "p_scale_width_dout");
    sc_trace(mVcdFile, p_scale_width_empty_n, "p_scale_width_empty_n");
    sc_trace(mVcdFile, p_scale_height_full_n, "p_scale_height_full_n");
    sc_trace(mVcdFile, p_scale_height_dout, "p_scale_height_dout");
    sc_trace(mVcdFile, p_scale_height_empty_n, "p_scale_height_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_yuv_scale_U0_din, "start_for_yuv_scale_U0_din");
    sc_trace(mVcdFile, start_for_yuv_scale_U0_full_n, "start_for_yuv_scale_U0_full_n");
    sc_trace(mVcdFile, start_for_yuv_scale_U0_dout, "start_for_yuv_scale_U0_dout");
    sc_trace(mVcdFile, start_for_yuv_scale_U0_empty_n, "start_for_yuv_scale_U0_empty_n");
    sc_trace(mVcdFile, start_for_yuv2rgb_U0_din, "start_for_yuv2rgb_U0_din");
    sc_trace(mVcdFile, start_for_yuv2rgb_U0_full_n, "start_for_yuv2rgb_U0_full_n");
    sc_trace(mVcdFile, start_for_yuv2rgb_U0_dout, "start_for_yuv2rgb_U0_dout");
    sc_trace(mVcdFile, start_for_yuv2rgb_U0_empty_n, "start_for_yuv2rgb_U0_empty_n");
    sc_trace(mVcdFile, yuv2rgb_U0_start_full_n, "yuv2rgb_U0_start_full_n");
    sc_trace(mVcdFile, yuv2rgb_U0_start_write, "yuv2rgb_U0_start_write");
#endif

    }
    mHdltvinHandle.open("yuv_filter.hdltvin.dat");
    mHdltvoutHandle.open("yuv_filter.hdltvout.dat");
}

yuv_filter::~yuv_filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete rgb2yuv11_U0;
    delete yuv_scale_U0;
    delete yuv2rgb_U0;
    delete p_yuv_channels_ch1_U;
    delete p_yuv_channels_ch2_U;
    delete p_yuv_channels_ch3_U;
    delete p_yuv_width_U;
    delete p_yuv_height_U;
    delete Y_scale_channel_U;
    delete U_scale_channel_U;
    delete V_scale_channel_U;
    delete p_scale_channels_ch1_U;
    delete p_scale_channels_ch2_U;
    delete p_scale_channels_ch3_U;
    delete p_scale_width_U;
    delete p_scale_height_U;
    delete start_for_yuv_scalbW_U;
    delete start_for_yuv2rgbmb6_U;
}

void yuv_filter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void yuv_filter::thread_ap_done() {
    ap_done = yuv2rgb_U0_ap_done.read();
}

void yuv_filter::thread_ap_idle() {
    ap_idle = (rgb2yuv11_U0_ap_idle.read() & yuv_scale_U0_ap_idle.read() & yuv2rgb_U0_ap_idle.read());
}

void yuv_filter::thread_ap_ready() {
    ap_ready = rgb2yuv11_U0_ap_ready.read();
}

void yuv_filter::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void yuv_filter::thread_ap_sync_done() {
    ap_sync_done = yuv2rgb_U0_ap_done.read();
}

void yuv_filter::thread_ap_sync_ready() {
    ap_sync_ready = rgb2yuv11_U0_ap_ready.read();
}

void yuv_filter::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 = rgb2yuv11_U0_in_channels_ch1_address0.read();
}

void yuv_filter::thread_in_channels_ch1_address1() {
    in_channels_ch1_address1 = ap_const_lv22_0;
}

void yuv_filter::thread_in_channels_ch1_ce0() {
    in_channels_ch1_ce0 = rgb2yuv11_U0_in_channels_ch1_ce0.read();
}

void yuv_filter::thread_in_channels_ch1_ce1() {
    in_channels_ch1_ce1 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch1_d0() {
    in_channels_ch1_d0 = ap_const_lv8_0;
}

void yuv_filter::thread_in_channels_ch1_d1() {
    in_channels_ch1_d1 = ap_const_lv8_0;
}

void yuv_filter::thread_in_channels_ch1_we0() {
    in_channels_ch1_we0 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch1_we1() {
    in_channels_ch1_we1 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 = rgb2yuv11_U0_in_channels_ch2_address0.read();
}

void yuv_filter::thread_in_channels_ch2_address1() {
    in_channels_ch2_address1 = ap_const_lv22_0;
}

void yuv_filter::thread_in_channels_ch2_ce0() {
    in_channels_ch2_ce0 = rgb2yuv11_U0_in_channels_ch2_ce0.read();
}

void yuv_filter::thread_in_channels_ch2_ce1() {
    in_channels_ch2_ce1 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch2_d0() {
    in_channels_ch2_d0 = ap_const_lv8_0;
}

void yuv_filter::thread_in_channels_ch2_d1() {
    in_channels_ch2_d1 = ap_const_lv8_0;
}

void yuv_filter::thread_in_channels_ch2_we0() {
    in_channels_ch2_we0 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch2_we1() {
    in_channels_ch2_we1 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 = rgb2yuv11_U0_in_channels_ch3_address0.read();
}

void yuv_filter::thread_in_channels_ch3_address1() {
    in_channels_ch3_address1 = ap_const_lv22_0;
}

void yuv_filter::thread_in_channels_ch3_ce0() {
    in_channels_ch3_ce0 = rgb2yuv11_U0_in_channels_ch3_ce0.read();
}

void yuv_filter::thread_in_channels_ch3_ce1() {
    in_channels_ch3_ce1 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch3_d0() {
    in_channels_ch3_d0 = ap_const_lv8_0;
}

void yuv_filter::thread_in_channels_ch3_d1() {
    in_channels_ch3_d1 = ap_const_lv8_0;
}

void yuv_filter::thread_in_channels_ch3_we0() {
    in_channels_ch3_we0 = ap_const_logic_0;
}

void yuv_filter::thread_in_channels_ch3_we1() {
    in_channels_ch3_we1 = ap_const_logic_0;
}

void yuv_filter::thread_out_channels_ch1_address0() {
    out_channels_ch1_address0 = yuv2rgb_U0_out_channels_ch1_address0.read();
}

void yuv_filter::thread_out_channels_ch1_address1() {
    out_channels_ch1_address1 = ap_const_lv22_0;
}

void yuv_filter::thread_out_channels_ch1_ce0() {
    out_channels_ch1_ce0 = yuv2rgb_U0_out_channels_ch1_ce0.read();
}

void yuv_filter::thread_out_channels_ch1_ce1() {
    out_channels_ch1_ce1 = ap_const_logic_0;
}

void yuv_filter::thread_out_channels_ch1_d0() {
    out_channels_ch1_d0 = yuv2rgb_U0_out_channels_ch1_d0.read();
}

void yuv_filter::thread_out_channels_ch1_d1() {
    out_channels_ch1_d1 = ap_const_lv8_0;
}

void yuv_filter::thread_out_channels_ch1_we0() {
    out_channels_ch1_we0 = yuv2rgb_U0_out_channels_ch1_we0.read();
}

void yuv_filter::thread_out_channels_ch1_we1() {
    out_channels_ch1_we1 = ap_const_logic_0;
}

void yuv_filter::thread_out_channels_ch2_address0() {
    out_channels_ch2_address0 = yuv2rgb_U0_out_channels_ch2_address0.read();
}

void yuv_filter::thread_out_channels_ch2_address1() {
    out_channels_ch2_address1 = ap_const_lv22_0;
}

void yuv_filter::thread_out_channels_ch2_ce0() {
    out_channels_ch2_ce0 = yuv2rgb_U0_out_channels_ch2_ce0.read();
}

void yuv_filter::thread_out_channels_ch2_ce1() {
    out_channels_ch2_ce1 = ap_const_logic_0;
}

void yuv_filter::thread_out_channels_ch2_d0() {
    out_channels_ch2_d0 = yuv2rgb_U0_out_channels_ch2_d0.read();
}

void yuv_filter::thread_out_channels_ch2_d1() {
    out_channels_ch2_d1 = ap_const_lv8_0;
}

void yuv_filter::thread_out_channels_ch2_we0() {
    out_channels_ch2_we0 = yuv2rgb_U0_out_channels_ch2_we0.read();
}

void yuv_filter::thread_out_channels_ch2_we1() {
    out_channels_ch2_we1 = ap_const_logic_0;
}

void yuv_filter::thread_out_channels_ch3_address0() {
    out_channels_ch3_address0 = yuv2rgb_U0_out_channels_ch3_address0.read();
}

void yuv_filter::thread_out_channels_ch3_address1() {
    out_channels_ch3_address1 = ap_const_lv22_0;
}

void yuv_filter::thread_out_channels_ch3_ce0() {
    out_channels_ch3_ce0 = yuv2rgb_U0_out_channels_ch3_ce0.read();
}

void yuv_filter::thread_out_channels_ch3_ce1() {
    out_channels_ch3_ce1 = ap_const_logic_0;
}

void yuv_filter::thread_out_channels_ch3_d0() {
    out_channels_ch3_d0 = yuv2rgb_U0_out_channels_ch3_d0.read();
}

void yuv_filter::thread_out_channels_ch3_d1() {
    out_channels_ch3_d1 = ap_const_lv8_0;
}

void yuv_filter::thread_out_channels_ch3_we0() {
    out_channels_ch3_we0 = yuv2rgb_U0_out_channels_ch3_we0.read();
}

void yuv_filter::thread_out_channels_ch3_we1() {
    out_channels_ch3_we1 = ap_const_logic_0;
}

void yuv_filter::thread_out_height() {
    out_height = yuv2rgb_U0_out_height.read();
}

void yuv_filter::thread_out_height_ap_vld() {
    out_height_ap_vld = yuv2rgb_U0_out_height_ap_vld.read();
}

void yuv_filter::thread_out_width() {
    out_width = yuv2rgb_U0_out_width.read();
}

void yuv_filter::thread_out_width_ap_vld() {
    out_width_ap_vld = yuv2rgb_U0_out_width_ap_vld.read();
}

void yuv_filter::thread_rgb2yuv11_U0_ap_continue() {
    rgb2yuv11_U0_ap_continue = ap_const_logic_1;
}

void yuv_filter::thread_rgb2yuv11_U0_ap_start() {
    rgb2yuv11_U0_ap_start = ap_start.read();
}

void yuv_filter::thread_rgb2yuv11_U0_start_full_n() {
    rgb2yuv11_U0_start_full_n = (ap_const_logic_0 | start_for_yuv_scale_U0_full_n.read());
}

void yuv_filter::thread_start_for_yuv2rgb_U0_din() {
    start_for_yuv2rgb_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void yuv_filter::thread_start_for_yuv_scale_U0_din() {
    start_for_yuv_scale_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void yuv_filter::thread_yuv2rgb_U0_ap_continue() {
    yuv2rgb_U0_ap_continue = ap_const_logic_1;
}

void yuv_filter::thread_yuv2rgb_U0_ap_start() {
    yuv2rgb_U0_ap_start = start_for_yuv2rgb_U0_empty_n.read();
}

void yuv_filter::thread_yuv2rgb_U0_start_full_n() {
    yuv2rgb_U0_start_full_n = ap_const_logic_0;
}

void yuv_filter::thread_yuv2rgb_U0_start_write() {
    yuv2rgb_U0_start_write = ap_const_logic_0;
}

void yuv_filter::thread_yuv_scale_U0_ap_continue() {
    yuv_scale_U0_ap_continue = ap_const_logic_1;
}

void yuv_filter::thread_yuv_scale_U0_ap_start() {
    yuv_scale_U0_ap_start = start_for_yuv_scale_U0_empty_n.read();
}

void yuv_filter::thread_yuv_scale_U0_start_full_n() {
    yuv_scale_U0_start_full_n = (ap_const_logic_0 | start_for_yuv2rgb_U0_full_n.read());
}

void yuv_filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvoutHandle << mComma << "{"  <<  " \"in_channels_ch1_address0\" :  \"" << in_channels_ch1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_ce0\" :  \"" << in_channels_ch1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_d0\" :  \"" << in_channels_ch1_d0.read() << "\" ";
        mHdltvinHandle << mComma << "{"  <<  " \"in_channels_ch1_q0\" :  \"" << in_channels_ch1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_we0\" :  \"" << in_channels_ch1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_address1\" :  \"" << in_channels_ch1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_ce1\" :  \"" << in_channels_ch1_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_d1\" :  \"" << in_channels_ch1_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch1_q1\" :  \"" << in_channels_ch1_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_we1\" :  \"" << in_channels_ch1_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_address0\" :  \"" << in_channels_ch2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_ce0\" :  \"" << in_channels_ch2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_d0\" :  \"" << in_channels_ch2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch2_q0\" :  \"" << in_channels_ch2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_we0\" :  \"" << in_channels_ch2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_address1\" :  \"" << in_channels_ch2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_ce1\" :  \"" << in_channels_ch2_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_d1\" :  \"" << in_channels_ch2_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch2_q1\" :  \"" << in_channels_ch2_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_we1\" :  \"" << in_channels_ch2_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_address0\" :  \"" << in_channels_ch3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_ce0\" :  \"" << in_channels_ch3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_d0\" :  \"" << in_channels_ch3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch3_q0\" :  \"" << in_channels_ch3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_we0\" :  \"" << in_channels_ch3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_address1\" :  \"" << in_channels_ch3_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_ce1\" :  \"" << in_channels_ch3_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_d1\" :  \"" << in_channels_ch3_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch3_q1\" :  \"" << in_channels_ch3_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_we1\" :  \"" << in_channels_ch3_we1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_width\" :  \"" << in_width.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_height\" :  \"" << in_height.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_address0\" :  \"" << out_channels_ch1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_ce0\" :  \"" << out_channels_ch1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_d0\" :  \"" << out_channels_ch1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_channels_ch1_q0\" :  \"" << out_channels_ch1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_we0\" :  \"" << out_channels_ch1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_address1\" :  \"" << out_channels_ch1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_ce1\" :  \"" << out_channels_ch1_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_d1\" :  \"" << out_channels_ch1_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_channels_ch1_q1\" :  \"" << out_channels_ch1_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_we1\" :  \"" << out_channels_ch1_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_address0\" :  \"" << out_channels_ch2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_ce0\" :  \"" << out_channels_ch2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_d0\" :  \"" << out_channels_ch2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_channels_ch2_q0\" :  \"" << out_channels_ch2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_we0\" :  \"" << out_channels_ch2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_address1\" :  \"" << out_channels_ch2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_ce1\" :  \"" << out_channels_ch2_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_d1\" :  \"" << out_channels_ch2_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_channels_ch2_q1\" :  \"" << out_channels_ch2_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_we1\" :  \"" << out_channels_ch2_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_address0\" :  \"" << out_channels_ch3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_ce0\" :  \"" << out_channels_ch3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_d0\" :  \"" << out_channels_ch3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_channels_ch3_q0\" :  \"" << out_channels_ch3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_we0\" :  \"" << out_channels_ch3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_address1\" :  \"" << out_channels_ch3_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_ce1\" :  \"" << out_channels_ch3_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_d1\" :  \"" << out_channels_ch3_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_channels_ch3_q1\" :  \"" << out_channels_ch3_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_we1\" :  \"" << out_channels_ch3_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_width\" :  \"" << out_width.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_height\" :  \"" << out_height.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Y_scale\" :  \"" << Y_scale.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"U_scale\" :  \"" << U_scale.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"V_scale\" :  \"" << V_scale.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_width_ap_vld\" :  \"" << out_width_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_height_ap_vld\" :  \"" << out_height_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

