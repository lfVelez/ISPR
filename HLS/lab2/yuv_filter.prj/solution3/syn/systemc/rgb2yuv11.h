// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rgb2yuv11_HH_
#define _rgb2yuv11_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yuv_filter_mul_mubkb.h"
#include "yuv_filter_mac_mucud.h"
#include "yuv_filter_mac_mudEe.h"
#include "yuv_filter_mac_mueOg.h"
#include "yuv_filter_mac_mufYi.h"

namespace ap_rtl {

struct rgb2yuv11 : public sc_module {
    // Port declarations 48
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<22> > in_channels_ch1_address0;
    sc_out< sc_logic > in_channels_ch1_ce0;
    sc_in< sc_lv<8> > in_channels_ch1_q0;
    sc_out< sc_lv<22> > in_channels_ch2_address0;
    sc_out< sc_logic > in_channels_ch2_ce0;
    sc_in< sc_lv<8> > in_channels_ch2_q0;
    sc_out< sc_lv<22> > in_channels_ch3_address0;
    sc_out< sc_logic > in_channels_ch3_ce0;
    sc_in< sc_lv<8> > in_channels_ch3_q0;
    sc_in< sc_lv<16> > in_width;
    sc_in< sc_lv<16> > in_height;
    sc_out< sc_lv<8> > out_channels_ch1_din;
    sc_in< sc_logic > out_channels_ch1_full_n;
    sc_out< sc_logic > out_channels_ch1_write;
    sc_out< sc_lv<8> > out_channels_ch2_din;
    sc_in< sc_logic > out_channels_ch2_full_n;
    sc_out< sc_logic > out_channels_ch2_write;
    sc_out< sc_lv<8> > out_channels_ch3_din;
    sc_in< sc_logic > out_channels_ch3_full_n;
    sc_out< sc_logic > out_channels_ch3_write;
    sc_out< sc_lv<16> > out_width_din;
    sc_in< sc_logic > out_width_full_n;
    sc_out< sc_logic > out_width_write;
    sc_out< sc_lv<16> > out_height_din;
    sc_in< sc_logic > out_height_full_n;
    sc_out< sc_logic > out_height_write;
    sc_in< sc_lv<8> > Y_scale;
    sc_in< sc_lv<8> > U_scale;
    sc_in< sc_lv<8> > V_scale;
    sc_out< sc_lv<8> > Y_scale_out_din;
    sc_in< sc_logic > Y_scale_out_full_n;
    sc_out< sc_logic > Y_scale_out_write;
    sc_out< sc_lv<8> > U_scale_out_din;
    sc_in< sc_logic > U_scale_out_full_n;
    sc_out< sc_logic > U_scale_out_write;
    sc_out< sc_lv<8> > V_scale_out_din;
    sc_in< sc_logic > V_scale_out_full_n;
    sc_out< sc_logic > V_scale_out_write;


    // Module declarations
    rgb2yuv11(sc_module_name name);
    SC_HAS_PROCESS(rgb2yuv11);

    ~rgb2yuv11();

    sc_trace_file* mVcdFile;

    yuv_filter_mul_mubkb<1,1,16,16,32>* yuv_filter_mul_mubkb_U1;
    yuv_filter_mac_mucud<1,1,6,8,8,13>* yuv_filter_mac_mucud_U2;
    yuv_filter_mac_mudEe<1,1,7,8,9,15>* yuv_filter_mac_mudEe_U3;
    yuv_filter_mac_mueOg<1,1,8,8,9,15>* yuv_filter_mac_mueOg_U4;
    yuv_filter_mac_mufYi<1,1,8,8,16,16>* yuv_filter_mac_mufYi_U5;
    yuv_filter_mac_mufYi<1,1,8,8,16,16>* yuv_filter_mac_mufYi_U6;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > real_start_status_reg;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > start_control_reg;
    sc_signal< sc_logic > out_channels_ch1_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_653;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter7_exitcond_flatten_reg_653;
    sc_signal< sc_logic > out_channels_ch2_blk_n;
    sc_signal< sc_logic > out_channels_ch3_blk_n;
    sc_signal< sc_logic > out_width_blk_n;
    sc_signal< sc_logic > out_height_blk_n;
    sc_signal< sc_logic > Y_scale_out_blk_n;
    sc_signal< sc_logic > U_scale_out_blk_n;
    sc_signal< sc_logic > V_scale_out_blk_n;
    sc_signal< sc_lv<32> > indvar_flatten_reg_261;
    sc_signal< sc_lv<16> > x_i_i_reg_272;
    sc_signal< sc_lv<16> > y_i_i_reg_283;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > bound_fu_594_p2;
    sc_signal< sc_lv<32> > bound_reg_648;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_302_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_flatten_reg_653;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_flatten_reg_653;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_flatten_reg_653;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter4_exitcond_flatten_reg_653;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter5_exitcond_flatten_reg_653;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter6_exitcond_flatten_reg_653;
    sc_signal< sc_lv<32> > indvar_flatten_next_fu_307_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > y_i_i_mid2_fu_324_p3;
    sc_signal< sc_lv<16> > y_i_i_mid2_reg_662;
    sc_signal< sc_lv<16> > tmp_i_i_mid2_v_fu_332_p3;
    sc_signal< sc_lv<16> > tmp_i_i_mid2_v_reg_668;
    sc_signal< sc_lv<13> > tmp_22_fu_340_p1;
    sc_signal< sc_lv<13> > tmp_22_reg_673;
    sc_signal< sc_lv<15> > tmp_23_fu_344_p1;
    sc_signal< sc_lv<15> > tmp_23_reg_678;
    sc_signal< sc_lv<23> > tmp_24_fu_371_p2;
    sc_signal< sc_lv<23> > tmp_24_reg_683;
    sc_signal< sc_lv<16> > y_fu_377_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<8> > R_reg_708;
    sc_signal< sc_lv<8> > G_reg_714;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter6_G_reg_714;
    sc_signal< sc_lv<8> > B_reg_721;
    sc_signal< sc_lv<10> > tmp_fu_400_p2;
    sc_signal< sc_lv<10> > tmp_reg_729;
    sc_signal< sc_lv<8> > tmp_50_i_i_reg_734;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter7_tmp_50_i_i_reg_734;
    sc_signal< sc_lv<16> > tmp3_fu_510_p2;
    sc_signal< sc_lv<16> > tmp3_reg_739;
    sc_signal< sc_lv<14> > tmp_61_i_i_fu_537_p2;
    sc_signal< sc_lv<14> > tmp_61_i_i_reg_744;
    sc_signal< sc_lv<15> > grp_fu_618_p3;
    sc_signal< sc_lv<15> > tmp_62_i_i_reg_749;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<8> > tmp_58_i_i_reg_754;
    sc_signal< sc_lv<8> > tmp_66_i_i_reg_759;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_lv<16> > x_i_i_phi_fu_276_p4;
    sc_signal< sc_lv<16> > y_i_i_phi_fu_287_p4;
    sc_signal< sc_lv<64> > tmp_26_cast_fu_382_p1;
    sc_signal< bool > ap_block_pp0_stage0_flag00001001;
    sc_signal< sc_lv<1> > exitcond_i_i_fu_319_p2;
    sc_signal< sc_lv<16> > x_fu_313_p2;
    sc_signal< sc_lv<23> > p_shl_cast_fu_348_p3;
    sc_signal< sc_lv<23> > p_shl1_cast_fu_355_p3;
    sc_signal< sc_lv<23> > tmp_i_i_cast_fu_368_p1;
    sc_signal< sc_lv<23> > tmp_s_fu_362_p2;
    sc_signal< sc_lv<9> > p_shl6_i_i_fu_388_p3;
    sc_signal< sc_lv<10> > p_shl6_cast_i_i_cast_fu_396_p1;
    sc_signal< sc_lv<14> > p_shl5_i_i_fu_409_p3;
    sc_signal< sc_lv<15> > p_shl4_i_i_fu_423_p3;
    sc_signal< sc_lv<15> > tmp_cast_fu_437_p1;
    sc_signal< sc_lv<15> > p_shl5_cast_i_i_fu_416_p1;
    sc_signal< sc_lv<15> > tmp_46_i_i_fu_440_p2;
    sc_signal< sc_lv<16> > p_shl4_cast_i_i_fu_430_p1;
    sc_signal< sc_lv<16> > tmp_46_cast_i_i_fu_446_p1;
    sc_signal< sc_lv<13> > grp_fu_600_p3;
    sc_signal< sc_lv<16> > tmp2_cast_fu_456_p1;
    sc_signal< sc_lv<16> > tmp1_fu_450_p2;
    sc_signal< sc_lv<16> > tmp_48_i_i_fu_459_p2;
    sc_signal< sc_lv<15> > p_shl2_i_i_fu_475_p3;
    sc_signal< sc_lv<12> > p_shl3_i_i_fu_486_p3;
    sc_signal< sc_lv<16> > p_shl2_cast_i_i_fu_482_p1;
    sc_signal< sc_lv<16> > p_shl3_cast_i_i_fu_497_p1;
    sc_signal< sc_lv<15> > grp_fu_609_p3;
    sc_signal< sc_lv<16> > tmp_53_i_i_fu_501_p2;
    sc_signal< sc_lv<16> > tmp_54_cast_i_i_fu_507_p1;
    sc_signal< sc_lv<13> > p_shl3_cast7_i_i_fu_493_p1;
    sc_signal< sc_lv<13> > p_neg_i_i_fu_516_p2;
    sc_signal< sc_lv<9> > p_shl1_i_i_fu_526_p3;
    sc_signal< sc_lv<14> > p_neg_cast_i_i_fu_522_p1;
    sc_signal< sc_lv<14> > p_shl1_cast_i_i_fu_533_p1;
    sc_signal< sc_lv<16> > grp_fu_626_p3;
    sc_signal< sc_lv<16> > tmp_62_cast_i_i_fu_558_p1;
    sc_signal< sc_lv<16> > tmp_61_cast_i_i_fu_555_p1;
    sc_signal< sc_lv<16> > grp_fu_634_p3;
    sc_signal< sc_lv<16> > bound_fu_594_p0;
    sc_signal< sc_lv<16> > bound_fu_594_p1;
    sc_signal< sc_lv<6> > grp_fu_600_p0;
    sc_signal< sc_lv<8> > grp_fu_600_p1;
    sc_signal< sc_lv<8> > grp_fu_600_p2;
    sc_signal< sc_lv<7> > grp_fu_609_p0;
    sc_signal< sc_lv<8> > grp_fu_609_p1;
    sc_signal< sc_lv<15> > tmp_40_cast14_i_i_fu_406_p1;
    sc_signal< sc_lv<9> > grp_fu_609_p2;
    sc_signal< sc_lv<8> > grp_fu_618_p0;
    sc_signal< sc_lv<8> > grp_fu_618_p1;
    sc_signal< sc_lv<9> > grp_fu_618_p2;
    sc_signal< sc_lv<8> > grp_fu_626_p0;
    sc_signal< sc_lv<8> > grp_fu_626_p1;
    sc_signal< sc_lv<16> > tmp_42_cast11_i_i_fu_543_p1;
    sc_signal< sc_lv<8> > grp_fu_634_p0;
    sc_signal< sc_lv<8> > grp_fu_634_p1;
    sc_signal< sc_lv<16> > grp_fu_634_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<32> > bound_fu_594_p00;
    sc_signal< sc_lv<32> > bound_fu_594_p10;
    sc_signal< sc_lv<13> > grp_fu_600_p10;
    sc_signal< sc_lv<13> > grp_fu_600_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state11;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_80;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<13> ap_const_lv13_19;
    static const sc_lv<15> ap_const_lv15_7FDA;
    static const sc_lv<15> ap_const_lv15_80;
    static const sc_lv<15> ap_const_lv15_7A;
    static const sc_lv<16> ap_const_lv16_FFB6;
    static const sc_lv<16> ap_const_lv16_FFA2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_U_scale_out_blk_n();
    void thread_U_scale_out_din();
    void thread_U_scale_out_write();
    void thread_V_scale_out_blk_n();
    void thread_V_scale_out_din();
    void thread_V_scale_out_write();
    void thread_Y_scale_out_blk_n();
    void thread_Y_scale_out_din();
    void thread_Y_scale_out_write();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00001001();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_594_p0();
    void thread_bound_fu_594_p00();
    void thread_bound_fu_594_p1();
    void thread_bound_fu_594_p10();
    void thread_exitcond_flatten_fu_302_p2();
    void thread_exitcond_i_i_fu_319_p2();
    void thread_grp_fu_600_p0();
    void thread_grp_fu_600_p1();
    void thread_grp_fu_600_p10();
    void thread_grp_fu_600_p2();
    void thread_grp_fu_600_p20();
    void thread_grp_fu_609_p0();
    void thread_grp_fu_609_p1();
    void thread_grp_fu_609_p2();
    void thread_grp_fu_618_p0();
    void thread_grp_fu_618_p1();
    void thread_grp_fu_618_p2();
    void thread_grp_fu_626_p0();
    void thread_grp_fu_626_p1();
    void thread_grp_fu_634_p0();
    void thread_grp_fu_634_p1();
    void thread_grp_fu_634_p2();
    void thread_in_channels_ch1_address0();
    void thread_in_channels_ch1_ce0();
    void thread_in_channels_ch2_address0();
    void thread_in_channels_ch2_ce0();
    void thread_in_channels_ch3_address0();
    void thread_in_channels_ch3_ce0();
    void thread_indvar_flatten_next_fu_307_p2();
    void thread_internal_ap_ready();
    void thread_out_channels_ch1_blk_n();
    void thread_out_channels_ch1_din();
    void thread_out_channels_ch1_write();
    void thread_out_channels_ch2_blk_n();
    void thread_out_channels_ch2_din();
    void thread_out_channels_ch2_write();
    void thread_out_channels_ch3_blk_n();
    void thread_out_channels_ch3_din();
    void thread_out_channels_ch3_write();
    void thread_out_height_blk_n();
    void thread_out_height_din();
    void thread_out_height_write();
    void thread_out_width_blk_n();
    void thread_out_width_din();
    void thread_out_width_write();
    void thread_p_neg_cast_i_i_fu_522_p1();
    void thread_p_neg_i_i_fu_516_p2();
    void thread_p_shl1_cast_fu_355_p3();
    void thread_p_shl1_cast_i_i_fu_533_p1();
    void thread_p_shl1_i_i_fu_526_p3();
    void thread_p_shl2_cast_i_i_fu_482_p1();
    void thread_p_shl2_i_i_fu_475_p3();
    void thread_p_shl3_cast7_i_i_fu_493_p1();
    void thread_p_shl3_cast_i_i_fu_497_p1();
    void thread_p_shl3_i_i_fu_486_p3();
    void thread_p_shl4_cast_i_i_fu_430_p1();
    void thread_p_shl4_i_i_fu_423_p3();
    void thread_p_shl5_cast_i_i_fu_416_p1();
    void thread_p_shl5_i_i_fu_409_p3();
    void thread_p_shl6_cast_i_i_cast_fu_396_p1();
    void thread_p_shl6_i_i_fu_388_p3();
    void thread_p_shl_cast_fu_348_p3();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_450_p2();
    void thread_tmp2_cast_fu_456_p1();
    void thread_tmp3_fu_510_p2();
    void thread_tmp_22_fu_340_p1();
    void thread_tmp_23_fu_344_p1();
    void thread_tmp_24_fu_371_p2();
    void thread_tmp_26_cast_fu_382_p1();
    void thread_tmp_40_cast14_i_i_fu_406_p1();
    void thread_tmp_42_cast11_i_i_fu_543_p1();
    void thread_tmp_46_cast_i_i_fu_446_p1();
    void thread_tmp_46_i_i_fu_440_p2();
    void thread_tmp_48_i_i_fu_459_p2();
    void thread_tmp_53_i_i_fu_501_p2();
    void thread_tmp_54_cast_i_i_fu_507_p1();
    void thread_tmp_61_cast_i_i_fu_555_p1();
    void thread_tmp_61_i_i_fu_537_p2();
    void thread_tmp_62_cast_i_i_fu_558_p1();
    void thread_tmp_cast_fu_437_p1();
    void thread_tmp_fu_400_p2();
    void thread_tmp_i_i_cast_fu_368_p1();
    void thread_tmp_i_i_mid2_v_fu_332_p3();
    void thread_tmp_s_fu_362_p2();
    void thread_x_fu_313_p2();
    void thread_x_i_i_phi_fu_276_p4();
    void thread_y_fu_377_p2();
    void thread_y_i_i_mid2_fu_324_p3();
    void thread_y_i_i_phi_fu_287_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
