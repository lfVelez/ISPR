// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _yuv2rgb_HH_
#define _yuv2rgb_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yuv_filter_mul_9shbi.h"
#include "yuv_filter_mul_mubkb.h"
#include "yuv_filter_ama_adibs.h"
#include "yuv_filter_mac_mujbC.h"
#include "yuv_filter_mac_mukbM.h"

namespace ap_rtl {

struct yuv2rgb : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > in_channels_ch1_dout;
    sc_in< sc_logic > in_channels_ch1_empty_n;
    sc_out< sc_logic > in_channels_ch1_read;
    sc_in< sc_lv<8> > in_channels_ch2_dout;
    sc_in< sc_logic > in_channels_ch2_empty_n;
    sc_out< sc_logic > in_channels_ch2_read;
    sc_in< sc_lv<8> > in_channels_ch3_dout;
    sc_in< sc_logic > in_channels_ch3_empty_n;
    sc_out< sc_logic > in_channels_ch3_read;
    sc_in< sc_lv<16> > in_width_dout;
    sc_in< sc_logic > in_width_empty_n;
    sc_out< sc_logic > in_width_read;
    sc_in< sc_lv<16> > in_height_dout;
    sc_in< sc_logic > in_height_empty_n;
    sc_out< sc_logic > in_height_read;
    sc_out< sc_lv<22> > out_channels_ch1_address0;
    sc_out< sc_logic > out_channels_ch1_ce0;
    sc_out< sc_logic > out_channels_ch1_we0;
    sc_out< sc_lv<8> > out_channels_ch1_d0;
    sc_out< sc_lv<22> > out_channels_ch2_address0;
    sc_out< sc_logic > out_channels_ch2_ce0;
    sc_out< sc_logic > out_channels_ch2_we0;
    sc_out< sc_lv<8> > out_channels_ch2_d0;
    sc_out< sc_lv<22> > out_channels_ch3_address0;
    sc_out< sc_logic > out_channels_ch3_ce0;
    sc_out< sc_logic > out_channels_ch3_we0;
    sc_out< sc_lv<8> > out_channels_ch3_d0;
    sc_out< sc_lv<16> > out_width;
    sc_out< sc_logic > out_width_ap_vld;
    sc_out< sc_lv<16> > out_height;
    sc_out< sc_logic > out_height_ap_vld;


    // Module declarations
    yuv2rgb(sc_module_name name);
    SC_HAS_PROCESS(yuv2rgb);

    ~yuv2rgb();

    sc_trace_file* mVcdFile;

    yuv_filter_mul_9shbi<1,3,9,8,17>* yuv_filter_mul_9shbi_U40;
    yuv_filter_mul_mubkb<1,1,16,16,32>* yuv_filter_mul_mubkb_x_U41;
    yuv_filter_ama_adibs<1,1,5,8,10,9,18>* yuv_filter_ama_adibs_U42;
    yuv_filter_mac_mujbC<1,1,8,8,17,17>* yuv_filter_mac_mujbC_U43;
    yuv_filter_mac_mukbM<1,1,10,8,18,18>* yuv_filter_mac_mukbM_U44;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_channels_ch1_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_620;
    sc_signal< sc_logic > in_channels_ch2_blk_n;
    sc_signal< sc_logic > in_channels_ch3_blk_n;
    sc_signal< sc_logic > in_width_blk_n;
    sc_signal< sc_logic > in_height_blk_n;
    sc_signal< sc_lv<32> > indvar_flatten_reg_202;
    sc_signal< sc_lv<16> > x_reg_213;
    sc_signal< sc_lv<16> > y_reg_224;
    sc_signal< sc_lv<16> > width_reg_602;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<16> > height_reg_608;
    sc_signal< sc_lv<32> > bound_fu_568_p2;
    sc_signal< sc_lv<32> > bound_reg_615;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_241_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter8;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_flatten_reg_620;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_flatten_reg_620;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_flatten_reg_620;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter4_exitcond_flatten_reg_620;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter5_exitcond_flatten_reg_620;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter6_exitcond_flatten_reg_620;
    sc_signal< sc_lv<32> > indvar_flatten_next_fu_246_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > y_mid2_fu_263_p3;
    sc_signal< sc_lv<16> > y_mid2_reg_629;
    sc_signal< sc_lv<16> > tmp_mid2_v_fu_271_p3;
    sc_signal< sc_lv<16> > tmp_mid2_v_reg_635;
    sc_signal< sc_lv<13> > tmp_fu_279_p1;
    sc_signal< sc_lv<13> > tmp_reg_640;
    sc_signal< sc_lv<15> > tmp_1_fu_283_p1;
    sc_signal< sc_lv<15> > tmp_1_reg_645;
    sc_signal< sc_lv<23> > tmp_s_fu_310_p2;
    sc_signal< sc_lv<23> > tmp_s_reg_650;
    sc_signal< sc_lv<23> > ap_reg_pp0_iter2_tmp_s_reg_650;
    sc_signal< sc_lv<23> > ap_reg_pp0_iter3_tmp_s_reg_650;
    sc_signal< sc_lv<23> > ap_reg_pp0_iter4_tmp_s_reg_650;
    sc_signal< sc_lv<23> > ap_reg_pp0_iter5_tmp_s_reg_650;
    sc_signal< sc_lv<23> > ap_reg_pp0_iter6_tmp_s_reg_650;
    sc_signal< sc_lv<8> > Y_reg_655;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter2_Y_reg_655;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_Y_reg_655;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter4_Y_reg_655;
    sc_signal< sc_lv<8> > U_reg_660;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter2_U_reg_660;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_U_reg_660;
    sc_signal< sc_lv<8> > E_fu_316_p2;
    sc_signal< sc_lv<8> > E_reg_665;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter2_E_reg_665;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_E_reg_665;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter4_E_reg_665;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter5_E_reg_665;
    sc_signal< sc_lv<16> > y_1_fu_322_p2;
    sc_signal< sc_lv<8> > D_fu_336_p2;
    sc_signal< sc_lv<8> > D_reg_681;
    sc_signal< sc_lv<17> > grp_fu_330_p2;
    sc_signal< sc_lv<17> > tmp_12_reg_688;
    sc_signal< sc_lv<18> > grp_fu_574_p4;
    sc_signal< sc_lv<18> > tmp_5_reg_693;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<18> > tmp_13_fu_353_p2;
    sc_signal< sc_lv<18> > tmp_13_reg_699;
    sc_signal< sc_lv<2> > tmp_14_reg_705;
    sc_signal< sc_lv<18> > tmp_17_fu_390_p2;
    sc_signal< sc_lv<18> > tmp_17_reg_710;
    sc_signal< sc_lv<19> > tmp_19_fu_400_p2;
    sc_signal< sc_lv<19> > tmp_19_reg_715;
    sc_signal< sc_lv<3> > tmp_20_reg_720;
    sc_signal< sc_lv<18> > grp_fu_594_p3;
    sc_signal< sc_lv<18> > tmp_6_reg_725;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_lv<1> > icmp_fu_428_p2;
    sc_signal< sc_lv<1> > icmp_reg_731;
    sc_signal< sc_lv<8> > G_fu_469_p3;
    sc_signal< sc_lv<8> > G_reg_737;
    sc_signal< sc_lv<8> > B_fu_517_p3;
    sc_signal< sc_lv<8> > B_reg_742;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_lv<16> > x_phi_fu_217_p4;
    sc_signal< sc_lv<16> > y_phi_fu_228_p4;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_525_p1;
    sc_signal< sc_lv<1> > exitcond_fu_258_p2;
    sc_signal< sc_lv<16> > x_1_fu_252_p2;
    sc_signal< sc_lv<23> > p_shl3_cast_fu_294_p3;
    sc_signal< sc_lv<23> > p_shl2_cast_fu_287_p3;
    sc_signal< sc_lv<23> > tmp_7_fu_301_p2;
    sc_signal< sc_lv<23> > tmp_cast_fu_307_p1;
    sc_signal< sc_lv<9> > grp_fu_330_p0;
    sc_signal< sc_lv<17> > grp_fu_586_p3;
    sc_signal< sc_lv<18> > tmp1_cast_fu_350_p1;
    sc_signal< sc_lv<17> > p_shl_fu_368_p3;
    sc_signal< sc_lv<10> > p_shl1_fu_379_p3;
    sc_signal< sc_lv<18> > p_shl_cast_fu_375_p1;
    sc_signal< sc_lv<18> > p_shl1_cast_fu_386_p1;
    sc_signal< sc_lv<19> > tmp_20_cast_fu_344_p1;
    sc_signal< sc_lv<19> > tmp_35_cast_fu_396_p1;
    sc_signal< sc_lv<2> > tmp_8_fu_419_p4;
    sc_signal< sc_lv<1> > icmp1_fu_434_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_439_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_463_p2;
    sc_signal< sc_lv<8> > p_phitmp2_fu_455_p3;
    sc_signal< sc_lv<8> > phitmp2_fu_446_p4;
    sc_signal< sc_lv<18> > tmp_18_fu_477_p2;
    sc_signal< sc_lv<1> > icmp2_fu_481_p2;
    sc_signal< sc_lv<1> > tmp_21_fu_486_p3;
    sc_signal< sc_lv<1> > tmp_22_fu_511_p2;
    sc_signal< sc_lv<8> > p_phitmp3_fu_503_p3;
    sc_signal< sc_lv<8> > phitmp3_fu_493_p4;
    sc_signal< sc_lv<1> > tmp_9_fu_531_p3;
    sc_signal< sc_lv<1> > tmp_10_fu_554_p2;
    sc_signal< sc_lv<8> > p_phitmp_fu_547_p3;
    sc_signal< sc_lv<8> > phitmp_fu_538_p4;
    sc_signal< sc_lv<16> > bound_fu_568_p0;
    sc_signal< sc_lv<16> > bound_fu_568_p1;
    sc_signal< sc_lv<5> > grp_fu_574_p0;
    sc_signal< sc_lv<8> > grp_fu_574_p1;
    sc_signal< sc_lv<10> > grp_fu_574_p2;
    sc_signal< sc_lv<9> > grp_fu_574_p3;
    sc_signal< sc_lv<8> > grp_fu_586_p0;
    sc_signal< sc_lv<10> > grp_fu_594_p0;
    sc_signal< sc_logic > grp_fu_330_ce;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<32> > bound_fu_568_p00;
    sc_signal< sc_lv<32> > bound_fu_568_p10;
    sc_signal< sc_lv<9> > grp_fu_574_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<17> ap_const_lv17_1FF30;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<9> ap_const_lv9_1F0;
    static const sc_lv<18> ap_const_lv18_12A;
    static const sc_lv<18> ap_const_lv18_80;
    static const sc_lv<16> ap_const_lv16_FF9C;
    static const sc_lv<18> ap_const_lv18_199;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_B_fu_517_p3();
    void thread_D_fu_336_p2();
    void thread_E_fu_316_p2();
    void thread_G_fu_469_p3();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter7();
    void thread_ap_block_state11_pp0_stage0_iter8();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_block_state9_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_568_p0();
    void thread_bound_fu_568_p00();
    void thread_bound_fu_568_p1();
    void thread_bound_fu_568_p10();
    void thread_exitcond_flatten_fu_241_p2();
    void thread_exitcond_fu_258_p2();
    void thread_grp_fu_330_ce();
    void thread_grp_fu_330_p0();
    void thread_grp_fu_574_p0();
    void thread_grp_fu_574_p1();
    void thread_grp_fu_574_p10();
    void thread_grp_fu_574_p2();
    void thread_grp_fu_574_p3();
    void thread_grp_fu_586_p0();
    void thread_grp_fu_594_p0();
    void thread_icmp1_fu_434_p2();
    void thread_icmp2_fu_481_p2();
    void thread_icmp_fu_428_p2();
    void thread_in_channels_ch1_blk_n();
    void thread_in_channels_ch1_read();
    void thread_in_channels_ch2_blk_n();
    void thread_in_channels_ch2_read();
    void thread_in_channels_ch3_blk_n();
    void thread_in_channels_ch3_read();
    void thread_in_height_blk_n();
    void thread_in_height_read();
    void thread_in_width_blk_n();
    void thread_in_width_read();
    void thread_indvar_flatten_next_fu_246_p2();
    void thread_out_channels_ch1_address0();
    void thread_out_channels_ch1_ce0();
    void thread_out_channels_ch1_d0();
    void thread_out_channels_ch1_we0();
    void thread_out_channels_ch2_address0();
    void thread_out_channels_ch2_ce0();
    void thread_out_channels_ch2_d0();
    void thread_out_channels_ch2_we0();
    void thread_out_channels_ch3_address0();
    void thread_out_channels_ch3_ce0();
    void thread_out_channels_ch3_d0();
    void thread_out_channels_ch3_we0();
    void thread_out_height();
    void thread_out_height_ap_vld();
    void thread_out_width();
    void thread_out_width_ap_vld();
    void thread_p_phitmp2_fu_455_p3();
    void thread_p_phitmp3_fu_503_p3();
    void thread_p_phitmp_fu_547_p3();
    void thread_p_shl1_cast_fu_386_p1();
    void thread_p_shl1_fu_379_p3();
    void thread_p_shl2_cast_fu_287_p3();
    void thread_p_shl3_cast_fu_294_p3();
    void thread_p_shl_cast_fu_375_p1();
    void thread_p_shl_fu_368_p3();
    void thread_phitmp2_fu_446_p4();
    void thread_phitmp3_fu_493_p4();
    void thread_phitmp_fu_538_p4();
    void thread_tmp1_cast_fu_350_p1();
    void thread_tmp_10_fu_554_p2();
    void thread_tmp_13_fu_353_p2();
    void thread_tmp_15_cast_fu_525_p1();
    void thread_tmp_15_fu_439_p3();
    void thread_tmp_16_fu_463_p2();
    void thread_tmp_17_fu_390_p2();
    void thread_tmp_18_fu_477_p2();
    void thread_tmp_19_fu_400_p2();
    void thread_tmp_1_fu_283_p1();
    void thread_tmp_20_cast_fu_344_p1();
    void thread_tmp_21_fu_486_p3();
    void thread_tmp_22_fu_511_p2();
    void thread_tmp_35_cast_fu_396_p1();
    void thread_tmp_7_fu_301_p2();
    void thread_tmp_8_fu_419_p4();
    void thread_tmp_9_fu_531_p3();
    void thread_tmp_cast_fu_307_p1();
    void thread_tmp_fu_279_p1();
    void thread_tmp_mid2_v_fu_271_p3();
    void thread_tmp_s_fu_310_p2();
    void thread_x_1_fu_252_p2();
    void thread_x_phi_fu_217_p4();
    void thread_y_1_fu_322_p2();
    void thread_y_mid2_fu_263_p3();
    void thread_y_phi_fu_228_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
