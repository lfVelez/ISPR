// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _yuv_filter_HH_
#define _yuv_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "rgb2yuv11.h"
#include "yuv_scale.h"
#include "yuv2rgb.h"
#include "fifo_w8_d2_A.h"
#include "fifo_w16_d2_A.h"
#include "start_for_yuv_scalbW.h"
#include "start_for_yuv2rgbmb6.h"

namespace ap_rtl {

struct yuv_filter : public sc_module {
    // Port declarations 75
    sc_out< sc_lv<22> > in_channels_ch1_address0;
    sc_out< sc_logic > in_channels_ch1_ce0;
    sc_out< sc_lv<8> > in_channels_ch1_d0;
    sc_in< sc_lv<8> > in_channels_ch1_q0;
    sc_out< sc_logic > in_channels_ch1_we0;
    sc_out< sc_lv<22> > in_channels_ch1_address1;
    sc_out< sc_logic > in_channels_ch1_ce1;
    sc_out< sc_lv<8> > in_channels_ch1_d1;
    sc_in< sc_lv<8> > in_channels_ch1_q1;
    sc_out< sc_logic > in_channels_ch1_we1;
    sc_out< sc_lv<22> > in_channels_ch2_address0;
    sc_out< sc_logic > in_channels_ch2_ce0;
    sc_out< sc_lv<8> > in_channels_ch2_d0;
    sc_in< sc_lv<8> > in_channels_ch2_q0;
    sc_out< sc_logic > in_channels_ch2_we0;
    sc_out< sc_lv<22> > in_channels_ch2_address1;
    sc_out< sc_logic > in_channels_ch2_ce1;
    sc_out< sc_lv<8> > in_channels_ch2_d1;
    sc_in< sc_lv<8> > in_channels_ch2_q1;
    sc_out< sc_logic > in_channels_ch2_we1;
    sc_out< sc_lv<22> > in_channels_ch3_address0;
    sc_out< sc_logic > in_channels_ch3_ce0;
    sc_out< sc_lv<8> > in_channels_ch3_d0;
    sc_in< sc_lv<8> > in_channels_ch3_q0;
    sc_out< sc_logic > in_channels_ch3_we0;
    sc_out< sc_lv<22> > in_channels_ch3_address1;
    sc_out< sc_logic > in_channels_ch3_ce1;
    sc_out< sc_lv<8> > in_channels_ch3_d1;
    sc_in< sc_lv<8> > in_channels_ch3_q1;
    sc_out< sc_logic > in_channels_ch3_we1;
    sc_in< sc_lv<16> > in_width;
    sc_in< sc_lv<16> > in_height;
    sc_out< sc_lv<22> > out_channels_ch1_address0;
    sc_out< sc_logic > out_channels_ch1_ce0;
    sc_out< sc_lv<8> > out_channels_ch1_d0;
    sc_in< sc_lv<8> > out_channels_ch1_q0;
    sc_out< sc_logic > out_channels_ch1_we0;
    sc_out< sc_lv<22> > out_channels_ch1_address1;
    sc_out< sc_logic > out_channels_ch1_ce1;
    sc_out< sc_lv<8> > out_channels_ch1_d1;
    sc_in< sc_lv<8> > out_channels_ch1_q1;
    sc_out< sc_logic > out_channels_ch1_we1;
    sc_out< sc_lv<22> > out_channels_ch2_address0;
    sc_out< sc_logic > out_channels_ch2_ce0;
    sc_out< sc_lv<8> > out_channels_ch2_d0;
    sc_in< sc_lv<8> > out_channels_ch2_q0;
    sc_out< sc_logic > out_channels_ch2_we0;
    sc_out< sc_lv<22> > out_channels_ch2_address1;
    sc_out< sc_logic > out_channels_ch2_ce1;
    sc_out< sc_lv<8> > out_channels_ch2_d1;
    sc_in< sc_lv<8> > out_channels_ch2_q1;
    sc_out< sc_logic > out_channels_ch2_we1;
    sc_out< sc_lv<22> > out_channels_ch3_address0;
    sc_out< sc_logic > out_channels_ch3_ce0;
    sc_out< sc_lv<8> > out_channels_ch3_d0;
    sc_in< sc_lv<8> > out_channels_ch3_q0;
    sc_out< sc_logic > out_channels_ch3_we0;
    sc_out< sc_lv<22> > out_channels_ch3_address1;
    sc_out< sc_logic > out_channels_ch3_ce1;
    sc_out< sc_lv<8> > out_channels_ch3_d1;
    sc_in< sc_lv<8> > out_channels_ch3_q1;
    sc_out< sc_logic > out_channels_ch3_we1;
    sc_out< sc_lv<16> > out_width;
    sc_out< sc_lv<16> > out_height;
    sc_in< sc_lv<8> > Y_scale;
    sc_in< sc_lv<8> > U_scale;
    sc_in< sc_lv<8> > V_scale;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > out_width_ap_vld;
    sc_out< sc_logic > out_height_ap_vld;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    yuv_filter(sc_module_name name);
    SC_HAS_PROCESS(yuv_filter);

    ~yuv_filter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    rgb2yuv11* rgb2yuv11_U0;
    yuv_scale* yuv_scale_U0;
    yuv2rgb* yuv2rgb_U0;
    fifo_w8_d2_A* p_yuv_channels_ch1_U;
    fifo_w8_d2_A* p_yuv_channels_ch2_U;
    fifo_w8_d2_A* p_yuv_channels_ch3_U;
    fifo_w16_d2_A* p_yuv_width_U;
    fifo_w16_d2_A* p_yuv_height_U;
    fifo_w8_d2_A* Y_scale_channel_U;
    fifo_w8_d2_A* U_scale_channel_U;
    fifo_w8_d2_A* V_scale_channel_U;
    fifo_w8_d2_A* p_scale_channels_ch1_U;
    fifo_w8_d2_A* p_scale_channels_ch2_U;
    fifo_w8_d2_A* p_scale_channels_ch3_U;
    fifo_w16_d2_A* p_scale_width_U;
    fifo_w16_d2_A* p_scale_height_U;
    start_for_yuv_scalbW* start_for_yuv_scalbW_U;
    start_for_yuv2rgbmb6* start_for_yuv2rgbmb6_U;
    sc_signal< sc_logic > rgb2yuv11_U0_ap_start;
    sc_signal< sc_logic > rgb2yuv11_U0_start_full_n;
    sc_signal< sc_logic > rgb2yuv11_U0_ap_ready;
    sc_signal< sc_logic > rgb2yuv11_U0_ap_done;
    sc_signal< sc_logic > rgb2yuv11_U0_ap_continue;
    sc_signal< sc_logic > rgb2yuv11_U0_ap_idle;
    sc_signal< sc_logic > rgb2yuv11_U0_start_out;
    sc_signal< sc_logic > rgb2yuv11_U0_start_write;
    sc_signal< sc_lv<22> > rgb2yuv11_U0_in_channels_ch1_address0;
    sc_signal< sc_logic > rgb2yuv11_U0_in_channels_ch1_ce0;
    sc_signal< sc_lv<22> > rgb2yuv11_U0_in_channels_ch2_address0;
    sc_signal< sc_logic > rgb2yuv11_U0_in_channels_ch2_ce0;
    sc_signal< sc_lv<22> > rgb2yuv11_U0_in_channels_ch3_address0;
    sc_signal< sc_logic > rgb2yuv11_U0_in_channels_ch3_ce0;
    sc_signal< sc_lv<8> > rgb2yuv11_U0_out_channels_ch1_din;
    sc_signal< sc_logic > rgb2yuv11_U0_out_channels_ch1_write;
    sc_signal< sc_lv<8> > rgb2yuv11_U0_out_channels_ch2_din;
    sc_signal< sc_logic > rgb2yuv11_U0_out_channels_ch2_write;
    sc_signal< sc_lv<8> > rgb2yuv11_U0_out_channels_ch3_din;
    sc_signal< sc_logic > rgb2yuv11_U0_out_channels_ch3_write;
    sc_signal< sc_lv<16> > rgb2yuv11_U0_out_width_din;
    sc_signal< sc_logic > rgb2yuv11_U0_out_width_write;
    sc_signal< sc_lv<16> > rgb2yuv11_U0_out_height_din;
    sc_signal< sc_logic > rgb2yuv11_U0_out_height_write;
    sc_signal< sc_lv<8> > rgb2yuv11_U0_Y_scale_out_din;
    sc_signal< sc_logic > rgb2yuv11_U0_Y_scale_out_write;
    sc_signal< sc_lv<8> > rgb2yuv11_U0_U_scale_out_din;
    sc_signal< sc_logic > rgb2yuv11_U0_U_scale_out_write;
    sc_signal< sc_lv<8> > rgb2yuv11_U0_V_scale_out_din;
    sc_signal< sc_logic > rgb2yuv11_U0_V_scale_out_write;
    sc_signal< sc_logic > yuv_scale_U0_ap_start;
    sc_signal< sc_logic > yuv_scale_U0_start_full_n;
    sc_signal< sc_logic > yuv_scale_U0_ap_ready;
    sc_signal< sc_logic > yuv_scale_U0_ap_done;
    sc_signal< sc_logic > yuv_scale_U0_ap_continue;
    sc_signal< sc_logic > yuv_scale_U0_ap_idle;
    sc_signal< sc_logic > yuv_scale_U0_start_out;
    sc_signal< sc_logic > yuv_scale_U0_start_write;
    sc_signal< sc_logic > yuv_scale_U0_in_channels_ch1_read;
    sc_signal< sc_logic > yuv_scale_U0_in_channels_ch2_read;
    sc_signal< sc_logic > yuv_scale_U0_in_channels_ch3_read;
    sc_signal< sc_logic > yuv_scale_U0_in_width_read;
    sc_signal< sc_logic > yuv_scale_U0_in_height_read;
    sc_signal< sc_lv<8> > yuv_scale_U0_out_channels_ch1_din;
    sc_signal< sc_logic > yuv_scale_U0_out_channels_ch1_write;
    sc_signal< sc_lv<8> > yuv_scale_U0_out_channels_ch2_din;
    sc_signal< sc_logic > yuv_scale_U0_out_channels_ch2_write;
    sc_signal< sc_lv<8> > yuv_scale_U0_out_channels_ch3_din;
    sc_signal< sc_logic > yuv_scale_U0_out_channels_ch3_write;
    sc_signal< sc_lv<16> > yuv_scale_U0_out_width_din;
    sc_signal< sc_logic > yuv_scale_U0_out_width_write;
    sc_signal< sc_lv<16> > yuv_scale_U0_out_height_din;
    sc_signal< sc_logic > yuv_scale_U0_out_height_write;
    sc_signal< sc_logic > yuv_scale_U0_Y_scale_read;
    sc_signal< sc_logic > yuv_scale_U0_U_scale_read;
    sc_signal< sc_logic > yuv_scale_U0_V_scale_read;
    sc_signal< sc_logic > yuv2rgb_U0_ap_start;
    sc_signal< sc_logic > yuv2rgb_U0_ap_done;
    sc_signal< sc_logic > yuv2rgb_U0_ap_continue;
    sc_signal< sc_logic > yuv2rgb_U0_ap_idle;
    sc_signal< sc_logic > yuv2rgb_U0_ap_ready;
    sc_signal< sc_logic > yuv2rgb_U0_in_channels_ch1_read;
    sc_signal< sc_logic > yuv2rgb_U0_in_channels_ch2_read;
    sc_signal< sc_logic > yuv2rgb_U0_in_channels_ch3_read;
    sc_signal< sc_logic > yuv2rgb_U0_in_width_read;
    sc_signal< sc_logic > yuv2rgb_U0_in_height_read;
    sc_signal< sc_lv<22> > yuv2rgb_U0_out_channels_ch1_address0;
    sc_signal< sc_logic > yuv2rgb_U0_out_channels_ch1_ce0;
    sc_signal< sc_logic > yuv2rgb_U0_out_channels_ch1_we0;
    sc_signal< sc_lv<8> > yuv2rgb_U0_out_channels_ch1_d0;
    sc_signal< sc_lv<22> > yuv2rgb_U0_out_channels_ch2_address0;
    sc_signal< sc_logic > yuv2rgb_U0_out_channels_ch2_ce0;
    sc_signal< sc_logic > yuv2rgb_U0_out_channels_ch2_we0;
    sc_signal< sc_lv<8> > yuv2rgb_U0_out_channels_ch2_d0;
    sc_signal< sc_lv<22> > yuv2rgb_U0_out_channels_ch3_address0;
    sc_signal< sc_logic > yuv2rgb_U0_out_channels_ch3_ce0;
    sc_signal< sc_logic > yuv2rgb_U0_out_channels_ch3_we0;
    sc_signal< sc_lv<8> > yuv2rgb_U0_out_channels_ch3_d0;
    sc_signal< sc_lv<16> > yuv2rgb_U0_out_width;
    sc_signal< sc_logic > yuv2rgb_U0_out_width_ap_vld;
    sc_signal< sc_lv<16> > yuv2rgb_U0_out_height;
    sc_signal< sc_logic > yuv2rgb_U0_out_height_ap_vld;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > p_yuv_channels_ch1_full_n;
    sc_signal< sc_lv<8> > p_yuv_channels_ch1_dout;
    sc_signal< sc_logic > p_yuv_channels_ch1_empty_n;
    sc_signal< sc_logic > p_yuv_channels_ch2_full_n;
    sc_signal< sc_lv<8> > p_yuv_channels_ch2_dout;
    sc_signal< sc_logic > p_yuv_channels_ch2_empty_n;
    sc_signal< sc_logic > p_yuv_channels_ch3_full_n;
    sc_signal< sc_lv<8> > p_yuv_channels_ch3_dout;
    sc_signal< sc_logic > p_yuv_channels_ch3_empty_n;
    sc_signal< sc_logic > p_yuv_width_full_n;
    sc_signal< sc_lv<16> > p_yuv_width_dout;
    sc_signal< sc_logic > p_yuv_width_empty_n;
    sc_signal< sc_logic > p_yuv_height_full_n;
    sc_signal< sc_lv<16> > p_yuv_height_dout;
    sc_signal< sc_logic > p_yuv_height_empty_n;
    sc_signal< sc_logic > Y_scale_channel_full_n;
    sc_signal< sc_lv<8> > Y_scale_channel_dout;
    sc_signal< sc_logic > Y_scale_channel_empty_n;
    sc_signal< sc_logic > U_scale_channel_full_n;
    sc_signal< sc_lv<8> > U_scale_channel_dout;
    sc_signal< sc_logic > U_scale_channel_empty_n;
    sc_signal< sc_logic > V_scale_channel_full_n;
    sc_signal< sc_lv<8> > V_scale_channel_dout;
    sc_signal< sc_logic > V_scale_channel_empty_n;
    sc_signal< sc_logic > p_scale_channels_ch1_full_n;
    sc_signal< sc_lv<8> > p_scale_channels_ch1_dout;
    sc_signal< sc_logic > p_scale_channels_ch1_empty_n;
    sc_signal< sc_logic > p_scale_channels_ch2_full_n;
    sc_signal< sc_lv<8> > p_scale_channels_ch2_dout;
    sc_signal< sc_logic > p_scale_channels_ch2_empty_n;
    sc_signal< sc_logic > p_scale_channels_ch3_full_n;
    sc_signal< sc_lv<8> > p_scale_channels_ch3_dout;
    sc_signal< sc_logic > p_scale_channels_ch3_empty_n;
    sc_signal< sc_logic > p_scale_width_full_n;
    sc_signal< sc_lv<16> > p_scale_width_dout;
    sc_signal< sc_logic > p_scale_width_empty_n;
    sc_signal< sc_logic > p_scale_height_full_n;
    sc_signal< sc_lv<16> > p_scale_height_dout;
    sc_signal< sc_logic > p_scale_height_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_yuv_scale_U0_din;
    sc_signal< sc_logic > start_for_yuv_scale_U0_full_n;
    sc_signal< sc_lv<1> > start_for_yuv_scale_U0_dout;
    sc_signal< sc_logic > start_for_yuv_scale_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_yuv2rgb_U0_din;
    sc_signal< sc_logic > start_for_yuv2rgb_U0_full_n;
    sc_signal< sc_lv<1> > start_for_yuv2rgb_U0_dout;
    sc_signal< sc_logic > start_for_yuv2rgb_U0_empty_n;
    sc_signal< sc_logic > yuv2rgb_U0_start_full_n;
    sc_signal< sc_logic > yuv2rgb_U0_start_write;
    static const sc_lv<22> ap_const_lv22_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_in_channels_ch1_address0();
    void thread_in_channels_ch1_address1();
    void thread_in_channels_ch1_ce0();
    void thread_in_channels_ch1_ce1();
    void thread_in_channels_ch1_d0();
    void thread_in_channels_ch1_d1();
    void thread_in_channels_ch1_we0();
    void thread_in_channels_ch1_we1();
    void thread_in_channels_ch2_address0();
    void thread_in_channels_ch2_address1();
    void thread_in_channels_ch2_ce0();
    void thread_in_channels_ch2_ce1();
    void thread_in_channels_ch2_d0();
    void thread_in_channels_ch2_d1();
    void thread_in_channels_ch2_we0();
    void thread_in_channels_ch2_we1();
    void thread_in_channels_ch3_address0();
    void thread_in_channels_ch3_address1();
    void thread_in_channels_ch3_ce0();
    void thread_in_channels_ch3_ce1();
    void thread_in_channels_ch3_d0();
    void thread_in_channels_ch3_d1();
    void thread_in_channels_ch3_we0();
    void thread_in_channels_ch3_we1();
    void thread_out_channels_ch1_address0();
    void thread_out_channels_ch1_address1();
    void thread_out_channels_ch1_ce0();
    void thread_out_channels_ch1_ce1();
    void thread_out_channels_ch1_d0();
    void thread_out_channels_ch1_d1();
    void thread_out_channels_ch1_we0();
    void thread_out_channels_ch1_we1();
    void thread_out_channels_ch2_address0();
    void thread_out_channels_ch2_address1();
    void thread_out_channels_ch2_ce0();
    void thread_out_channels_ch2_ce1();
    void thread_out_channels_ch2_d0();
    void thread_out_channels_ch2_d1();
    void thread_out_channels_ch2_we0();
    void thread_out_channels_ch2_we1();
    void thread_out_channels_ch3_address0();
    void thread_out_channels_ch3_address1();
    void thread_out_channels_ch3_ce0();
    void thread_out_channels_ch3_ce1();
    void thread_out_channels_ch3_d0();
    void thread_out_channels_ch3_d1();
    void thread_out_channels_ch3_we0();
    void thread_out_channels_ch3_we1();
    void thread_out_height();
    void thread_out_height_ap_vld();
    void thread_out_width();
    void thread_out_width_ap_vld();
    void thread_rgb2yuv11_U0_ap_continue();
    void thread_rgb2yuv11_U0_ap_start();
    void thread_rgb2yuv11_U0_start_full_n();
    void thread_start_for_yuv2rgb_U0_din();
    void thread_start_for_yuv_scale_U0_din();
    void thread_yuv2rgb_U0_ap_continue();
    void thread_yuv2rgb_U0_ap_start();
    void thread_yuv2rgb_U0_start_full_n();
    void thread_yuv2rgb_U0_start_write();
    void thread_yuv_scale_U0_ap_continue();
    void thread_yuv_scale_U0_ap_start();
    void thread_yuv_scale_U0_start_full_n();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
