// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "yuv_filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic yuv_filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic yuv_filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> yuv_filter::ap_ST_fsm_state1 = "1";
const sc_lv<13> yuv_filter::ap_ST_fsm_state2 = "10";
const sc_lv<13> yuv_filter::ap_ST_fsm_state3 = "100";
const sc_lv<13> yuv_filter::ap_ST_fsm_state4 = "1000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state5 = "10000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state6 = "100000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> yuv_filter::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> yuv_filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> yuv_filter::ap_const_lv32_1 = "1";
const sc_lv<32> yuv_filter::ap_const_lv32_2 = "10";
const sc_lv<1> yuv_filter::ap_const_lv1_0 = "0";
const sc_lv<32> yuv_filter::ap_const_lv32_3 = "11";
const sc_lv<32> yuv_filter::ap_const_lv32_6 = "110";
const sc_lv<32> yuv_filter::ap_const_lv32_7 = "111";
const sc_lv<32> yuv_filter::ap_const_lv32_9 = "1001";
const sc_lv<32> yuv_filter::ap_const_lv32_A = "1010";
const sc_lv<16> yuv_filter::ap_const_lv16_0 = "0000000000000000";
const sc_lv<1> yuv_filter::ap_const_lv1_1 = "1";
const sc_lv<32> yuv_filter::ap_const_lv32_B = "1011";
const sc_lv<32> yuv_filter::ap_const_lv32_C = "1100";
const sc_lv<32> yuv_filter::ap_const_lv32_4 = "100";
const sc_lv<32> yuv_filter::ap_const_lv32_5 = "101";
const sc_lv<16> yuv_filter::ap_const_lv16_1 = "1";
const sc_lv<10> yuv_filter::ap_const_lv10_0 = "0000000000";
const sc_lv<8> yuv_filter::ap_const_lv8_0 = "00000000";
const sc_lv<32> yuv_filter::ap_const_lv32_E = "1110";
const bool yuv_filter::ap_const_boolean_1 = true;

yuv_filter::yuv_filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_yuv_channels_ch1_U = new yuv_filter_p_yuv_kbM("p_yuv_channels_ch1_U");
    p_yuv_channels_ch1_U->clk(ap_clk);
    p_yuv_channels_ch1_U->reset(ap_rst);
    p_yuv_channels_ch1_U->address0(p_yuv_channels_ch1_address0);
    p_yuv_channels_ch1_U->ce0(p_yuv_channels_ch1_ce0);
    p_yuv_channels_ch1_U->we0(p_yuv_channels_ch1_we0);
    p_yuv_channels_ch1_U->d0(grp_rgb2yuv_fu_244_out_channels_ch1_d0);
    p_yuv_channels_ch1_U->q0(p_yuv_channels_ch1_q0);
    p_yuv_channels_ch2_U = new yuv_filter_p_yuv_kbM("p_yuv_channels_ch2_U");
    p_yuv_channels_ch2_U->clk(ap_clk);
    p_yuv_channels_ch2_U->reset(ap_rst);
    p_yuv_channels_ch2_U->address0(p_yuv_channels_ch2_address0);
    p_yuv_channels_ch2_U->ce0(p_yuv_channels_ch2_ce0);
    p_yuv_channels_ch2_U->we0(p_yuv_channels_ch2_we0);
    p_yuv_channels_ch2_U->d0(grp_rgb2yuv_fu_244_out_channels_ch2_d0);
    p_yuv_channels_ch2_U->q0(p_yuv_channels_ch2_q0);
    p_yuv_channels_ch3_U = new yuv_filter_p_yuv_kbM("p_yuv_channels_ch3_U");
    p_yuv_channels_ch3_U->clk(ap_clk);
    p_yuv_channels_ch3_U->reset(ap_rst);
    p_yuv_channels_ch3_U->address0(p_yuv_channels_ch3_address0);
    p_yuv_channels_ch3_U->ce0(p_yuv_channels_ch3_ce0);
    p_yuv_channels_ch3_U->we0(p_yuv_channels_ch3_we0);
    p_yuv_channels_ch3_U->d0(grp_rgb2yuv_fu_244_out_channels_ch3_d0);
    p_yuv_channels_ch3_U->q0(p_yuv_channels_ch3_q0);
    p_scale_channels_ch1_U = new yuv_filter_p_yuv_kbM("p_scale_channels_ch1_U");
    p_scale_channels_ch1_U->clk(ap_clk);
    p_scale_channels_ch1_U->reset(ap_rst);
    p_scale_channels_ch1_U->address0(p_scale_channels_ch1_address0);
    p_scale_channels_ch1_U->ce0(p_scale_channels_ch1_ce0);
    p_scale_channels_ch1_U->we0(p_scale_channels_ch1_we0);
    p_scale_channels_ch1_U->d0(tmp_10_i_reg_541);
    p_scale_channels_ch1_U->q0(p_scale_channels_ch1_q0);
    p_scale_channels_ch2_U = new yuv_filter_p_yuv_kbM("p_scale_channels_ch2_U");
    p_scale_channels_ch2_U->clk(ap_clk);
    p_scale_channels_ch2_U->reset(ap_rst);
    p_scale_channels_ch2_U->address0(p_scale_channels_ch2_address0);
    p_scale_channels_ch2_U->ce0(p_scale_channels_ch2_ce0);
    p_scale_channels_ch2_U->we0(p_scale_channels_ch2_we0);
    p_scale_channels_ch2_U->d0(tmp_11_i_reg_546);
    p_scale_channels_ch2_U->q0(p_scale_channels_ch2_q0);
    p_scale_channels_ch3_U = new yuv_filter_p_yuv_kbM("p_scale_channels_ch3_U");
    p_scale_channels_ch3_U->clk(ap_clk);
    p_scale_channels_ch3_U->reset(ap_rst);
    p_scale_channels_ch3_U->address0(p_scale_channels_ch3_address0);
    p_scale_channels_ch3_U->ce0(p_scale_channels_ch3_ce0);
    p_scale_channels_ch3_U->we0(p_scale_channels_ch3_we0);
    p_scale_channels_ch3_U->d0(tmp_12_i_reg_551);
    p_scale_channels_ch3_U->q0(p_scale_channels_ch3_q0);
    grp_rgb2yuv_fu_244 = new rgb2yuv("grp_rgb2yuv_fu_244");
    grp_rgb2yuv_fu_244->ap_clk(ap_clk);
    grp_rgb2yuv_fu_244->ap_rst(ap_rst);
    grp_rgb2yuv_fu_244->ap_start(grp_rgb2yuv_fu_244_ap_start);
    grp_rgb2yuv_fu_244->ap_done(grp_rgb2yuv_fu_244_ap_done);
    grp_rgb2yuv_fu_244->ap_idle(grp_rgb2yuv_fu_244_ap_idle);
    grp_rgb2yuv_fu_244->ap_ready(grp_rgb2yuv_fu_244_ap_ready);
    grp_rgb2yuv_fu_244->in_channels_ch1_address0(grp_rgb2yuv_fu_244_in_channels_ch1_address0);
    grp_rgb2yuv_fu_244->in_channels_ch1_ce0(grp_rgb2yuv_fu_244_in_channels_ch1_ce0);
    grp_rgb2yuv_fu_244->in_channels_ch1_q0(in_channels_ch1_q0);
    grp_rgb2yuv_fu_244->in_channels_ch2_address0(grp_rgb2yuv_fu_244_in_channels_ch2_address0);
    grp_rgb2yuv_fu_244->in_channels_ch2_ce0(grp_rgb2yuv_fu_244_in_channels_ch2_ce0);
    grp_rgb2yuv_fu_244->in_channels_ch2_q0(in_channels_ch2_q0);
    grp_rgb2yuv_fu_244->in_channels_ch3_address0(grp_rgb2yuv_fu_244_in_channels_ch3_address0);
    grp_rgb2yuv_fu_244->in_channels_ch3_ce0(grp_rgb2yuv_fu_244_in_channels_ch3_ce0);
    grp_rgb2yuv_fu_244->in_channels_ch3_q0(in_channels_ch3_q0);
    grp_rgb2yuv_fu_244->in_width_read(in_width);
    grp_rgb2yuv_fu_244->in_height_read(in_height);
    grp_rgb2yuv_fu_244->out_channels_ch1_address0(grp_rgb2yuv_fu_244_out_channels_ch1_address0);
    grp_rgb2yuv_fu_244->out_channels_ch1_ce0(grp_rgb2yuv_fu_244_out_channels_ch1_ce0);
    grp_rgb2yuv_fu_244->out_channels_ch1_we0(grp_rgb2yuv_fu_244_out_channels_ch1_we0);
    grp_rgb2yuv_fu_244->out_channels_ch1_d0(grp_rgb2yuv_fu_244_out_channels_ch1_d0);
    grp_rgb2yuv_fu_244->out_channels_ch2_address0(grp_rgb2yuv_fu_244_out_channels_ch2_address0);
    grp_rgb2yuv_fu_244->out_channels_ch2_ce0(grp_rgb2yuv_fu_244_out_channels_ch2_ce0);
    grp_rgb2yuv_fu_244->out_channels_ch2_we0(grp_rgb2yuv_fu_244_out_channels_ch2_we0);
    grp_rgb2yuv_fu_244->out_channels_ch2_d0(grp_rgb2yuv_fu_244_out_channels_ch2_d0);
    grp_rgb2yuv_fu_244->out_channels_ch3_address0(grp_rgb2yuv_fu_244_out_channels_ch3_address0);
    grp_rgb2yuv_fu_244->out_channels_ch3_ce0(grp_rgb2yuv_fu_244_out_channels_ch3_ce0);
    grp_rgb2yuv_fu_244->out_channels_ch3_we0(grp_rgb2yuv_fu_244_out_channels_ch3_we0);
    grp_rgb2yuv_fu_244->out_channels_ch3_d0(grp_rgb2yuv_fu_244_out_channels_ch3_d0);
    grp_rgb2yuv_fu_244->ap_return_0(grp_rgb2yuv_fu_244_ap_return_0);
    grp_rgb2yuv_fu_244->ap_return_1(grp_rgb2yuv_fu_244_ap_return_1);
    grp_yuv2rgb_fu_264 = new yuv2rgb("grp_yuv2rgb_fu_264");
    grp_yuv2rgb_fu_264->ap_clk(ap_clk);
    grp_yuv2rgb_fu_264->ap_rst(ap_rst);
    grp_yuv2rgb_fu_264->ap_start(grp_yuv2rgb_fu_264_ap_start);
    grp_yuv2rgb_fu_264->ap_done(grp_yuv2rgb_fu_264_ap_done);
    grp_yuv2rgb_fu_264->ap_idle(grp_yuv2rgb_fu_264_ap_idle);
    grp_yuv2rgb_fu_264->ap_ready(grp_yuv2rgb_fu_264_ap_ready);
    grp_yuv2rgb_fu_264->in_channels_ch1_address0(grp_yuv2rgb_fu_264_in_channels_ch1_address0);
    grp_yuv2rgb_fu_264->in_channels_ch1_ce0(grp_yuv2rgb_fu_264_in_channels_ch1_ce0);
    grp_yuv2rgb_fu_264->in_channels_ch1_q0(p_scale_channels_ch1_q0);
    grp_yuv2rgb_fu_264->in_channels_ch2_address0(grp_yuv2rgb_fu_264_in_channels_ch2_address0);
    grp_yuv2rgb_fu_264->in_channels_ch2_ce0(grp_yuv2rgb_fu_264_in_channels_ch2_ce0);
    grp_yuv2rgb_fu_264->in_channels_ch2_q0(p_scale_channels_ch2_q0);
    grp_yuv2rgb_fu_264->in_channels_ch3_address0(grp_yuv2rgb_fu_264_in_channels_ch3_address0);
    grp_yuv2rgb_fu_264->in_channels_ch3_ce0(grp_yuv2rgb_fu_264_in_channels_ch3_ce0);
    grp_yuv2rgb_fu_264->in_channels_ch3_q0(p_scale_channels_ch3_q0);
    grp_yuv2rgb_fu_264->in_width_read(p_yuv_width_reg_441);
    grp_yuv2rgb_fu_264->in_height_read(p_yuv_height_reg_447);
    grp_yuv2rgb_fu_264->out_channels_ch1_address0(grp_yuv2rgb_fu_264_out_channels_ch1_address0);
    grp_yuv2rgb_fu_264->out_channels_ch1_ce0(grp_yuv2rgb_fu_264_out_channels_ch1_ce0);
    grp_yuv2rgb_fu_264->out_channels_ch1_we0(grp_yuv2rgb_fu_264_out_channels_ch1_we0);
    grp_yuv2rgb_fu_264->out_channels_ch1_d0(grp_yuv2rgb_fu_264_out_channels_ch1_d0);
    grp_yuv2rgb_fu_264->out_channels_ch2_address0(grp_yuv2rgb_fu_264_out_channels_ch2_address0);
    grp_yuv2rgb_fu_264->out_channels_ch2_ce0(grp_yuv2rgb_fu_264_out_channels_ch2_ce0);
    grp_yuv2rgb_fu_264->out_channels_ch2_we0(grp_yuv2rgb_fu_264_out_channels_ch2_we0);
    grp_yuv2rgb_fu_264->out_channels_ch2_d0(grp_yuv2rgb_fu_264_out_channels_ch2_d0);
    grp_yuv2rgb_fu_264->out_channels_ch3_address0(grp_yuv2rgb_fu_264_out_channels_ch3_address0);
    grp_yuv2rgb_fu_264->out_channels_ch3_ce0(grp_yuv2rgb_fu_264_out_channels_ch3_ce0);
    grp_yuv2rgb_fu_264->out_channels_ch3_we0(grp_yuv2rgb_fu_264_out_channels_ch3_we0);
    grp_yuv2rgb_fu_264->out_channels_ch3_d0(grp_yuv2rgb_fu_264_out_channels_ch3_d0);
    grp_yuv2rgb_fu_264->ap_return_0(grp_yuv2rgb_fu_264_ap_return_0);
    grp_yuv2rgb_fu_264->ap_return_1(grp_yuv2rgb_fu_264_ap_return_1);
    yuv_filter_mul_8nqcK_U26 = new yuv_filter_mul_8nqcK<1,3,8,8,15>("yuv_filter_mul_8nqcK_U26");
    yuv_filter_mul_8nqcK_U26->clk(ap_clk);
    yuv_filter_mul_8nqcK_U26->reset(ap_rst);
    yuv_filter_mul_8nqcK_U26->din0(grp_fu_370_p0);
    yuv_filter_mul_8nqcK_U26->din1(grp_fu_370_p1);
    yuv_filter_mul_8nqcK_U26->ce(ap_var_for_const0);
    yuv_filter_mul_8nqcK_U26->dout(grp_fu_370_p2);
    yuv_filter_mul_8nqcK_U27 = new yuv_filter_mul_8nqcK<1,3,8,8,15>("yuv_filter_mul_8nqcK_U27");
    yuv_filter_mul_8nqcK_U27->clk(ap_clk);
    yuv_filter_mul_8nqcK_U27->reset(ap_rst);
    yuv_filter_mul_8nqcK_U27->din0(grp_fu_378_p0);
    yuv_filter_mul_8nqcK_U27->din1(grp_fu_378_p1);
    yuv_filter_mul_8nqcK_U27->ce(ap_var_for_const0);
    yuv_filter_mul_8nqcK_U27->dout(grp_fu_378_p2);
    yuv_filter_mul_8nqcK_U28 = new yuv_filter_mul_8nqcK<1,3,8,8,15>("yuv_filter_mul_8nqcK_U28");
    yuv_filter_mul_8nqcK_U28->clk(ap_clk);
    yuv_filter_mul_8nqcK_U28->reset(ap_rst);
    yuv_filter_mul_8nqcK_U28->din0(grp_fu_386_p0);
    yuv_filter_mul_8nqcK_U28->din1(grp_fu_386_p1);
    yuv_filter_mul_8nqcK_U28->ce(ap_var_for_const0);
    yuv_filter_mul_8nqcK_U28->dout(grp_fu_386_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_yuv2rgb_fu_264_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_yuv2rgb_fu_264_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_exitcond1_i_fu_299_p2);
    sensitive << ( p_yuv_width_reg_441 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( x_i_reg_222 );

    SC_METHOD(thread_exitcond_i_fu_340_p2);
    sensitive << ( p_yuv_height_reg_447 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_i_reg_233 );

    SC_METHOD(thread_grp_fu_370_p0);
    sensitive << ( tmp_i_cast_reg_453 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_370_p1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_fu_370_p10 );

    SC_METHOD(thread_grp_fu_370_p10);
    sensitive << ( Y_reg_511 );

    SC_METHOD(thread_grp_fu_378_p0);
    sensitive << ( tmp_1_i_cast_reg_458 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_378_p1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_fu_378_p10 );

    SC_METHOD(thread_grp_fu_378_p10);
    sensitive << ( U_reg_516 );

    SC_METHOD(thread_grp_fu_386_p0);
    sensitive << ( tmp_2_i_cast_reg_463 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_386_p1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_fu_386_p10 );

    SC_METHOD(thread_grp_fu_386_p10);
    sensitive << ( V_reg_521 );

    SC_METHOD(thread_grp_rgb2yuv_fu_244_ap_start);
    sensitive << ( ap_reg_grp_rgb2yuv_fu_244_ap_start );

    SC_METHOD(thread_grp_yuv2rgb_fu_264_ap_start);
    sensitive << ( ap_reg_grp_yuv2rgb_fu_264_ap_start );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_in_channels_ch1_address0 );

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_in_channels_ch1_ce0 );

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_in_channels_ch2_address0 );

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_in_channels_ch2_ce0 );

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_in_channels_ch3_address0 );

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_in_channels_ch3_ce0 );

    SC_METHOD(thread_out_channels_ch1_address0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch1_address0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch1_ce0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch1_ce0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch1_d0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch1_d0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch1_we0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch1_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch2_address0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch2_address0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch2_ce0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch2_ce0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch2_d0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch2_d0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch2_we0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch2_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch3_address0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch3_address0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch3_ce0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch3_ce0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch3_d0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch3_d0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_channels_ch3_we0);
    sensitive << ( grp_yuv2rgb_fu_264_out_channels_ch3_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_height);
    sensitive << ( grp_yuv2rgb_fu_264_ap_done );
    sensitive << ( grp_yuv2rgb_fu_264_ap_return_1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_height_ap_vld);
    sensitive << ( grp_yuv2rgb_fu_264_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_width);
    sensitive << ( grp_yuv2rgb_fu_264_ap_done );
    sensitive << ( grp_yuv2rgb_fu_264_ap_return_0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_out_width_ap_vld);
    sensitive << ( grp_yuv2rgb_fu_264_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_scale_channels_ch1_address0);
    sensitive << ( tmp_3_cast_reg_489 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_yuv2rgb_fu_264_in_channels_ch1_address0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_scale_channels_ch1_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_yuv2rgb_fu_264_in_channels_ch1_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_scale_channels_ch1_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_p_scale_channels_ch2_address0);
    sensitive << ( tmp_3_cast_reg_489 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_yuv2rgb_fu_264_in_channels_ch2_address0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_scale_channels_ch2_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_yuv2rgb_fu_264_in_channels_ch2_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_scale_channels_ch2_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_p_scale_channels_ch3_address0);
    sensitive << ( tmp_3_cast_reg_489 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_yuv2rgb_fu_264_in_channels_ch3_address0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_scale_channels_ch3_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_yuv2rgb_fu_264_in_channels_ch3_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_scale_channels_ch3_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_p_shl3_cast_fu_326_p3);
    sensitive << ( tmp_1_fu_322_p1 );

    SC_METHOD(thread_p_shl_cast_fu_314_p3);
    sensitive << ( tmp_fu_310_p1 );

    SC_METHOD(thread_p_yuv_channels_ch1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_cast_fu_360_p1 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch1_address0 );

    SC_METHOD(thread_p_yuv_channels_ch1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch1_ce0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_yuv_channels_ch1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch1_we0 );

    SC_METHOD(thread_p_yuv_channels_ch2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_cast_fu_360_p1 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch2_address0 );

    SC_METHOD(thread_p_yuv_channels_ch2_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch2_ce0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_yuv_channels_ch2_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch2_we0 );

    SC_METHOD(thread_p_yuv_channels_ch3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_cast_fu_360_p1 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch3_address0 );

    SC_METHOD(thread_p_yuv_channels_ch3_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch3_ce0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_yuv_channels_ch3_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_out_channels_ch3_we0 );

    SC_METHOD(thread_tmp_1_fu_322_p1);
    sensitive << ( x_i_reg_222 );

    SC_METHOD(thread_tmp_1_i_cast_fu_291_p1);
    sensitive << ( U_scale );

    SC_METHOD(thread_tmp_2_fu_334_p2);
    sensitive << ( p_shl_cast_fu_314_p3 );
    sensitive << ( p_shl3_cast_fu_326_p3 );

    SC_METHOD(thread_tmp_2_i_cast_fu_295_p1);
    sensitive << ( V_scale );

    SC_METHOD(thread_tmp_3_cast_fu_360_p1);
    sensitive << ( tmp_3_fu_355_p2 );

    SC_METHOD(thread_tmp_3_fu_355_p2);
    sensitive << ( tmp_2_reg_476 );
    sensitive << ( tmp_5_i_cast_fu_351_p1 );

    SC_METHOD(thread_tmp_5_i_cast_fu_351_p1);
    sensitive << ( y_i_reg_233 );

    SC_METHOD(thread_tmp_fu_310_p1);
    sensitive << ( x_i_reg_222 );

    SC_METHOD(thread_tmp_i_cast_fu_287_p1);
    sensitive << ( Y_scale );

    SC_METHOD(thread_x_fu_304_p2);
    sensitive << ( x_i_reg_222 );

    SC_METHOD(thread_y_fu_345_p2);
    sensitive << ( y_i_reg_233 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_rgb2yuv_fu_244_ap_done );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_i_fu_299_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i_fu_340_p2 );
    sensitive << ( grp_yuv2rgb_fu_264_ap_done );
    sensitive << ( ap_CS_fsm_state13 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000001";
    ap_reg_grp_rgb2yuv_fu_244_ap_start = SC_LOGIC_0;
    ap_reg_grp_yuv2rgb_fu_264_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "yuv_filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_width, "(port)in_width");
    sc_trace(mVcdFile, in_height, "(port)in_height");
    sc_trace(mVcdFile, out_channels_ch1_address0, "(port)out_channels_ch1_address0");
    sc_trace(mVcdFile, out_channels_ch1_ce0, "(port)out_channels_ch1_ce0");
    sc_trace(mVcdFile, out_channels_ch1_we0, "(port)out_channels_ch1_we0");
    sc_trace(mVcdFile, out_channels_ch1_d0, "(port)out_channels_ch1_d0");
    sc_trace(mVcdFile, out_channels_ch2_address0, "(port)out_channels_ch2_address0");
    sc_trace(mVcdFile, out_channels_ch2_ce0, "(port)out_channels_ch2_ce0");
    sc_trace(mVcdFile, out_channels_ch2_we0, "(port)out_channels_ch2_we0");
    sc_trace(mVcdFile, out_channels_ch2_d0, "(port)out_channels_ch2_d0");
    sc_trace(mVcdFile, out_channels_ch3_address0, "(port)out_channels_ch3_address0");
    sc_trace(mVcdFile, out_channels_ch3_ce0, "(port)out_channels_ch3_ce0");
    sc_trace(mVcdFile, out_channels_ch3_we0, "(port)out_channels_ch3_we0");
    sc_trace(mVcdFile, out_channels_ch3_d0, "(port)out_channels_ch3_d0");
    sc_trace(mVcdFile, out_width, "(port)out_width");
    sc_trace(mVcdFile, out_width_ap_vld, "(port)out_width_ap_vld");
    sc_trace(mVcdFile, out_height, "(port)out_height");
    sc_trace(mVcdFile, out_height_ap_vld, "(port)out_height_ap_vld");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_yuv_width_reg_441, "p_yuv_width_reg_441");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_ap_done, "grp_rgb2yuv_fu_244_ap_done");
    sc_trace(mVcdFile, p_yuv_height_reg_447, "p_yuv_height_reg_447");
    sc_trace(mVcdFile, tmp_i_cast_fu_287_p1, "tmp_i_cast_fu_287_p1");
    sc_trace(mVcdFile, tmp_i_cast_reg_453, "tmp_i_cast_reg_453");
    sc_trace(mVcdFile, tmp_1_i_cast_fu_291_p1, "tmp_1_i_cast_fu_291_p1");
    sc_trace(mVcdFile, tmp_1_i_cast_reg_458, "tmp_1_i_cast_reg_458");
    sc_trace(mVcdFile, tmp_2_i_cast_fu_295_p1, "tmp_2_i_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp_2_i_cast_reg_463, "tmp_2_i_cast_reg_463");
    sc_trace(mVcdFile, x_fu_304_p2, "x_fu_304_p2");
    sc_trace(mVcdFile, x_reg_471, "x_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_2_fu_334_p2, "tmp_2_fu_334_p2");
    sc_trace(mVcdFile, tmp_2_reg_476, "tmp_2_reg_476");
    sc_trace(mVcdFile, exitcond1_i_fu_299_p2, "exitcond1_i_fu_299_p2");
    sc_trace(mVcdFile, y_fu_345_p2, "y_fu_345_p2");
    sc_trace(mVcdFile, y_reg_484, "y_reg_484");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_3_cast_fu_360_p1, "tmp_3_cast_fu_360_p1");
    sc_trace(mVcdFile, tmp_3_cast_reg_489, "tmp_3_cast_reg_489");
    sc_trace(mVcdFile, exitcond_i_fu_340_p2, "exitcond_i_fu_340_p2");
    sc_trace(mVcdFile, p_yuv_channels_ch1_q0, "p_yuv_channels_ch1_q0");
    sc_trace(mVcdFile, Y_reg_511, "Y_reg_511");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, p_yuv_channels_ch2_q0, "p_yuv_channels_ch2_q0");
    sc_trace(mVcdFile, U_reg_516, "U_reg_516");
    sc_trace(mVcdFile, p_yuv_channels_ch3_q0, "p_yuv_channels_ch3_q0");
    sc_trace(mVcdFile, V_reg_521, "V_reg_521");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_10_i_reg_541, "tmp_10_i_reg_541");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_11_i_reg_546, "tmp_11_i_reg_546");
    sc_trace(mVcdFile, tmp_12_i_reg_551, "tmp_12_i_reg_551");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, p_yuv_channels_ch1_address0, "p_yuv_channels_ch1_address0");
    sc_trace(mVcdFile, p_yuv_channels_ch1_ce0, "p_yuv_channels_ch1_ce0");
    sc_trace(mVcdFile, p_yuv_channels_ch1_we0, "p_yuv_channels_ch1_we0");
    sc_trace(mVcdFile, p_yuv_channels_ch2_address0, "p_yuv_channels_ch2_address0");
    sc_trace(mVcdFile, p_yuv_channels_ch2_ce0, "p_yuv_channels_ch2_ce0");
    sc_trace(mVcdFile, p_yuv_channels_ch2_we0, "p_yuv_channels_ch2_we0");
    sc_trace(mVcdFile, p_yuv_channels_ch3_address0, "p_yuv_channels_ch3_address0");
    sc_trace(mVcdFile, p_yuv_channels_ch3_ce0, "p_yuv_channels_ch3_ce0");
    sc_trace(mVcdFile, p_yuv_channels_ch3_we0, "p_yuv_channels_ch3_we0");
    sc_trace(mVcdFile, p_scale_channels_ch1_address0, "p_scale_channels_ch1_address0");
    sc_trace(mVcdFile, p_scale_channels_ch1_ce0, "p_scale_channels_ch1_ce0");
    sc_trace(mVcdFile, p_scale_channels_ch1_we0, "p_scale_channels_ch1_we0");
    sc_trace(mVcdFile, p_scale_channels_ch1_q0, "p_scale_channels_ch1_q0");
    sc_trace(mVcdFile, p_scale_channels_ch2_address0, "p_scale_channels_ch2_address0");
    sc_trace(mVcdFile, p_scale_channels_ch2_ce0, "p_scale_channels_ch2_ce0");
    sc_trace(mVcdFile, p_scale_channels_ch2_we0, "p_scale_channels_ch2_we0");
    sc_trace(mVcdFile, p_scale_channels_ch2_q0, "p_scale_channels_ch2_q0");
    sc_trace(mVcdFile, p_scale_channels_ch3_address0, "p_scale_channels_ch3_address0");
    sc_trace(mVcdFile, p_scale_channels_ch3_ce0, "p_scale_channels_ch3_ce0");
    sc_trace(mVcdFile, p_scale_channels_ch3_we0, "p_scale_channels_ch3_we0");
    sc_trace(mVcdFile, p_scale_channels_ch3_q0, "p_scale_channels_ch3_q0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_ap_start, "grp_rgb2yuv_fu_244_ap_start");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_ap_idle, "grp_rgb2yuv_fu_244_ap_idle");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_ap_ready, "grp_rgb2yuv_fu_244_ap_ready");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_in_channels_ch1_address0, "grp_rgb2yuv_fu_244_in_channels_ch1_address0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_in_channels_ch1_ce0, "grp_rgb2yuv_fu_244_in_channels_ch1_ce0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_in_channels_ch2_address0, "grp_rgb2yuv_fu_244_in_channels_ch2_address0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_in_channels_ch2_ce0, "grp_rgb2yuv_fu_244_in_channels_ch2_ce0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_in_channels_ch3_address0, "grp_rgb2yuv_fu_244_in_channels_ch3_address0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_in_channels_ch3_ce0, "grp_rgb2yuv_fu_244_in_channels_ch3_ce0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch1_address0, "grp_rgb2yuv_fu_244_out_channels_ch1_address0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch1_ce0, "grp_rgb2yuv_fu_244_out_channels_ch1_ce0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch1_we0, "grp_rgb2yuv_fu_244_out_channels_ch1_we0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch1_d0, "grp_rgb2yuv_fu_244_out_channels_ch1_d0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch2_address0, "grp_rgb2yuv_fu_244_out_channels_ch2_address0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch2_ce0, "grp_rgb2yuv_fu_244_out_channels_ch2_ce0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch2_we0, "grp_rgb2yuv_fu_244_out_channels_ch2_we0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch2_d0, "grp_rgb2yuv_fu_244_out_channels_ch2_d0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch3_address0, "grp_rgb2yuv_fu_244_out_channels_ch3_address0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch3_ce0, "grp_rgb2yuv_fu_244_out_channels_ch3_ce0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch3_we0, "grp_rgb2yuv_fu_244_out_channels_ch3_we0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_out_channels_ch3_d0, "grp_rgb2yuv_fu_244_out_channels_ch3_d0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_ap_return_0, "grp_rgb2yuv_fu_244_ap_return_0");
    sc_trace(mVcdFile, grp_rgb2yuv_fu_244_ap_return_1, "grp_rgb2yuv_fu_244_ap_return_1");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_ap_start, "grp_yuv2rgb_fu_264_ap_start");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_ap_done, "grp_yuv2rgb_fu_264_ap_done");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_ap_idle, "grp_yuv2rgb_fu_264_ap_idle");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_ap_ready, "grp_yuv2rgb_fu_264_ap_ready");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_in_channels_ch1_address0, "grp_yuv2rgb_fu_264_in_channels_ch1_address0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_in_channels_ch1_ce0, "grp_yuv2rgb_fu_264_in_channels_ch1_ce0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_in_channels_ch2_address0, "grp_yuv2rgb_fu_264_in_channels_ch2_address0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_in_channels_ch2_ce0, "grp_yuv2rgb_fu_264_in_channels_ch2_ce0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_in_channels_ch3_address0, "grp_yuv2rgb_fu_264_in_channels_ch3_address0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_in_channels_ch3_ce0, "grp_yuv2rgb_fu_264_in_channels_ch3_ce0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch1_address0, "grp_yuv2rgb_fu_264_out_channels_ch1_address0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch1_ce0, "grp_yuv2rgb_fu_264_out_channels_ch1_ce0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch1_we0, "grp_yuv2rgb_fu_264_out_channels_ch1_we0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch1_d0, "grp_yuv2rgb_fu_264_out_channels_ch1_d0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch2_address0, "grp_yuv2rgb_fu_264_out_channels_ch2_address0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch2_ce0, "grp_yuv2rgb_fu_264_out_channels_ch2_ce0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch2_we0, "grp_yuv2rgb_fu_264_out_channels_ch2_we0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch2_d0, "grp_yuv2rgb_fu_264_out_channels_ch2_d0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch3_address0, "grp_yuv2rgb_fu_264_out_channels_ch3_address0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch3_ce0, "grp_yuv2rgb_fu_264_out_channels_ch3_ce0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch3_we0, "grp_yuv2rgb_fu_264_out_channels_ch3_we0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_out_channels_ch3_d0, "grp_yuv2rgb_fu_264_out_channels_ch3_d0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_ap_return_0, "grp_yuv2rgb_fu_264_ap_return_0");
    sc_trace(mVcdFile, grp_yuv2rgb_fu_264_ap_return_1, "grp_yuv2rgb_fu_264_ap_return_1");
    sc_trace(mVcdFile, x_i_reg_222, "x_i_reg_222");
    sc_trace(mVcdFile, y_i_reg_233, "y_i_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_reg_grp_rgb2yuv_fu_244_ap_start, "ap_reg_grp_rgb2yuv_fu_244_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_yuv2rgb_fu_264_ap_start, "ap_reg_grp_yuv2rgb_fu_264_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_fu_310_p1, "tmp_fu_310_p1");
    sc_trace(mVcdFile, tmp_1_fu_322_p1, "tmp_1_fu_322_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_314_p3, "p_shl_cast_fu_314_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_326_p3, "p_shl3_cast_fu_326_p3");
    sc_trace(mVcdFile, tmp_5_i_cast_fu_351_p1, "tmp_5_i_cast_fu_351_p1");
    sc_trace(mVcdFile, tmp_3_fu_355_p2, "tmp_3_fu_355_p2");
    sc_trace(mVcdFile, grp_fu_370_p0, "grp_fu_370_p0");
    sc_trace(mVcdFile, grp_fu_370_p1, "grp_fu_370_p1");
    sc_trace(mVcdFile, grp_fu_378_p0, "grp_fu_378_p0");
    sc_trace(mVcdFile, grp_fu_378_p1, "grp_fu_378_p1");
    sc_trace(mVcdFile, grp_fu_386_p0, "grp_fu_386_p0");
    sc_trace(mVcdFile, grp_fu_386_p1, "grp_fu_386_p1");
    sc_trace(mVcdFile, grp_fu_370_p2, "grp_fu_370_p2");
    sc_trace(mVcdFile, grp_fu_378_p2, "grp_fu_378_p2");
    sc_trace(mVcdFile, grp_fu_386_p2, "grp_fu_386_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_370_p10, "grp_fu_370_p10");
    sc_trace(mVcdFile, grp_fu_378_p10, "grp_fu_378_p10");
    sc_trace(mVcdFile, grp_fu_386_p10, "grp_fu_386_p10");
#endif

    }
    mHdltvinHandle.open("yuv_filter.hdltvin.dat");
    mHdltvoutHandle.open("yuv_filter.hdltvout.dat");
}

yuv_filter::~yuv_filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete p_yuv_channels_ch1_U;
    delete p_yuv_channels_ch2_U;
    delete p_yuv_channels_ch3_U;
    delete p_scale_channels_ch1_U;
    delete p_scale_channels_ch2_U;
    delete p_scale_channels_ch3_U;
    delete grp_rgb2yuv_fu_244;
    delete grp_yuv2rgb_fu_264;
    delete yuv_filter_mul_8nqcK_U26;
    delete yuv_filter_mul_8nqcK_U27;
    delete yuv_filter_mul_8nqcK_U28;
}

void yuv_filter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void yuv_filter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_rgb2yuv_fu_244_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_reg_grp_rgb2yuv_fu_244_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_rgb2yuv_fu_244_ap_ready.read())) {
            ap_reg_grp_rgb2yuv_fu_244_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_yuv2rgb_fu_264_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(exitcond1_i_fu_299_p2.read(), ap_const_lv1_1))) {
            ap_reg_grp_yuv2rgb_fu_264_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_yuv2rgb_fu_264_ap_ready.read())) {
            ap_reg_grp_yuv2rgb_fu_264_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_340_p2.read(), ap_const_lv1_1))) {
        x_i_reg_222 = x_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(grp_rgb2yuv_fu_244_ap_done.read(), ap_const_logic_1))) {
        x_i_reg_222 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        y_i_reg_233 = y_reg_484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond1_i_fu_299_p2.read(), ap_const_lv1_0))) {
        y_i_reg_233 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        U_reg_516 = p_yuv_channels_ch2_q0.read();
        V_reg_521 = p_yuv_channels_ch3_q0.read();
        Y_reg_511 = p_yuv_channels_ch1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_rgb2yuv_fu_244_ap_done.read(), ap_const_logic_1))) {
        p_yuv_height_reg_447 = grp_rgb2yuv_fu_244_ap_return_1.read();
        p_yuv_width_reg_441 = grp_rgb2yuv_fu_244_ap_return_0.read();
        tmp_1_i_cast_reg_458 = tmp_1_i_cast_fu_291_p1.read();
        tmp_2_i_cast_reg_463 = tmp_2_i_cast_fu_295_p1.read();
        tmp_i_cast_reg_453 = tmp_i_cast_fu_287_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_10_i_reg_541 = grp_fu_370_p2.read().range(14, 7);
        tmp_11_i_reg_546 = grp_fu_378_p2.read().range(14, 7);
        tmp_12_i_reg_551 = grp_fu_386_p2.read().range(14, 7);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_299_p2.read(), ap_const_lv1_0))) {
        tmp_2_reg_476 = tmp_2_fu_334_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_340_p2.read()))) {
        tmp_3_cast_reg_489 = tmp_3_cast_fu_360_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_reg_471 = x_fu_304_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_reg_484 = y_fu_345_p2.read();
    }
}

void yuv_filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void yuv_filter::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void yuv_filter::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void yuv_filter::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void yuv_filter::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void yuv_filter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void yuv_filter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void yuv_filter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void yuv_filter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void yuv_filter::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void yuv_filter::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void yuv_filter::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void yuv_filter::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(grp_yuv2rgb_fu_264_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void yuv_filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void yuv_filter::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(grp_yuv2rgb_fu_264_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void yuv_filter::thread_exitcond1_i_fu_299_p2() {
    exitcond1_i_fu_299_p2 = (!x_i_reg_222.read().is_01() || !p_yuv_width_reg_441.read().is_01())? sc_lv<1>(): sc_lv<1>(x_i_reg_222.read() == p_yuv_width_reg_441.read());
}

void yuv_filter::thread_exitcond_i_fu_340_p2() {
    exitcond_i_fu_340_p2 = (!y_i_reg_233.read().is_01() || !p_yuv_height_reg_447.read().is_01())? sc_lv<1>(): sc_lv<1>(y_i_reg_233.read() == p_yuv_height_reg_447.read());
}

void yuv_filter::thread_grp_fu_370_p0() {
    grp_fu_370_p0 =  (sc_lv<8>) (tmp_i_cast_reg_453.read());
}

void yuv_filter::thread_grp_fu_370_p1() {
    grp_fu_370_p1 =  (sc_lv<8>) (grp_fu_370_p10.read());
}

void yuv_filter::thread_grp_fu_370_p10() {
    grp_fu_370_p10 = esl_zext<15,8>(Y_reg_511.read());
}

void yuv_filter::thread_grp_fu_378_p0() {
    grp_fu_378_p0 =  (sc_lv<8>) (tmp_1_i_cast_reg_458.read());
}

void yuv_filter::thread_grp_fu_378_p1() {
    grp_fu_378_p1 =  (sc_lv<8>) (grp_fu_378_p10.read());
}

void yuv_filter::thread_grp_fu_378_p10() {
    grp_fu_378_p10 = esl_zext<15,8>(U_reg_516.read());
}

void yuv_filter::thread_grp_fu_386_p0() {
    grp_fu_386_p0 =  (sc_lv<8>) (tmp_2_i_cast_reg_463.read());
}

void yuv_filter::thread_grp_fu_386_p1() {
    grp_fu_386_p1 =  (sc_lv<8>) (grp_fu_386_p10.read());
}

void yuv_filter::thread_grp_fu_386_p10() {
    grp_fu_386_p10 = esl_zext<15,8>(V_reg_521.read());
}

void yuv_filter::thread_grp_rgb2yuv_fu_244_ap_start() {
    grp_rgb2yuv_fu_244_ap_start = ap_reg_grp_rgb2yuv_fu_244_ap_start.read();
}

void yuv_filter::thread_grp_yuv2rgb_fu_264_ap_start() {
    grp_yuv2rgb_fu_264_ap_start = ap_reg_grp_yuv2rgb_fu_264_ap_start.read();
}

void yuv_filter::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 = grp_rgb2yuv_fu_244_in_channels_ch1_address0.read();
}

void yuv_filter::thread_in_channels_ch1_ce0() {
    in_channels_ch1_ce0 = grp_rgb2yuv_fu_244_in_channels_ch1_ce0.read();
}

void yuv_filter::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 = grp_rgb2yuv_fu_244_in_channels_ch2_address0.read();
}

void yuv_filter::thread_in_channels_ch2_ce0() {
    in_channels_ch2_ce0 = grp_rgb2yuv_fu_244_in_channels_ch2_ce0.read();
}

void yuv_filter::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 = grp_rgb2yuv_fu_244_in_channels_ch3_address0.read();
}

void yuv_filter::thread_in_channels_ch3_ce0() {
    in_channels_ch3_ce0 = grp_rgb2yuv_fu_244_in_channels_ch3_ce0.read();
}

void yuv_filter::thread_out_channels_ch1_address0() {
    out_channels_ch1_address0 = grp_yuv2rgb_fu_264_out_channels_ch1_address0.read();
}

void yuv_filter::thread_out_channels_ch1_ce0() {
    out_channels_ch1_ce0 = grp_yuv2rgb_fu_264_out_channels_ch1_ce0.read();
}

void yuv_filter::thread_out_channels_ch1_d0() {
    out_channels_ch1_d0 = grp_yuv2rgb_fu_264_out_channels_ch1_d0.read();
}

void yuv_filter::thread_out_channels_ch1_we0() {
    out_channels_ch1_we0 = grp_yuv2rgb_fu_264_out_channels_ch1_we0.read();
}

void yuv_filter::thread_out_channels_ch2_address0() {
    out_channels_ch2_address0 = grp_yuv2rgb_fu_264_out_channels_ch2_address0.read();
}

void yuv_filter::thread_out_channels_ch2_ce0() {
    out_channels_ch2_ce0 = grp_yuv2rgb_fu_264_out_channels_ch2_ce0.read();
}

void yuv_filter::thread_out_channels_ch2_d0() {
    out_channels_ch2_d0 = grp_yuv2rgb_fu_264_out_channels_ch2_d0.read();
}

void yuv_filter::thread_out_channels_ch2_we0() {
    out_channels_ch2_we0 = grp_yuv2rgb_fu_264_out_channels_ch2_we0.read();
}

void yuv_filter::thread_out_channels_ch3_address0() {
    out_channels_ch3_address0 = grp_yuv2rgb_fu_264_out_channels_ch3_address0.read();
}

void yuv_filter::thread_out_channels_ch3_ce0() {
    out_channels_ch3_ce0 = grp_yuv2rgb_fu_264_out_channels_ch3_ce0.read();
}

void yuv_filter::thread_out_channels_ch3_d0() {
    out_channels_ch3_d0 = grp_yuv2rgb_fu_264_out_channels_ch3_d0.read();
}

void yuv_filter::thread_out_channels_ch3_we0() {
    out_channels_ch3_we0 = grp_yuv2rgb_fu_264_out_channels_ch3_we0.read();
}

void yuv_filter::thread_out_height() {
    out_height = grp_yuv2rgb_fu_264_ap_return_1.read();
}

void yuv_filter::thread_out_height_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(grp_yuv2rgb_fu_264_ap_done.read(), ap_const_logic_1))) {
        out_height_ap_vld = ap_const_logic_1;
    } else {
        out_height_ap_vld = ap_const_logic_0;
    }
}

void yuv_filter::thread_out_width() {
    out_width = grp_yuv2rgb_fu_264_ap_return_0.read();
}

void yuv_filter::thread_out_width_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(grp_yuv2rgb_fu_264_ap_done.read(), ap_const_logic_1))) {
        out_width_ap_vld = ap_const_logic_1;
    } else {
        out_width_ap_vld = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_scale_channels_ch1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_scale_channels_ch1_address0 =  (sc_lv<22>) (tmp_3_cast_reg_489.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_scale_channels_ch1_address0 = grp_yuv2rgb_fu_264_in_channels_ch1_address0.read();
    } else {
        p_scale_channels_ch1_address0 = "XXXXXXXXXXXXXXXXXXXXXX";
    }
}

void yuv_filter::thread_p_scale_channels_ch1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        p_scale_channels_ch1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_scale_channels_ch1_ce0 = grp_yuv2rgb_fu_264_in_channels_ch1_ce0.read();
    } else {
        p_scale_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_scale_channels_ch1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_scale_channels_ch1_we0 = ap_const_logic_1;
    } else {
        p_scale_channels_ch1_we0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_scale_channels_ch2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_scale_channels_ch2_address0 =  (sc_lv<22>) (tmp_3_cast_reg_489.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_scale_channels_ch2_address0 = grp_yuv2rgb_fu_264_in_channels_ch2_address0.read();
    } else {
        p_scale_channels_ch2_address0 = "XXXXXXXXXXXXXXXXXXXXXX";
    }
}

void yuv_filter::thread_p_scale_channels_ch2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        p_scale_channels_ch2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_scale_channels_ch2_ce0 = grp_yuv2rgb_fu_264_in_channels_ch2_ce0.read();
    } else {
        p_scale_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_scale_channels_ch2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_scale_channels_ch2_we0 = ap_const_logic_1;
    } else {
        p_scale_channels_ch2_we0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_scale_channels_ch3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_scale_channels_ch3_address0 =  (sc_lv<22>) (tmp_3_cast_reg_489.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_scale_channels_ch3_address0 = grp_yuv2rgb_fu_264_in_channels_ch3_address0.read();
    } else {
        p_scale_channels_ch3_address0 = "XXXXXXXXXXXXXXXXXXXXXX";
    }
}

void yuv_filter::thread_p_scale_channels_ch3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        p_scale_channels_ch3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_scale_channels_ch3_ce0 = grp_yuv2rgb_fu_264_in_channels_ch3_ce0.read();
    } else {
        p_scale_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_scale_channels_ch3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_scale_channels_ch3_we0 = ap_const_logic_1;
    } else {
        p_scale_channels_ch3_we0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_shl3_cast_fu_326_p3() {
    p_shl3_cast_fu_326_p3 = esl_concat<15,8>(tmp_1_fu_322_p1.read(), ap_const_lv8_0);
}

void yuv_filter::thread_p_shl_cast_fu_314_p3() {
    p_shl_cast_fu_314_p3 = esl_concat<13,10>(tmp_fu_310_p1.read(), ap_const_lv10_0);
}

void yuv_filter::thread_p_yuv_channels_ch1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_yuv_channels_ch1_address0 =  (sc_lv<22>) (tmp_3_cast_fu_360_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch1_address0 = grp_rgb2yuv_fu_244_out_channels_ch1_address0.read();
    } else {
        p_yuv_channels_ch1_address0 = "XXXXXXXXXXXXXXXXXXXXXX";
    }
}

void yuv_filter::thread_p_yuv_channels_ch1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        p_yuv_channels_ch1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch1_ce0 = grp_rgb2yuv_fu_244_out_channels_ch1_ce0.read();
    } else {
        p_yuv_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_yuv_channels_ch1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch1_we0 = grp_rgb2yuv_fu_244_out_channels_ch1_we0.read();
    } else {
        p_yuv_channels_ch1_we0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_yuv_channels_ch2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_yuv_channels_ch2_address0 =  (sc_lv<22>) (tmp_3_cast_fu_360_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch2_address0 = grp_rgb2yuv_fu_244_out_channels_ch2_address0.read();
    } else {
        p_yuv_channels_ch2_address0 = "XXXXXXXXXXXXXXXXXXXXXX";
    }
}

void yuv_filter::thread_p_yuv_channels_ch2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        p_yuv_channels_ch2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch2_ce0 = grp_rgb2yuv_fu_244_out_channels_ch2_ce0.read();
    } else {
        p_yuv_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_yuv_channels_ch2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch2_we0 = grp_rgb2yuv_fu_244_out_channels_ch2_we0.read();
    } else {
        p_yuv_channels_ch2_we0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_yuv_channels_ch3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_yuv_channels_ch3_address0 =  (sc_lv<22>) (tmp_3_cast_fu_360_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch3_address0 = grp_rgb2yuv_fu_244_out_channels_ch3_address0.read();
    } else {
        p_yuv_channels_ch3_address0 = "XXXXXXXXXXXXXXXXXXXXXX";
    }
}

void yuv_filter::thread_p_yuv_channels_ch3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        p_yuv_channels_ch3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch3_ce0 = grp_rgb2yuv_fu_244_out_channels_ch3_ce0.read();
    } else {
        p_yuv_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_p_yuv_channels_ch3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_yuv_channels_ch3_we0 = grp_rgb2yuv_fu_244_out_channels_ch3_we0.read();
    } else {
        p_yuv_channels_ch3_we0 = ap_const_logic_0;
    }
}

void yuv_filter::thread_tmp_1_fu_322_p1() {
    tmp_1_fu_322_p1 = x_i_reg_222.read().range(15-1, 0);
}

void yuv_filter::thread_tmp_1_i_cast_fu_291_p1() {
    tmp_1_i_cast_fu_291_p1 = esl_zext<15,8>(U_scale.read());
}

void yuv_filter::thread_tmp_2_fu_334_p2() {
    tmp_2_fu_334_p2 = (!p_shl_cast_fu_314_p3.read().is_01() || !p_shl3_cast_fu_326_p3.read().is_01())? sc_lv<23>(): (sc_biguint<23>(p_shl_cast_fu_314_p3.read()) + sc_biguint<23>(p_shl3_cast_fu_326_p3.read()));
}

void yuv_filter::thread_tmp_2_i_cast_fu_295_p1() {
    tmp_2_i_cast_fu_295_p1 = esl_zext<15,8>(V_scale.read());
}

void yuv_filter::thread_tmp_3_cast_fu_360_p1() {
    tmp_3_cast_fu_360_p1 = esl_zext<64,23>(tmp_3_fu_355_p2.read());
}

void yuv_filter::thread_tmp_3_fu_355_p2() {
    tmp_3_fu_355_p2 = (!tmp_2_reg_476.read().is_01() || !tmp_5_i_cast_fu_351_p1.read().is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_2_reg_476.read()) + sc_biguint<23>(tmp_5_i_cast_fu_351_p1.read()));
}

void yuv_filter::thread_tmp_5_i_cast_fu_351_p1() {
    tmp_5_i_cast_fu_351_p1 = esl_zext<23,16>(y_i_reg_233.read());
}

void yuv_filter::thread_tmp_fu_310_p1() {
    tmp_fu_310_p1 = x_i_reg_222.read().range(13-1, 0);
}

void yuv_filter::thread_tmp_i_cast_fu_287_p1() {
    tmp_i_cast_fu_287_p1 = esl_zext<15,8>(Y_scale.read());
}

void yuv_filter::thread_x_fu_304_p2() {
    x_fu_304_p2 = (!x_i_reg_222.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(x_i_reg_222.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void yuv_filter::thread_y_fu_345_p2() {
    y_fu_345_p2 = (!y_i_reg_233.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(y_i_reg_233.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void yuv_filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_rgb2yuv_fu_244_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_299_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_i_fu_340_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(grp_yuv2rgb_fu_264_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void yuv_filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_address0\" :  \"" << in_channels_ch1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch1_ce0\" :  \"" << in_channels_ch1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch1_q0\" :  \"" << in_channels_ch1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_address0\" :  \"" << in_channels_ch2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch2_ce0\" :  \"" << in_channels_ch2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch2_q0\" :  \"" << in_channels_ch2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_address0\" :  \"" << in_channels_ch3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_channels_ch3_ce0\" :  \"" << in_channels_ch3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_channels_ch3_q0\" :  \"" << in_channels_ch3_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_width\" :  \"" << in_width.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_height\" :  \"" << in_height.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_address0\" :  \"" << out_channels_ch1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_ce0\" :  \"" << out_channels_ch1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_we0\" :  \"" << out_channels_ch1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch1_d0\" :  \"" << out_channels_ch1_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_address0\" :  \"" << out_channels_ch2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_ce0\" :  \"" << out_channels_ch2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_we0\" :  \"" << out_channels_ch2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch2_d0\" :  \"" << out_channels_ch2_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_address0\" :  \"" << out_channels_ch3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_ce0\" :  \"" << out_channels_ch3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_we0\" :  \"" << out_channels_ch3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_channels_ch3_d0\" :  \"" << out_channels_ch3_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_width\" :  \"" << out_width.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_width_ap_vld\" :  \"" << out_width_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_height\" :  \"" << out_height.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_height_ap_vld\" :  \"" << out_height_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Y_scale\" :  \"" << Y_scale.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"U_scale\" :  \"" << U_scale.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"V_scale\" :  \"" << V_scale.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

