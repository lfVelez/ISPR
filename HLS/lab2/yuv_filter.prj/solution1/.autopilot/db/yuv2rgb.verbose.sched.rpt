

================================================================
== Vivado HLS Report for 'yuv2rgb'
================================================================
* Date:           Thu May 13 17:32:27 2021

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        yuv_filter.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      9.40|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+----------+--------+----------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min  |    max   |   min  |    max   |   Type  |
    +--------+----------+--------+----------+---------+
    |  440401|  27037441|  440401|  27037441|   none  |
    +--------+----------+--------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+--------+----------+--------------+-----------+-----------+------------+----------+
        |                   |      Latency      |   Iteration  |  Initiation Interval  |    Trip    |          |
        |     Loop Name     |   min  |    max   |    Latency   |  achieved |   target  |    Count   | Pipelined|
        +-------------------+--------+----------+--------------+-----------+-----------+------------+----------+
        |- YUV2RGB_LOOP_X   |  440400|  27037440| 2202 ~ 14082 |          -|          -| 200 ~ 1920 |    no    |
        | + YUV2RGB_LOOP_Y  |    2200|     14080|            11|          -|          -| 200 ~ 1280 |    no    |
        +-------------------+--------+----------+--------------+-----------+-----------+------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond)
	2  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	3  / true
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: in_height_read_1 (9)  [1/1] 0.00ns
:0  %in_height_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_height_read)

ST_1: in_width_read_1 (10)  [1/1] 0.00ns
:1  %in_width_read_1 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_width_read)

ST_1: StgValue_16 (11)  [1/1] 1.77ns  loc: yuv_filter.c:89
:2  br label %1


 <State 2>: 3.17ns
ST_2: x (13)  [1/1] 0.00ns
:0  %x = phi i16 [ 0, %0 ], [ %x_1, %4 ]

ST_2: exitcond1 (14)  [1/1] 3.03ns  loc: yuv_filter.c:89
:1  %exitcond1 = icmp eq i16 %x, %in_width_read_1

ST_2: x_1 (15)  [1/1] 2.96ns  loc: yuv_filter.c:89
:2  %x_1 = add i16 %x, 1

ST_2: StgValue_20 (16)  [1/1] 0.00ns  loc: yuv_filter.c:89
:3  br i1 %exitcond1, label %5, label %2

ST_2: StgValue_21 (18)  [1/1] 0.00ns  loc: yuv_filter.c:89
:0  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str3) nounwind

ST_2: tmp_1 (19)  [1/1] 0.00ns  loc: yuv_filter.c:89
:1  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str3)

ST_2: StgValue_23 (20)  [1/1] 0.00ns  loc: yuv_filter.c:90
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 200, i32 1920, i32 1060, [1 x i8]* @p_str1) nounwind

ST_2: tmp (21)  [1/1] 0.00ns  loc: yuv_filter.c:89
:3  %tmp = trunc i16 %x to i13

ST_2: p_shl2_cast (22)  [1/1] 0.00ns  loc: yuv_filter.c:89
:4  %p_shl2_cast = call i23 @_ssdm_op_BitConcatenate.i23.i13.i10(i13 %tmp, i10 0)

ST_2: tmp_5 (23)  [1/1] 0.00ns  loc: yuv_filter.c:89
:5  %tmp_5 = trunc i16 %x to i15

ST_2: p_shl3_cast (24)  [1/1] 0.00ns  loc: yuv_filter.c:94
:6  %p_shl3_cast = call i23 @_ssdm_op_BitConcatenate.i23.i15.i8(i15 %tmp_5, i8 0)

ST_2: tmp_s (25)  [1/1] 3.17ns  loc: yuv_filter.c:94
:7  %tmp_s = add i23 %p_shl2_cast, %p_shl3_cast

ST_2: StgValue_29 (26)  [1/1] 1.77ns  loc: yuv_filter.c:92
:8  br label %3

ST_2: mrv (103)  [1/1] 0.00ns  loc: yuv_filter.c:108
:0  %mrv = insertvalue { i16, i16 } undef, i16 %in_width_read_1, 0

ST_2: mrv_1 (104)  [1/1] 0.00ns  loc: yuv_filter.c:108
:1  %mrv_1 = insertvalue { i16, i16 } %mrv, i16 %in_height_read_1, 1

ST_2: StgValue_32 (105)  [1/1] 0.00ns  loc: yuv_filter.c:108
:2  ret { i16, i16 } %mrv_1


 <State 3>: 6.42ns
ST_3: y (28)  [1/1] 0.00ns
:0  %y = phi i16 [ 0, %2 ], [ %y_1, %_ifconv ]

ST_3: exitcond (29)  [1/1] 3.03ns  loc: yuv_filter.c:92
:1  %exitcond = icmp eq i16 %y, %in_height_read_1

ST_3: y_1 (30)  [1/1] 2.96ns  loc: yuv_filter.c:92
:2  %y_1 = add i16 %y, 1

ST_3: StgValue_36 (31)  [1/1] 0.00ns  loc: yuv_filter.c:92
:3  br i1 %exitcond, label %4, label %_ifconv

ST_3: tmp_cast (36)  [1/1] 0.00ns  loc: yuv_filter.c:94
_ifconv:3  %tmp_cast = zext i16 %y to i23

ST_3: tmp_6 (37)  [1/1] 3.17ns  loc: yuv_filter.c:94
_ifconv:4  %tmp_6 = add i23 %tmp_cast, %tmp_s

ST_3: tmp_21_cast (38)  [1/1] 0.00ns  loc: yuv_filter.c:94
_ifconv:5  %tmp_21_cast = zext i23 %tmp_6 to i64

ST_3: in_channels_ch3_addr (41)  [1/1] 0.00ns  loc: yuv_filter.c:96
_ifconv:8  %in_channels_ch3_addr = getelementptr [2457600 x i8]* %in_channels_ch3, i64 0, i64 %tmp_21_cast

ST_3: V (47)  [4/4] 3.25ns  loc: yuv_filter.c:96
_ifconv:14  %V = load i8* %in_channels_ch3_addr, align 1

ST_3: empty_16 (100)  [1/1] 0.00ns  loc: yuv_filter.c:107
:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str3, i32 %tmp_1)

ST_3: StgValue_43 (101)  [1/1] 0.00ns  loc: yuv_filter.c:89
:1  br label %1


 <State 4>: 3.25ns
ST_4: V (47)  [3/4] 3.25ns  loc: yuv_filter.c:96
_ifconv:14  %V = load i8* %in_channels_ch3_addr, align 1


 <State 5>: 3.25ns
ST_5: in_channels_ch1_addr (39)  [1/1] 0.00ns  loc: yuv_filter.c:94
_ifconv:6  %in_channels_ch1_addr = getelementptr [2457600 x i8]* %in_channels_ch1, i64 0, i64 %tmp_21_cast

ST_5: Y (45)  [4/4] 3.25ns  loc: yuv_filter.c:94
_ifconv:12  %Y = load i8* %in_channels_ch1_addr, align 1

ST_5: V (47)  [2/4] 3.25ns  loc: yuv_filter.c:96
_ifconv:14  %V = load i8* %in_channels_ch3_addr, align 1


 <State 6>: 5.32ns
ST_6: in_channels_ch2_addr (40)  [1/1] 0.00ns  loc: yuv_filter.c:95
_ifconv:7  %in_channels_ch2_addr = getelementptr [2457600 x i8]* %in_channels_ch2, i64 0, i64 %tmp_21_cast

ST_6: Y (45)  [3/4] 3.25ns  loc: yuv_filter.c:94
_ifconv:12  %Y = load i8* %in_channels_ch1_addr, align 1

ST_6: U (46)  [4/4] 3.25ns  loc: yuv_filter.c:95
_ifconv:13  %U = load i8* %in_channels_ch2_addr, align 1

ST_6: V (47)  [1/4] 3.25ns  loc: yuv_filter.c:96
_ifconv:14  %V = load i8* %in_channels_ch3_addr, align 1

ST_6: E (51)  [1/1] 2.07ns  loc: yuv_filter.c:99
_ifconv:18  %E = xor i8 %V, -128


 <State 7>: 5.75ns
ST_7: Y (45)  [2/4] 3.25ns  loc: yuv_filter.c:94
_ifconv:12  %Y = load i8* %in_channels_ch1_addr, align 1

ST_7: U (46)  [3/4] 3.25ns  loc: yuv_filter.c:95
_ifconv:13  %U = load i8* %in_channels_ch2_addr, align 1

ST_7: tmp_8_cast5 (54)  [1/1] 0.00ns  loc: yuv_filter.c:101
_ifconv:21  %tmp_8_cast5 = sext i8 %E to i17

ST_7: tmp_13 (69)  [3/3] 5.75ns  loc: yuv_filter.c:101
_ifconv:36  %tmp_13 = mul i17 -208, %tmp_8_cast5


 <State 8>: 5.75ns
ST_8: Y (45)  [1/4] 3.25ns  loc: yuv_filter.c:94
_ifconv:12  %Y = load i8* %in_channels_ch1_addr, align 1

ST_8: U (46)  [2/4] 3.25ns  loc: yuv_filter.c:95
_ifconv:13  %U = load i8* %in_channels_ch2_addr, align 1

ST_8: tmp_13 (69)  [2/3] 5.75ns  loc: yuv_filter.c:101
_ifconv:36  %tmp_13 = mul i17 -208, %tmp_8_cast5


 <State 9>: 6.38ns
ST_9: U (46)  [1/4] 3.25ns  loc: yuv_filter.c:95
_ifconv:13  %U = load i8* %in_channels_ch2_addr, align 1

ST_9: tmp_3_cast (48)  [1/1] 0.00ns  loc: yuv_filter.c:97
_ifconv:15  %tmp_3_cast = zext i8 %Y to i9

ST_9: C (49)  [1/1] 0.00ns  loc: yuv_filter.c:97
_ifconv:16  %C = add i9 -16, %tmp_3_cast

ST_9: D (50)  [1/1] 2.07ns  loc: yuv_filter.c:98
_ifconv:17  %D = xor i8 %U, -128

ST_9: tmp_6_cast (52)  [1/1] 0.00ns  loc: yuv_filter.c:100
_ifconv:19  %tmp_6_cast = sext i9 %C to i18

ST_9: tmp_7 (53)  [1/1] 3.36ns  loc: yuv_filter.c:100
_ifconv:20  %tmp_7 = mul i18 298, %tmp_6_cast

ST_9: tmp_3 (57)  [1/1] 3.02ns  loc: yuv_filter.c:100
_ifconv:24  %tmp_3 = add i18 128, %tmp_7

ST_9: tmp_13 (69)  [1/3] 5.75ns  loc: yuv_filter.c:101
_ifconv:36  %tmp_13 = mul i17 -208, %tmp_8_cast5


 <State 10>: 9.40ns
ST_10: tmp_8_cast (55)  [1/1] 0.00ns  loc: yuv_filter.c:100
_ifconv:22  %tmp_8_cast = sext i8 %E to i18

ST_10: tmp_9 (56)  [1/1] 3.36ns  loc: yuv_filter.c:100
_ifconv:23  %tmp_9 = mul i18 409, %tmp_8_cast

ST_10: tmp_4 (58)  [1/1] 3.02ns  loc: yuv_filter.c:100
_ifconv:25  %tmp_4 = add i18 %tmp_3, %tmp_9

ST_10: tmp_8 (59)  [1/1] 0.00ns  loc: yuv_filter.c:100
_ifconv:26  %tmp_8 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_4, i32 16, i32 17)

ST_10: icmp (60)  [1/1] 2.07ns  loc: yuv_filter.c:100
_ifconv:27  %icmp = icmp eq i2 %tmp_8, 1

ST_10: tmp_16_cast4_cast (66)  [1/1] 0.00ns  loc: yuv_filter.c:101
_ifconv:33  %tmp_16_cast4_cast = sext i8 %D to i16

ST_10: tmp_12 (67)  [1/1] 3.36ns  loc: yuv_filter.c:101
_ifconv:34  %tmp_12 = mul i16 -100, %tmp_16_cast4_cast

ST_10: tmp_12_cast (68)  [1/1] 0.00ns  loc: yuv_filter.c:101
_ifconv:35  %tmp_12_cast = sext i16 %tmp_12 to i17

ST_10: tmp1 (70)  [1/1] 3.02ns  loc: yuv_filter.c:101
_ifconv:37  %tmp1 = add i17 %tmp_12_cast, %tmp_13

ST_10: tmp1_cast (71)  [1/1] 0.00ns  loc: yuv_filter.c:101
_ifconv:38  %tmp1_cast = sext i17 %tmp1 to i18

ST_10: tmp_14 (72)  [1/1] 3.02ns  loc: yuv_filter.c:101
_ifconv:39  %tmp_14 = add i18 %tmp1_cast, %tmp_3

ST_10: tmp_15 (73)  [1/1] 0.00ns  loc: yuv_filter.c:101
_ifconv:40  %tmp_15 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_14, i32 16, i32 17)

ST_10: p_shl (80)  [1/1] 0.00ns  loc: yuv_filter.c:102
_ifconv:47  %p_shl = call i17 @_ssdm_op_BitConcatenate.i17.i8.i9(i8 %D, i9 0)

ST_10: p_shl_cast (81)  [1/1] 0.00ns  loc: yuv_filter.c:102
_ifconv:48  %p_shl_cast = sext i17 %p_shl to i19

ST_10: p_shl1 (82)  [1/1] 0.00ns  loc: yuv_filter.c:102
_ifconv:49  %p_shl1 = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %D, i2 0)

ST_10: p_shl1_cast (83)  [1/1] 0.00ns  loc: yuv_filter.c:102
_ifconv:50  %p_shl1_cast = sext i10 %p_shl1 to i18

ST_10: tmp2 (84)  [1/1] 3.02ns  loc: yuv_filter.c:102
_ifconv:51  %tmp2 = add i18 %p_shl1_cast, %tmp_3

ST_10: tmp2_cast (85)  [1/1] 0.00ns  loc: yuv_filter.c:102
_ifconv:52  %tmp2_cast = sext i18 %tmp2 to i19

ST_10: tmp_18 (86)  [1/1] 3.02ns  loc: yuv_filter.c:102
_ifconv:53  %tmp_18 = add i19 %tmp2_cast, %p_shl_cast

ST_10: tmp_19 (87)  [1/1] 0.00ns  loc: yuv_filter.c:102
_ifconv:54  %tmp_19 = call i3 @_ssdm_op_PartSelect.i3.i19.i32.i32(i19 %tmp_18, i32 16, i32 18)


 <State 11>: 5.32ns
ST_11: out_channels_ch1_add (42)  [1/1] 0.00ns  loc: yuv_filter.c:103
_ifconv:9  %out_channels_ch1_add = getelementptr [2457600 x i8]* %out_channels_ch1, i64 0, i64 %tmp_21_cast

ST_11: tmp_10 (61)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
_ifconv:28  %tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_4, i32 17)

ST_11: phitmp (62)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
_ifconv:29  %phitmp = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_4, i32 8, i32 15)

ST_11: p_phitmp (63)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
_ifconv:30  %p_phitmp = select i1 %icmp, i8 -1, i8 0

ST_11: tmp_11 (64)  [1/1] 0.00ns  loc: yuv_filter.c:100 (grouped into LUT with out node R)
_ifconv:31  %tmp_11 = or i1 %icmp, %tmp_10

ST_11: R (65)  [1/1] 2.07ns  loc: yuv_filter.c:100 (out node of the LUT)
_ifconv:32  %R = select i1 %tmp_11, i8 %p_phitmp, i8 %phitmp

ST_11: icmp9 (74)  [1/1] 2.07ns  loc: yuv_filter.c:101
_ifconv:41  %icmp9 = icmp eq i2 %tmp_15, 1

ST_11: tmp_16 (75)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
_ifconv:42  %tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_14, i32 17)

ST_11: phitmp2 (76)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
_ifconv:43  %phitmp2 = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_14, i32 8, i32 15)

ST_11: p_phitmp2 (77)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
_ifconv:44  %p_phitmp2 = select i1 %icmp9, i8 -1, i8 0

ST_11: tmp_17 (78)  [1/1] 0.00ns  loc: yuv_filter.c:101 (grouped into LUT with out node G)
_ifconv:45  %tmp_17 = or i1 %icmp9, %tmp_16

ST_11: G (79)  [1/1] 2.07ns  loc: yuv_filter.c:101 (out node of the LUT)
_ifconv:46  %G = select i1 %tmp_17, i8 %p_phitmp2, i8 %phitmp2

ST_11: icmp1 (88)  [1/1] 2.07ns  loc: yuv_filter.c:102
_ifconv:55  %icmp1 = icmp sgt i3 %tmp_19, 0

ST_11: tmp_20 (89)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
_ifconv:56  %tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %tmp_18, i32 18)

ST_11: phitmp3 (90)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
_ifconv:57  %phitmp3 = call i8 @_ssdm_op_PartSelect.i8.i19.i32.i32(i19 %tmp_18, i32 8, i32 15)

ST_11: p_phitmp3 (91)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
_ifconv:58  %p_phitmp3 = select i1 %icmp1, i8 -1, i8 0

ST_11: tmp_21 (92)  [1/1] 0.00ns  loc: yuv_filter.c:102 (grouped into LUT with out node B)
_ifconv:59  %tmp_21 = or i1 %icmp1, %tmp_20

ST_11: B (93)  [1/1] 2.07ns  loc: yuv_filter.c:102 (out node of the LUT)
_ifconv:60  %B = select i1 %tmp_21, i8 %p_phitmp3, i8 %phitmp3

ST_11: StgValue_106 (94)  [2/2] 3.25ns  loc: yuv_filter.c:103
_ifconv:61  store i8 %R, i8* %out_channels_ch1_add, align 1


 <State 12>: 3.25ns
ST_12: out_channels_ch2_add (43)  [1/1] 0.00ns  loc: yuv_filter.c:104
_ifconv:10  %out_channels_ch2_add = getelementptr [2457600 x i8]* %out_channels_ch2, i64 0, i64 %tmp_21_cast

ST_12: out_channels_ch3_add (44)  [1/1] 0.00ns  loc: yuv_filter.c:105
_ifconv:11  %out_channels_ch3_add = getelementptr [2457600 x i8]* %out_channels_ch3, i64 0, i64 %tmp_21_cast

ST_12: StgValue_109 (94)  [1/2] 3.25ns  loc: yuv_filter.c:103
_ifconv:61  store i8 %R, i8* %out_channels_ch1_add, align 1

ST_12: StgValue_110 (95)  [2/2] 3.25ns  loc: yuv_filter.c:104
_ifconv:62  store i8 %G, i8* %out_channels_ch2_add, align 1

ST_12: StgValue_111 (96)  [2/2] 3.25ns  loc: yuv_filter.c:105
_ifconv:63  store i8 %B, i8* %out_channels_ch3_add, align 1


 <State 13>: 3.25ns
ST_13: StgValue_112 (33)  [1/1] 0.00ns  loc: yuv_filter.c:92
_ifconv:0  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str4) nounwind

ST_13: tmp_2 (34)  [1/1] 0.00ns  loc: yuv_filter.c:92
_ifconv:1  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str4)

ST_13: StgValue_114 (35)  [1/1] 0.00ns  loc: yuv_filter.c:93
_ifconv:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 200, i32 1280, i32 740, [1 x i8]* @p_str1) nounwind

ST_13: StgValue_115 (95)  [1/2] 3.25ns  loc: yuv_filter.c:104
_ifconv:62  store i8 %G, i8* %out_channels_ch2_add, align 1

ST_13: StgValue_116 (96)  [1/2] 3.25ns  loc: yuv_filter.c:105
_ifconv:63  store i8 %B, i8* %out_channels_ch3_add, align 1

ST_13: empty (97)  [1/1] 0.00ns  loc: yuv_filter.c:106
_ifconv:64  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str4, i32 %tmp_2)

ST_13: StgValue_118 (98)  [1/1] 0.00ns  loc: yuv_filter.c:92
_ifconv:65  br label %3



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('x') with incoming values : ('x', yuv_filter.c:89) [13]  (1.77 ns)

 <State 2>: 3.17ns
The critical path consists of the following:
	'phi' operation ('x') with incoming values : ('x', yuv_filter.c:89) [13]  (0 ns)
	'add' operation ('tmp_s', yuv_filter.c:94) [25]  (3.17 ns)

 <State 3>: 6.42ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', yuv_filter.c:92) [28]  (0 ns)
	'add' operation ('tmp_6', yuv_filter.c:94) [37]  (3.17 ns)
	'getelementptr' operation ('in_channels_ch3_addr', yuv_filter.c:96) [41]  (0 ns)
	'load' operation ('V', yuv_filter.c:96) on array 'in_channels_ch3' [47]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('V', yuv_filter.c:96) on array 'in_channels_ch3' [47]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('in_channels_ch1_addr', yuv_filter.c:94) [39]  (0 ns)
	'load' operation ('Y', yuv_filter.c:94) on array 'in_channels_ch1' [45]  (3.25 ns)

 <State 6>: 5.32ns
The critical path consists of the following:
	'load' operation ('V', yuv_filter.c:96) on array 'in_channels_ch3' [47]  (3.25 ns)
	'xor' operation ('E', yuv_filter.c:99) [51]  (2.07 ns)

 <State 7>: 5.75ns
The critical path consists of the following:
	'mul' operation ('tmp_13', yuv_filter.c:101) [69]  (5.75 ns)

 <State 8>: 5.75ns
The critical path consists of the following:
	'mul' operation ('tmp_13', yuv_filter.c:101) [69]  (5.75 ns)

 <State 9>: 6.38ns
The critical path consists of the following:
	'add' operation ('C', yuv_filter.c:97) [49]  (0 ns)
	'mul' operation ('tmp_7', yuv_filter.c:100) [53]  (3.36 ns)
	'add' operation ('tmp_3', yuv_filter.c:100) [57]  (3.02 ns)

 <State 10>: 9.4ns
The critical path consists of the following:
	'mul' operation ('tmp_12', yuv_filter.c:101) [67]  (3.36 ns)
	'add' operation ('tmp1', yuv_filter.c:101) [70]  (3.02 ns)
	'add' operation ('tmp_14', yuv_filter.c:101) [72]  (3.02 ns)

 <State 11>: 5.32ns
The critical path consists of the following:
	'or' operation ('tmp_11', yuv_filter.c:100) [64]  (0 ns)
	'select' operation ('R', yuv_filter.c:100) [65]  (2.07 ns)
	'store' operation (yuv_filter.c:103) of variable 'R', yuv_filter.c:100 on array 'out_channels_ch1' [94]  (3.25 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('out_channels_ch2_add', yuv_filter.c:104) [43]  (0 ns)
	'store' operation (yuv_filter.c:104) of variable 'G', yuv_filter.c:101 on array 'out_channels_ch2' [95]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'store' operation (yuv_filter.c:104) of variable 'G', yuv_filter.c:101 on array 'out_channels_ch2' [95]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
