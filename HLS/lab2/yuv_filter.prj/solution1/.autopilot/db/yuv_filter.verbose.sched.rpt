

================================================================
== Vivado HLS Report for 'yuv_filter'
================================================================
* Date:           Thu May 13 17:32:27 2021

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        yuv_filter.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      9.40|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+----------+---------+----------+---------+
    |       Latency      |      Interval      | Pipeline|
    |   min   |    max   |   min   |    max   |   Type  |
    +---------+----------+---------+----------+---------+
    |  1201205|  73739525|  1201206|  73739526|   none  |
    +---------+----------+---------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+--------+----------+--------------+-----------+-----------+------------+----------+
        |                     |      Latency      |   Iteration  |  Initiation Interval  |    Trip    |          |
        |      Loop Name      |   min  |    max   |    Latency   |  achieved |   target  |    Count   | Pipelined|
        +---------------------+--------+----------+--------------+-----------+-----------+------------+----------+
        |- YUV_SCALE_LOOP_X   |  360400|  22122240| 1802 ~ 11522 |          -|          -| 200 ~ 1920 |    no    |
        | + YUV_SCALE_LOOP_Y  |    1800|     11520|             9|          -|          -| 200 ~ 1280 |    no    |
        +---------------------+--------+----------+--------------+-----------+-----------+------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 13
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	13  / (exitcond1_i)
	4  / (!exitcond1_i)
4 --> 
	5  / (!exitcond_i)
	3  / (exitcond_i)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	4  / true
13 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: p_yuv_channels_ch1 (31)  [1/1] 0.00ns  loc: yuv_filter.c:17
:17  %p_yuv_channels_ch1 = alloca [2457600 x i8], align 1

ST_1: p_yuv_channels_ch2 (32)  [1/1] 0.00ns  loc: yuv_filter.c:17
:18  %p_yuv_channels_ch2 = alloca [2457600 x i8], align 1

ST_1: p_yuv_channels_ch3 (33)  [1/1] 0.00ns  loc: yuv_filter.c:17
:19  %p_yuv_channels_ch3 = alloca [2457600 x i8], align 1

ST_1: p_scale_channels_ch1 (34)  [1/1] 0.00ns  loc: yuv_filter.c:18
:20  %p_scale_channels_ch1 = alloca [2457600 x i8], align 1

ST_1: p_scale_channels_ch2 (35)  [1/1] 0.00ns  loc: yuv_filter.c:18
:21  %p_scale_channels_ch2 = alloca [2457600 x i8], align 1

ST_1: p_scale_channels_ch3 (36)  [1/1] 0.00ns  loc: yuv_filter.c:18
:22  %p_scale_channels_ch3 = alloca [2457600 x i8], align 1

ST_1: in_width_read (37)  [1/1] 0.00ns  loc: yuv_filter.c:23
:23  %in_width_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %in_width)

ST_1: in_height_read (38)  [1/1] 0.00ns  loc: yuv_filter.c:23
:24  %in_height_read = call i16 @_ssdm_op_Read.ap_auto.i16P(i16* %in_height)

ST_1: call_ret (39)  [2/2] 0.00ns  loc: yuv_filter.c:23
:25  %call_ret = call fastcc { i16, i16 } @rgb2yuv([2457600 x i8]* %in_channels_ch1, [2457600 x i8]* %in_channels_ch2, [2457600 x i8]* %in_channels_ch3, i16 %in_width_read, i16 %in_height_read, [2457600 x i8]* %p_yuv_channels_ch1, [2457600 x i8]* %p_yuv_channels_ch2, [2457600 x i8]* %p_yuv_channels_ch3)


 <State 2>: 1.77ns
ST_2: StgValue_23 (14)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([2457600 x i8]* %in_channels_ch1), !map !13

ST_2: StgValue_24 (15)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([2457600 x i8]* %in_channels_ch2), !map !20

ST_2: StgValue_25 (16)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([2457600 x i8]* %in_channels_ch3), !map !24

ST_2: StgValue_26 (17)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i16* %in_width), !map !28

ST_2: StgValue_27 (18)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i16* %in_height), !map !34

ST_2: StgValue_28 (19)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([2457600 x i8]* %out_channels_ch1), !map !38

ST_2: StgValue_29 (20)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap([2457600 x i8]* %out_channels_ch2), !map !42

ST_2: StgValue_30 (21)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap([2457600 x i8]* %out_channels_ch3), !map !46

ST_2: StgValue_31 (22)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i16* %out_width), !map !50

ST_2: StgValue_32 (23)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i16* %out_height), !map !54

ST_2: StgValue_33 (24)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i8 %Y_scale), !map !58

ST_2: StgValue_34 (25)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i8 %U_scale), !map !64

ST_2: StgValue_35 (26)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i8 %V_scale), !map !68

ST_2: StgValue_36 (27)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @yuv_filter_str) nounwind

ST_2: V_scale_read (28)  [1/1] 0.00ns
:14  %V_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %V_scale)

ST_2: U_scale_read (29)  [1/1] 0.00ns
:15  %U_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %U_scale)

ST_2: Y_scale_read (30)  [1/1] 0.00ns
:16  %Y_scale_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %Y_scale)

ST_2: call_ret (39)  [1/2] 0.00ns  loc: yuv_filter.c:23
:25  %call_ret = call fastcc { i16, i16 } @rgb2yuv([2457600 x i8]* %in_channels_ch1, [2457600 x i8]* %in_channels_ch2, [2457600 x i8]* %in_channels_ch3, i16 %in_width_read, i16 %in_height_read, [2457600 x i8]* %p_yuv_channels_ch1, [2457600 x i8]* %p_yuv_channels_ch2, [2457600 x i8]* %p_yuv_channels_ch3)

ST_2: p_yuv_width (40)  [1/1] 0.00ns  loc: yuv_filter.c:23
:26  %p_yuv_width = extractvalue { i16, i16 } %call_ret, 0

ST_2: p_yuv_height (41)  [1/1] 0.00ns  loc: yuv_filter.c:23
:27  %p_yuv_height = extractvalue { i16, i16 } %call_ret, 1

ST_2: tmp_i_cast (42)  [1/1] 0.00ns  loc: yuv_filter.c:138->yuv_filter.c:24
:28  %tmp_i_cast = zext i8 %Y_scale_read to i15

ST_2: tmp_1_i_cast (43)  [1/1] 0.00ns  loc: yuv_filter.c:139->yuv_filter.c:24
:29  %tmp_1_i_cast = zext i8 %U_scale_read to i15

ST_2: tmp_2_i_cast (44)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:30  %tmp_2_i_cast = zext i8 %V_scale_read to i15

ST_2: StgValue_46 (45)  [1/1] 1.77ns  loc: yuv_filter.c:129->yuv_filter.c:24
:31  br label %1


 <State 3>: 3.17ns
ST_3: x_i (47)  [1/1] 0.00ns
:0  %x_i = phi i16 [ 0, %0 ], [ %x, %5 ]

ST_3: exitcond1_i (48)  [1/1] 3.03ns  loc: yuv_filter.c:129->yuv_filter.c:24
:1  %exitcond1_i = icmp eq i16 %x_i, %p_yuv_width

ST_3: x (49)  [1/1] 2.96ns  loc: yuv_filter.c:129->yuv_filter.c:24
:2  %x = add i16 %x_i, 1

ST_3: StgValue_50 (50)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:3  br i1 %exitcond1_i, label %yuv_scale.exit, label %2

ST_3: StgValue_51 (52)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:0  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str5) nounwind

ST_3: tmp_13_i (53)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:1  %tmp_13_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str5)

ST_3: StgValue_53 (54)  [1/1] 0.00ns  loc: yuv_filter.c:130->yuv_filter.c:24
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 200, i32 1920, i32 1060, [1 x i8]* @p_str1) nounwind

ST_3: tmp (55)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:3  %tmp = trunc i16 %x_i to i13

ST_3: p_shl_cast (56)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:4  %p_shl_cast = call i23 @_ssdm_op_BitConcatenate.i23.i13.i10(i13 %tmp, i10 0)

ST_3: tmp_1 (57)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:5  %tmp_1 = trunc i16 %x_i to i15

ST_3: p_shl3_cast (58)  [1/1] 0.00ns  loc: yuv_filter.c:142->yuv_filter.c:24
:6  %p_shl3_cast = call i23 @_ssdm_op_BitConcatenate.i23.i15.i8(i15 %tmp_1, i8 0)

ST_3: tmp_2 (59)  [1/1] 3.17ns  loc: yuv_filter.c:142->yuv_filter.c:24
:7  %tmp_2 = add i23 %p_shl_cast, %p_shl3_cast

ST_3: StgValue_59 (60)  [1/1] 1.77ns  loc: yuv_filter.c:132->yuv_filter.c:24
:8  br label %3

ST_3: call_ret1 (100)  [2/2] 0.00ns  loc: yuv_filter.c:25
yuv_scale.exit:0  %call_ret1 = call fastcc { i16, i16 } @yuv2rgb([2457600 x i8]* %p_scale_channels_ch1, [2457600 x i8]* %p_scale_channels_ch2, [2457600 x i8]* %p_scale_channels_ch3, i16 %p_yuv_width, i16 %p_yuv_height, [2457600 x i8]* %out_channels_ch1, [2457600 x i8]* %out_channels_ch2, [2457600 x i8]* %out_channels_ch3)


 <State 4>: 6.42ns
ST_4: y_i (62)  [1/1] 0.00ns
:0  %y_i = phi i16 [ 0, %2 ], [ %y, %4 ]

ST_4: exitcond_i (63)  [1/1] 3.03ns  loc: yuv_filter.c:132->yuv_filter.c:24
:1  %exitcond_i = icmp eq i16 %y_i, %p_yuv_height

ST_4: y (64)  [1/1] 2.96ns  loc: yuv_filter.c:132->yuv_filter.c:24
:2  %y = add i16 %y_i, 1

ST_4: StgValue_64 (65)  [1/1] 0.00ns  loc: yuv_filter.c:132->yuv_filter.c:24
:3  br i1 %exitcond_i, label %5, label %4

ST_4: tmp_5_i_cast (70)  [1/1] 0.00ns  loc: yuv_filter.c:142->yuv_filter.c:24
:3  %tmp_5_i_cast = zext i16 %y_i to i23

ST_4: tmp_3 (71)  [1/1] 3.17ns  loc: yuv_filter.c:142->yuv_filter.c:24
:4  %tmp_3 = add i23 %tmp_2, %tmp_5_i_cast

ST_4: tmp_3_cast (72)  [1/1] 0.00ns  loc: yuv_filter.c:142->yuv_filter.c:24
:5  %tmp_3_cast = zext i23 %tmp_3 to i64

ST_4: yuv_channels_ch2_add (75)  [1/1] 0.00ns  loc: yuv_filter.c:135->yuv_filter.c:24
:8  %yuv_channels_ch2_add = getelementptr [2457600 x i8]* %p_yuv_channels_ch2, i64 0, i64 %tmp_3_cast

ST_4: yuv_channels_ch3_add (76)  [1/1] 0.00ns  loc: yuv_filter.c:136->yuv_filter.c:24
:9  %yuv_channels_ch3_add = getelementptr [2457600 x i8]* %p_yuv_channels_ch3, i64 0, i64 %tmp_3_cast

ST_4: yuv_channels_ch1_add (77)  [1/1] 0.00ns  loc: yuv_filter.c:134->yuv_filter.c:24
:10  %yuv_channels_ch1_add = getelementptr [2457600 x i8]* %p_yuv_channels_ch1, i64 0, i64 %tmp_3_cast

ST_4: Y (79)  [4/4] 3.25ns  loc: yuv_filter.c:134->yuv_filter.c:24
:12  %Y = load i8* %yuv_channels_ch1_add, align 1

ST_4: U (80)  [4/4] 3.25ns  loc: yuv_filter.c:135->yuv_filter.c:24
:13  %U = load i8* %yuv_channels_ch2_add, align 1

ST_4: V (81)  [4/4] 3.25ns  loc: yuv_filter.c:136->yuv_filter.c:24
:14  %V = load i8* %yuv_channels_ch3_add, align 1

ST_4: empty_15 (97)  [1/1] 0.00ns  loc: yuv_filter.c:144->yuv_filter.c:24
:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str5, i32 %tmp_13_i)

ST_4: StgValue_75 (98)  [1/1] 0.00ns  loc: yuv_filter.c:129->yuv_filter.c:24
:1  br label %1


 <State 5>: 3.25ns
ST_5: Y (79)  [3/4] 3.25ns  loc: yuv_filter.c:134->yuv_filter.c:24
:12  %Y = load i8* %yuv_channels_ch1_add, align 1

ST_5: U (80)  [3/4] 3.25ns  loc: yuv_filter.c:135->yuv_filter.c:24
:13  %U = load i8* %yuv_channels_ch2_add, align 1

ST_5: V (81)  [3/4] 3.25ns  loc: yuv_filter.c:136->yuv_filter.c:24
:14  %V = load i8* %yuv_channels_ch3_add, align 1


 <State 6>: 3.25ns
ST_6: Y (79)  [2/4] 3.25ns  loc: yuv_filter.c:134->yuv_filter.c:24
:12  %Y = load i8* %yuv_channels_ch1_add, align 1

ST_6: U (80)  [2/4] 3.25ns  loc: yuv_filter.c:135->yuv_filter.c:24
:13  %U = load i8* %yuv_channels_ch2_add, align 1

ST_6: V (81)  [2/4] 3.25ns  loc: yuv_filter.c:136->yuv_filter.c:24
:14  %V = load i8* %yuv_channels_ch3_add, align 1


 <State 7>: 3.25ns
ST_7: Y (79)  [1/4] 3.25ns  loc: yuv_filter.c:134->yuv_filter.c:24
:12  %Y = load i8* %yuv_channels_ch1_add, align 1

ST_7: U (80)  [1/4] 3.25ns  loc: yuv_filter.c:135->yuv_filter.c:24
:13  %U = load i8* %yuv_channels_ch2_add, align 1

ST_7: V (81)  [1/4] 3.25ns  loc: yuv_filter.c:136->yuv_filter.c:24
:14  %V = load i8* %yuv_channels_ch3_add, align 1


 <State 8>: 5.51ns
ST_8: tmp_6_i_cast (82)  [1/1] 0.00ns  loc: yuv_filter.c:137->yuv_filter.c:24
:15  %tmp_6_i_cast = zext i8 %Y to i15

ST_8: tmp_7_i (83)  [3/3] 5.51ns  loc: yuv_filter.c:137->yuv_filter.c:24
:16  %tmp_7_i = mul i15 %tmp_i_cast, %tmp_6_i_cast

ST_8: tmp_9_i_cast (84)  [1/1] 0.00ns  loc: yuv_filter.c:138->yuv_filter.c:24
:17  %tmp_9_i_cast = zext i8 %U to i15

ST_8: tmp_i (85)  [3/3] 5.51ns  loc: yuv_filter.c:138->yuv_filter.c:24
:18  %tmp_i = mul i15 %tmp_1_i_cast, %tmp_9_i_cast

ST_8: tmp_4_i_cast (86)  [1/1] 0.00ns  loc: yuv_filter.c:139->yuv_filter.c:24
:19  %tmp_4_i_cast = zext i8 %V to i15

ST_8: tmp_8_i (87)  [3/3] 5.51ns  loc: yuv_filter.c:139->yuv_filter.c:24
:20  %tmp_8_i = mul i15 %tmp_2_i_cast, %tmp_4_i_cast


 <State 9>: 5.51ns
ST_9: tmp_7_i (83)  [2/3] 5.51ns  loc: yuv_filter.c:137->yuv_filter.c:24
:16  %tmp_7_i = mul i15 %tmp_i_cast, %tmp_6_i_cast

ST_9: tmp_i (85)  [2/3] 5.51ns  loc: yuv_filter.c:138->yuv_filter.c:24
:18  %tmp_i = mul i15 %tmp_1_i_cast, %tmp_9_i_cast

ST_9: tmp_8_i (87)  [2/3] 5.51ns  loc: yuv_filter.c:139->yuv_filter.c:24
:20  %tmp_8_i = mul i15 %tmp_2_i_cast, %tmp_4_i_cast


 <State 10>: 5.51ns
ST_10: tmp_7_i (83)  [1/3] 5.51ns  loc: yuv_filter.c:137->yuv_filter.c:24
:16  %tmp_7_i = mul i15 %tmp_i_cast, %tmp_6_i_cast

ST_10: tmp_i (85)  [1/3] 5.51ns  loc: yuv_filter.c:138->yuv_filter.c:24
:18  %tmp_i = mul i15 %tmp_1_i_cast, %tmp_9_i_cast

ST_10: tmp_8_i (87)  [1/3] 5.51ns  loc: yuv_filter.c:139->yuv_filter.c:24
:20  %tmp_8_i = mul i15 %tmp_2_i_cast, %tmp_4_i_cast

ST_10: tmp_10_i (88)  [1/1] 0.00ns  loc: yuv_filter.c:140->yuv_filter.c:24
:21  %tmp_10_i = call i8 @_ssdm_op_PartSelect.i8.i15.i32.i32(i15 %tmp_7_i, i32 7, i32 14)

ST_10: tmp_11_i (90)  [1/1] 0.00ns  loc: yuv_filter.c:141->yuv_filter.c:24
:23  %tmp_11_i = call i8 @_ssdm_op_PartSelect.i8.i15.i32.i32(i15 %tmp_i, i32 7, i32 14)

ST_10: tmp_12_i (92)  [1/1] 0.00ns  loc: yuv_filter.c:142->yuv_filter.c:24
:25  %tmp_12_i = call i8 @_ssdm_op_PartSelect.i8.i15.i32.i32(i15 %tmp_8_i, i32 7, i32 14)


 <State 11>: 3.25ns
ST_11: scale_channels_ch3_a (73)  [1/1] 0.00ns  loc: yuv_filter.c:142->yuv_filter.c:24
:6  %scale_channels_ch3_a = getelementptr [2457600 x i8]* %p_scale_channels_ch3, i64 0, i64 %tmp_3_cast

ST_11: scale_channels_ch1_a (74)  [1/1] 0.00ns  loc: yuv_filter.c:140->yuv_filter.c:24
:7  %scale_channels_ch1_a = getelementptr [2457600 x i8]* %p_scale_channels_ch1, i64 0, i64 %tmp_3_cast

ST_11: scale_channels_ch2_a (78)  [1/1] 0.00ns  loc: yuv_filter.c:141->yuv_filter.c:24
:11  %scale_channels_ch2_a = getelementptr [2457600 x i8]* %p_scale_channels_ch2, i64 0, i64 %tmp_3_cast

ST_11: StgValue_103 (89)  [2/2] 3.25ns  loc: yuv_filter.c:140->yuv_filter.c:24
:22  store i8 %tmp_10_i, i8* %scale_channels_ch1_a, align 1

ST_11: StgValue_104 (91)  [2/2] 3.25ns  loc: yuv_filter.c:141->yuv_filter.c:24
:24  store i8 %tmp_11_i, i8* %scale_channels_ch2_a, align 1

ST_11: StgValue_105 (93)  [2/2] 3.25ns  loc: yuv_filter.c:142->yuv_filter.c:24
:26  store i8 %tmp_12_i, i8* %scale_channels_ch3_a, align 1


 <State 12>: 3.25ns
ST_12: StgValue_106 (67)  [1/1] 0.00ns  loc: yuv_filter.c:132->yuv_filter.c:24
:0  call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str6) nounwind

ST_12: tmp_14_i (68)  [1/1] 0.00ns  loc: yuv_filter.c:132->yuv_filter.c:24
:1  %tmp_14_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str6)

ST_12: StgValue_108 (69)  [1/1] 0.00ns  loc: yuv_filter.c:133->yuv_filter.c:24
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 200, i32 1280, i32 740, [1 x i8]* @p_str1) nounwind

ST_12: StgValue_109 (89)  [1/2] 3.25ns  loc: yuv_filter.c:140->yuv_filter.c:24
:22  store i8 %tmp_10_i, i8* %scale_channels_ch1_a, align 1

ST_12: StgValue_110 (91)  [1/2] 3.25ns  loc: yuv_filter.c:141->yuv_filter.c:24
:24  store i8 %tmp_11_i, i8* %scale_channels_ch2_a, align 1

ST_12: StgValue_111 (93)  [1/2] 3.25ns  loc: yuv_filter.c:142->yuv_filter.c:24
:26  store i8 %tmp_12_i, i8* %scale_channels_ch3_a, align 1

ST_12: empty (94)  [1/1] 0.00ns  loc: yuv_filter.c:143->yuv_filter.c:24
:27  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str6, i32 %tmp_14_i)

ST_12: StgValue_113 (95)  [1/1] 0.00ns  loc: yuv_filter.c:132->yuv_filter.c:24
:28  br label %3


 <State 13>: 0.00ns
ST_13: call_ret1 (100)  [1/2] 0.00ns  loc: yuv_filter.c:25
yuv_scale.exit:0  %call_ret1 = call fastcc { i16, i16 } @yuv2rgb([2457600 x i8]* %p_scale_channels_ch1, [2457600 x i8]* %p_scale_channels_ch2, [2457600 x i8]* %p_scale_channels_ch3, i16 %p_yuv_width, i16 %p_yuv_height, [2457600 x i8]* %out_channels_ch1, [2457600 x i8]* %out_channels_ch2, [2457600 x i8]* %out_channels_ch3)

ST_13: out_width_ret (101)  [1/1] 0.00ns  loc: yuv_filter.c:25
yuv_scale.exit:1  %out_width_ret = extractvalue { i16, i16 } %call_ret1, 0

ST_13: StgValue_116 (102)  [1/1] 0.00ns  loc: yuv_filter.c:25
yuv_scale.exit:2  call void @_ssdm_op_Write.ap_auto.i16P(i16* %out_width, i16 %out_width_ret)

ST_13: out_height_ret (103)  [1/1] 0.00ns  loc: yuv_filter.c:25
yuv_scale.exit:3  %out_height_ret = extractvalue { i16, i16 } %call_ret1, 1

ST_13: StgValue_118 (104)  [1/1] 0.00ns  loc: yuv_filter.c:25
yuv_scale.exit:4  call void @_ssdm_op_Write.ap_auto.i16P(i16* %out_height, i16 %out_height_ret)

ST_13: StgValue_119 (105)  [1/1] 0.00ns  loc: yuv_filter.c:26
yuv_scale.exit:5  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('x') with incoming values : ('x', yuv_filter.c:129->yuv_filter.c:24) [47]  (1.77 ns)

 <State 3>: 3.17ns
The critical path consists of the following:
	'phi' operation ('x') with incoming values : ('x', yuv_filter.c:129->yuv_filter.c:24) [47]  (0 ns)
	'add' operation ('tmp_2', yuv_filter.c:142->yuv_filter.c:24) [59]  (3.17 ns)

 <State 4>: 6.42ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', yuv_filter.c:132->yuv_filter.c:24) [62]  (0 ns)
	'add' operation ('tmp_3', yuv_filter.c:142->yuv_filter.c:24) [71]  (3.17 ns)
	'getelementptr' operation ('yuv_channels_ch1_add', yuv_filter.c:134->yuv_filter.c:24) [77]  (0 ns)
	'load' operation ('Y', yuv_filter.c:134->yuv_filter.c:24) on array '_yuv.channels.ch1', yuv_filter.c:17 [79]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('Y', yuv_filter.c:134->yuv_filter.c:24) on array '_yuv.channels.ch1', yuv_filter.c:17 [79]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('Y', yuv_filter.c:134->yuv_filter.c:24) on array '_yuv.channels.ch1', yuv_filter.c:17 [79]  (3.25 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'load' operation ('Y', yuv_filter.c:134->yuv_filter.c:24) on array '_yuv.channels.ch1', yuv_filter.c:17 [79]  (3.25 ns)

 <State 8>: 5.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7_i', yuv_filter.c:137->yuv_filter.c:24) [83]  (5.51 ns)

 <State 9>: 5.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7_i', yuv_filter.c:137->yuv_filter.c:24) [83]  (5.51 ns)

 <State 10>: 5.51ns
The critical path consists of the following:
	'mul' operation ('tmp_7_i', yuv_filter.c:137->yuv_filter.c:24) [83]  (5.51 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('scale_channels_ch3_a', yuv_filter.c:142->yuv_filter.c:24) [73]  (0 ns)
	'store' operation (yuv_filter.c:142->yuv_filter.c:24) of variable 'tmp_12_i', yuv_filter.c:142->yuv_filter.c:24 on array '_scale.channels.ch3', yuv_filter.c:18 [93]  (3.25 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'store' operation (yuv_filter.c:140->yuv_filter.c:24) of variable 'tmp_10_i', yuv_filter.c:140->yuv_filter.c:24 on array '_scale.channels.ch1', yuv_filter.c:18 [89]  (3.25 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
